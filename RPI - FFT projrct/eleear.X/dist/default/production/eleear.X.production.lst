

HI-TECH Software LITE Macro Assembler (PIC18) V9.65 build 7190 
                                                       Wed Apr 15 11:43:10 2015

HI-TECH Software Omniscient Code Generator build 7190
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 7190"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           # 10 "main.c"
   102                           	global __config1 ;#
   103                           # 10 "main.c"
   104  000000                     	__config1 equ 0xFFFF & 0xFFFF & 0xF0FF ;#
   105                           # 11 "main.c"
   106                           	global __config2 ;#
   107                           # 11 "main.c"
   108  000000                     	__config2 equ 0xFFF9 & 0xFFFF & 0xFEFF ;#
   109                           # 12 "main.c"
   110                           	global __config3 ;#
   111                           # 12 "main.c"
   112  000000                     	__config3 equ 0x7FFF & 0xFFFF & 0xFDFF & 0xFFFF
                                  ;#
   113                           # 13 "main.c"
   114                           	global __config4 ;#
   115                           # 13 "main.c"
   116  000000                     	__config4 equ 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFE
                                  ;#
   117                           # 15 "main.c"
   118                           	global __config5 ;#
   119                           # 15 "main.c"
   120  000000                     	__config5 equ 0xFFFF ;#
   121                           # 16 "main.c"
   122                           	global __config6 ;#
   123                           # 16 "main.c"
   124  000000                     	__config6 equ 0xFFFF ;#
   125                           # 17 "main.c"
   126                           	global __config7 ;#
   127                           # 17 "main.c"
   128  000000                     	__config7 equ 0xBFFF ;#
   129                           	GLOBAL	__activetblptr
   130  000000                     __activetblptr	EQU	3
   131                           	GLOBAL	__smallconst,__Lsmallconst
   132  000000                     __smallconst	EQU	__Lsmallconst
   133                           	GLOBAL	__mediumconst,__Lmediumconst
   134  000000                     __mediumconst	EQU	__Lmediumconst
   135                           	GLOBAL	__Ldata
   136  000000                     __Ldata	EQU	189
   137  000000                     Read_FFT@i	equ	??_Read_FFT+0
   138                           	global	Read_FFT@i
   139  000000                     Read_FFT@idx_addr	equ	?_Read_FFT+0
   140                           	global	Read_FFT@idx_addr
   141  000000                     Read_FFT@no_readings	equ	?_Read_FFT+2
   142                           	global	Read_FFT@no_readings
   143  000000                     i2c_write@data	equ	?_i2c_write+0
   144                           	global	i2c_write@data
   145  000000                     i2c_master_ack@ack_type	equ	?_i2c_master_ack+0
   146                           	global	i2c_master_ack@ack_type
   147  000000                     ___awdiv@counter	equ	??___awdiv+0
   148                           	global	___awdiv@counter
   149  000000                     ___awdiv@sign	equ	??___awdiv+1
   150                           	global	___awdiv@sign
   151  000000                     ___awdiv@quotient	equ	??___awdiv+2
   152                           	global	___awdiv@quotient
   153  000000                     ___awdiv@dividend	equ	?___awdiv+0
   154                           	global	___awdiv@dividend
   155  000000                     ___awdiv@divisor	equ	?___awdiv+2
   156                           	global	___awdiv@divisor
   157  000000                     LCD_build@i	equ	??_LCD_build+0
   158                           	global	LCD_build@i
   159  000000                     LCD_build@location	equ	?_LCD_build+0
   160                           	global	LCD_build@location
   161  000000                     LCD_build@ptr	equ	?_LCD_build+1
   162                           	global	LCD_build@ptr
   163  000000                     i2c_start@stype	equ	?_i2c_start+0
   164                           	global	i2c_start@stype
   165  000000                     lcd_data@data	equ	?_lcd_data+0
   166                           	global	lcd_data@data
   167  000000                     lcd_command@cmd	equ	?_lcd_command+0
   168                           	global	lcd_command@cmd
   169  000000                     DelayMs@delay_cnst	equ	??_DelayMs+0
   170                           	global	DelayMs@delay_cnst
   171  000000                     DelayMs@Ms	equ	?_DelayMs+0
   172                           	global	DelayMs@Ms
   173                           ;Data sizes: Strings 0, constant 68, data 180, b
                                 ss 0, persistent 0 stack 31
   174                           	global	_main
   175                           	global	??_main
   176                           	global	?_main
   177                           
   178                           ; *************** function _main ***************
                                 **
   179                           ; Defined at:
   180                           ;		line 39 in file "main.c"
   181                           ; Parameters:
   182                           ;		None
   183                           ; Auto variables:
   184                           ;		dec_key     	       	type: unsigned char 
   185                           ; Return value:
   186                           ;		type: void 
   187                           ;		size: 0
   188                           ; Registers used:
   189                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
                                 , prodh, cstack
   190                           ; Tracked objects:
   191                           ;		On entry : 0/0
   192                           ;		On exit  : 0/0
   193                           ;		Unchanged: 0/0
   194                           ; Data sizes:
   195                           ;		Autos:    0
   196                           ;		Params:   0
   197                           ;		Temp:     1
   198                           ;		Total:    1
   199                           ; This function calls:
   200                           ;		_USARTinit
   201                           ;		_lcd_init
   202                           ;		_Initcustom_char
   203                           ;		_Adc_init
   204                           ;		_Init_i2c
   205                           ;		_Init_stat_isr
   206                           ;		_Init_PWM
   207                           ;		_Set_PWM_Duty
   208                           ;		_Read_FFT
   209                           ;		_Calc_percentageFull
   210                           ;		_Disp_Mill_fill
   211                           ; This function is called by:
   212                           ;		Startup code after reset
   213                           ; This function uses a non-reentrant model
   214                           ; 
   215                                   psect   text0,class=CODE,space=0,reloc=2
   216                           
   217                           	opt lm
   218                           	file	"main.c"
   219                           	line	39
   220  000000                     	__size_of_main	equ	__end_of_main-_main
   221                                   psect   text0
   222                           ;main.c: 38: void main(void)
   223                           ;main.c: 39: {
   224                           	
   225  001922                     _main:		; BSR set to: ?
   226                           
   227                           	opt stack 30
   228                           	line	42
   229                           ;main.c: 40: unsigned char dec_key;
   230                           ;main.c: 42: OSCTUNE = 0;
   231  001922  0102               	movlb	2	; () banked
   232  001924  6F00               	movwf	(??_main+0+0)&0ffh
   233  001926  0E00               	movlw	low(0)
   234  001928  6E9B               	movwf	((c:3995)),c
   235  00192A  0102               	movlb	2	; () banked
   236  00192C  5100               	movf	(??_main+0+0)&0ffh,w
   237                           	line	43
   238                           ;main.c: 43: OSCCON = 0b01100011;
   239  00192E  0E63               	movlw	low(063h)
   240  001930  6ED3               	movwf	((c:4051)),c	;volatile
   241                           	line	48
   242                           ;main.c: 48: TRISA=0b11000001;
   243  001932  0EC1               	movlw	low(0C1h)
   244  001934  6E92               	movwf	((c:3986)),c	;volatile
   245                           	line	51
   246                           ;main.c: 51: TRISC=0b0111;
   247  001936  0E07               	movlw	low(07h)
   248  001938  6E94               	movwf	((c:3988)),c	;volatile
   249                           	line	52
   250                           ;main.c: 52: TRISE=0b000000000;
   251  00193A  0E00               	movlw	low(0)
   252  00193C  6E96               	movwf	((c:3990)),c	;volatile
   253                           	line	53
   254                           ;main.c: 53: TRISB7=0; TRISD3=0;
   255  00193E  9E93               	bcf	c:(31903/8),(31903)&7	;volatile
   256  001940  9695               	bcf	c:(31915/8),(31915)&7	;volatile
   257                           	line	54
   258                           ;main.c: 54: TRISD2=0; TRISD1=0;
   259  001942  9495               	bcf	c:(31914/8),(31914)&7	;volatile
   260  001944  9295               	bcf	c:(31913/8),(31913)&7	;volatile
   261                           	line	55
   262                           ;main.c: 55: TRISD0=1; TRISB0=0;
   263  001946  8095               	bsf	c:(31912/8),(31912)&7	;volatile
   264  001948  9093               	bcf	c:(31896/8),(31896)&7	;volatile
   265                           	line	56
   266                           ;main.c: 56: TRISB1=0; TRISD4=0;
   267  00194A  9293               	bcf	c:(31897/8),(31897)&7	;volatile
   268  00194C  9895               	bcf	c:(31916/8),(31916)&7	;volatile
   269                           	line	57
   270                           ;main.c: 57: TRISD5=0; TRISD6=0; TRISD7=0;
   271  00194E  9A95               	bcf	c:(31917/8),(31917)&7	;volatile
   272  001950  9C95               	bcf	c:(31918/8),(31918)&7	;volatile
   273  001952  9E95               	bcf	c:(31919/8),(31919)&7	;volatile
   274                           	line	59
   275                           ;main.c: 59: USARTinit();
   276  001954  EC0B  F00F         	call	_USARTinit	;wreg free
   277                           	line	60
   278                           ;main.c: 60: lcd_init();
   279  001958  EC83  F00A         	call	_lcd_init	;wreg free
   280                           	line	61
   281                           ;main.c: 61: Initcustom_char();
   282  00195C  ECF8  F00B         	call	_Initcustom_char	;wreg free
   283                           	line	62
   284                           ;main.c: 62: cur_gain = 0.25;
   285  001960  0E00               	movlw	low(float24(0.25000000000000000))
   286  001962  0100               	movlb	0	; () banked
   287  001964  0100               	movlb	0	; () banked
   288  001966  6FBA               	movwf	((186))&0ffh
   289  001968  0E80               	movlw	high(float24(0.25000000000000000))
   290  00196A  0100               	movlb	0	; () banked
   291  00196C  0100               	movlb	0	; () banked
   292  00196E  6FBB               	movwf	((186+1))&0ffh
   293  001970  0E3E               	movlw	low highword(float24(0.25000000000000000)
                                 )
   294  001972  0100               	movlb	0	; () banked
   295  001974  0100               	movlb	0	; () banked
   296  001976  6FBC               	movwf	((186+2))&0ffh
   297                           
   298                           	line	71
   299                           ;main.c: 71: Adc_init();
   300  001978  ECD4  F00E         	call	_Adc_init	;wreg free
   301                           	line	72
   302                           ;main.c: 72: Init_i2c();
   303  00197C  EC72  F00F         	call	_Init_i2c	;wreg free
   304                           	line	73
   305                           ;main.c: 73: Init_stat_isr();
   306  001980  EC8C  F00F         	call	_Init_stat_isr	;wreg free
   307                           	line	74
   308                           ;main.c: 74: Init_PWM();
   309  001984  ECF0  F00E         	call	_Init_PWM	;wreg free
   310                           	line	75
   311                           ;main.c: 75: dutyvolt = 0; dutycurrent = 0;
   312  001988  0102               	movlb	2	; () banked
   313  00198A  6F00               	movwf	(??_main+0+0)&0ffh
   314  00198C  0E00               	movlw	low(0)
   315  00198E  0100               	movlb	0	; () banked
   316  001990  0100               	movlb	0	; () banked
   317  001992  6FA5               	movwf	((165))&0ffh
   318  001994  0102               	movlb	2	; () banked
   319  001996  5100               	movf	(??_main+0+0)&0ffh,w
   320  001998  0102               	movlb	2	; () banked
   321  00199A  6F00               	movwf	(??_main+0+0)&0ffh
   322  00199C  0E00               	movlw	low(0)
   323  00199E  0100               	movlb	0	; () banked
   324  0019A0  0100               	movlb	0	; () banked
   325  0019A2  6FA6               	movwf	((166))&0ffh
   326  0019A4  0102               	movlb	2	; () banked
   327  0019A6  5100               	movf	(??_main+0+0)&0ffh,w
   328                           	line	76
   329                           ;main.c: 76: Set_PWM_Duty();
   330  0019A8  EC33  F00E         	call	_Set_PWM_Duty	;wreg free
   331                           	line	87
   332                           ;main.c: 87: FFT_ready_flag = 0;
   333  0019AC  0102               	movlb	2	; () banked
   334  0019AE  6F00               	movwf	(??_main+0+0)&0ffh
   335  0019B0  0E00               	movlw	low(0)
   336  0019B2  0100               	movlb	0	; () banked
   337  0019B4  0100               	movlb	0	; () banked
   338  0019B6  6FA4               	movwf	((164))&0ffh
   339  0019B8  0102               	movlb	2	; () banked
   340  0019BA  5100               	movf	(??_main+0+0)&0ffh,w
   341                           	line	88
   342                           ;main.c: 88: while(1)
   343                           	
   344  0019BC                     l119:		; BSR set to: ?
   345                           
   346                           	line	90
   347                           ;main.c: 89: {
   348                           ;main.c: 90: if(FFT_ready_flag)
   349  0019BC  0100               	movlb	0	; () banked
   350  0019BE  0100               	movlb	0	; () banked
   351  0019C0  51A4               	movf	((164))&0ffh,w
   352  0019C2  B4D8               	btfsc	status,2
   353  0019C4  EFE6  F00C         	goto	u2111
   354  0019C8  EFE8  F00C         	goto	u2110
   355  0019CC                     u2111:
   356  0019CC  EF07  F00D         	goto	l118
   357  0019D0                     u2110:
   358                           	line	92
   359                           ;main.c: 91: {
   360                           ;main.c: 92: INT0IE = 0;
   361  0019D0  98F2               	bcf	c:(32660/8),(32660)&7
   362                           	line	94
   363                           ;main.c: 94: Read_FFT(0,128);
   364  0019D2  0102               	movlb	2	; () banked
   365  0019D4  6F00               	movwf	(??_main+0+0)&0ffh
   366  0019D6  0E80               	movlw	low(080h)
   367  0019D8  0102               	movlb	2	; () banked
   368  0019DA  0102               	movlb	2	; () banked
   369  0019DC  6F03               	movwf	(0+(?_Read_FFT+02h))&0ffh
   370  0019DE  0102               	movlb	2	; () banked
   371  0019E0  5100               	movf	(??_main+0+0)&0ffh,w
   372  0019E2  0E00               	movlw	low(0)
   373  0019E4  0102               	movlb	2	; () banked
   374  0019E6  0102               	movlb	2	; () banked
   375  0019E8  6F01               	movwf	((?_Read_FFT))&0ffh
   376  0019EA  0E00               	movlw	high(0)
   377  0019EC  0102               	movlb	2	; () banked
   378  0019EE  6F02               	movwf	((?_Read_FFT+1))&0ffh
   379  0019F0  EC82  F00D         	call	_Read_FFT	;wreg free
   380                           	line	95
   381                           ;main.c: 95: FFT_ready_flag = 0;
   382  0019F4  0102               	movlb	2	; () banked
   383  0019F6  6F00               	movwf	(??_main+0+0)&0ffh
   384  0019F8  0E00               	movlw	low(0)
   385  0019FA  0100               	movlb	0	; () banked
   386  0019FC  0100               	movlb	0	; () banked
   387  0019FE  6FA4               	movwf	((164))&0ffh
   388  001A00  0102               	movlb	2	; () banked
   389  001A02  5100               	movf	(??_main+0+0)&0ffh,w
   390                           	line	97
   391                           ;main.c: 97: Calc_percentageFull();
   392  001A04  EC90  F00F         	call	_Calc_percentageFull	;wreg free
   393                           	line	98
   394                           ;main.c: 98: Disp_Mill_fill();
   395  001A08  EC91  F00F         	call	_Disp_Mill_fill	;wreg free
   396                           	line	100
   397                           ;main.c: 100: INT0IE = 1;
   398  001A0C  88F2               	bsf	c:(32660/8),(32660)&7
   399                           	line	101
   400                           	
   401  001A0E                     l121:		; BSR set to: ?
   402                           
   403                           	line	102
   404                           	
   405  001A0E                     l118:		; BSR set to: ?
   406                           
   407                           	line	88
   408  001A0E  EFDE  F00C         	goto	l119
   409                           	global	start
   410  001A12  EF0C  F000         	goto	start
   411                           	opt stack 0
   412                           GLOBAL __end_of_main
   413  001A16                     	__end_of_main:
   414                           	FNSIZE	_main,1,0
   415                           ; =============== function _main ends ==========
                                 ==
   416                           
   417                                   psect   text1,class=CODE,space=0,reloc=2
   418                           	line	103
   419                           
   420                           	opt lm
   421                           	signat	_main,88
   422                           	global	_Init_PWM
   423                           	global	??_Init_PWM
   424                           	global	?_Init_PWM
   425                           
   426                           ; *************** function _Init_PWM ***********
                                 ******
   427                           ; Defined at:
   428                           ;		line 4 in file "Pwm.c"
   429                           ; Parameters:
   430                           ;		None
   431                           ; Auto variables:
   432                           ;		None
   433                           ; Return value:
   434                           ;		type: void 
   435                           ;		size: 0
   436                           ; Registers used:
   437                           ;		wreg, status,2
   438                           ; Tracked objects:
   439                           ;		On entry : 0/0
   440                           ;		On exit  : 0/0
   441                           ;		Unchanged: 0/0
   442                           ; Data sizes:
   443                           ;		Autos:    0
   444                           ;		Params:   0
   445                           ;		Temp:     1
   446                           ;		Total:    1
   447                           ; This function calls:
   448                           ;		Nothing
   449                           ; This function is called by:
   450                           ;		_main
   451                           ; This function uses a non-reentrant model
   452                           ; 
   453                           	file	"Pwm.c"
   454                           	line	4
   455  000000                     	__size_of_Init_PWM	equ	__end_of_Init_PWM-_Init_
                                 PWM
   456                           ;Pwm.c: 3: void Init_PWM( void )
   457                           ;Pwm.c: 4: {
   458                           	
   459  001DE0                     _Init_PWM:		; BSR set to: ?
   460                           
   461                           	opt stack 29
   462                           	line	5
   463  001DE0  0E0C               	movlw	low(0Ch)
   464  001DE2  6EBD               	movwf	((c:4029)),c	;volatile
   465                           	line	6
   466                           ;Pwm.c: 6: CCP2CON = 0b00001100;
   467  001DE4  0E0C               	movlw	low(0Ch)
   468  001DE6  6EBA               	movwf	((c:4026)),c	;volatile
   469                           	line	7
   470                           ;Pwm.c: 7: TRISC2 = 0;TRISC1 = 0;
   471  001DE8  9494               	bcf	c:(31906/8),(31906)&7	;volatile
   472  001DEA  9294               	bcf	c:(31905/8),(31905)&7	;volatile
   473                           	line	8
   474                           ;Pwm.c: 8: T2CON = 0b00000100;
   475  001DEC  0102               	movlb	2	; () banked
   476  001DEE  6F01               	movwf	(??_Init_PWM+0+0)&0ffh
   477  001DF0  0E04               	movlw	low(04h)
   478  001DF2  6ECA               	movwf	((c:4042)),c
   479  001DF4  0102               	movlb	2	; () banked
   480  001DF6  5101               	movf	(??_Init_PWM+0+0)&0ffh,w
   481                           	line	9
   482                           ;Pwm.c: 9: PR2 = 249;
   483  001DF8  0102               	movlb	2	; () banked
   484  001DFA  6F01               	movwf	(??_Init_PWM+0+0)&0ffh
   485  001DFC  0EF9               	movlw	low(0F9h)
   486  001DFE  6ECB               	movwf	((c:4043)),c
   487  001E00  0102               	movlb	2	; () banked
   488  001E02  5101               	movf	(??_Init_PWM+0+0)&0ffh,w
   489                           	line	10
   490                           ;Pwm.c: 10: CCPR1L = 25;
   491  001E04  0E19               	movlw	low(019h)
   492  001E06  6EBE               	movwf	((c:4030)),c	;volatile
   493                           	line	11
   494                           ;Pwm.c: 11: CCPR2L = 25;
   495  001E08  0E19               	movlw	low(019h)
   496  001E0A  6EBB               	movwf	((c:4027)),c	;volatile
   497                           	line	12
   498                           ;Pwm.c: 12: CCPR1L = 0; CCPR2L = 0;
   499  001E0C  0E00               	movlw	low(0)
   500  001E0E  6EBE               	movwf	((c:4030)),c	;volatile
   501  001E10  0E00               	movlw	low(0)
   502  001E12  6EBB               	movwf	((c:4027)),c	;volatile
   503                           	line	13
   504                           ;Pwm.c: 13: }
   505  001E14                     l1142:
   506                           			; BSR set to: ?
   507                           
   508  001E14  0012               	return
   509                           	opt stack 0
   510                           GLOBAL __end_of_Init_PWM
   511  001E16                     	__end_of_Init_PWM:
   512                           	FNSIZE	_Init_PWM,1,0
   513                           ; =============== function _Init_PWM ends ======
                                 ======
   514                           
   515                           	signat	_Init_PWM,88
   516                           	global	_Init_stat_isr
   517                           	global	??_Init_stat_isr
   518                           	global	?_Init_stat_isr
   519                           
   520                           ; *************** function _Init_stat_isr ******
                                 ***********
   521                           ; Defined at:
   522                           ;		line 21 in file "main.c"
   523                           ; Parameters:
   524                           ;		None
   525                           ; Auto variables:
   526                           ;		None
   527                           ; Return value:
   528                           ;		type: void 
   529                           ;		size: 0
   530                           ; Registers used:
   531                           ;		None
   532                           ; Tracked objects:
   533                           ;		On entry : 0/0
   534                           ;		On exit  : 0/0
   535                           ;		Unchanged: 0/0
   536                           ; Data sizes:
   537                           ;		Autos:    0
   538                           ;		Params:   0
   539                           ;		Temp:     0
   540                           ;		Total:    0
   541                           ; This function calls:
   542                           ;		Nothing
   543                           ; This function is called by:
   544                           ;		_main
   545                           ; This function uses a non-reentrant model
   546                           ; 
   547                                   psect   text2,class=CODE,space=0,reloc=2
   548                           
   549                           	opt lm
   550                           	file	"main.c"
   551                           	line	21
   552  000000                     	__size_of_Init_stat_isr	equ	__end_of_Init_stat_
                                 isr-_Init_stat_isr
   553                           ;main.c: 10: asm("\tglobal __config" "1"); asm("
                                 \t__config" "1" " equ " "0xFFFF & 0xFFFF & 0xF0F
                                 F");
   554                           ;main.c: 11: asm("\tglobal __config" "2"); asm("
                                 \t__config" "2" " equ " "0xFFF9 & 0xFFFF & 0xFEF
                                 F");
   555                           ;main.c: 12: asm("\tglobal __config" "3"); asm("
                                 \t__config" "3" " equ " "0x7FFF & 0xFFFF & 0xFDF
                                 F & 0xFFFF");
   556                           ;main.c: 13: asm("\tglobal __config" "4"); asm("
                                 \t__config" "4" " equ " "0xFFFF & 0xFFFF & 0xFFF
                                 F & 0xFFFE");
   557                           ;main.c: 15: asm("\tglobal __config" "5"); asm("
                                 \t__config" "5" " equ " "0xFFFF");
   558                           ;main.c: 16: asm("\tglobal __config" "6"); asm("
                                 \t__config" "6" " equ " "0xFFFF");
   559                           	
   560  001F18                     _Init_stat_isr:		; BSR set to: ?
   561                           
   562                           	opt stack 29
   563                           	line	22
   564  001F18  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
   565                           	line	23
   566                           ;main.c: 23: INT0IE = 1;
   567  001F1A  88F2               	bsf	c:(32660/8),(32660)&7
   568                           	line	24
   569                           ;main.c: 24: INTEDG0 = 1;
   570  001F1C  8CF1               	bsf	c:(32654/8),(32654)&7
   571                           	line	25
   572                           ;main.c: 25: }
   573  001F1E                     l115:
   574                           			; BSR set to: ?
   575                           
   576  001F1E  0012               	return
   577                           	opt stack 0
   578                           GLOBAL __end_of_Init_stat_isr
   579  001F20                     	__end_of_Init_stat_isr:
   580                           	FNSIZE	_Init_stat_isr,0,0
   581                           ; =============== function _Init_stat_isr ends =
                                 ===========
   582                           
   583                           	signat	_Init_stat_isr,88
   584                           	global	_Init_i2c
   585                           	global	??_Init_i2c
   586                           	global	?_Init_i2c
   587                           
   588                           ; *************** function _Init_i2c ***********
                                 ******
   589                           ; Defined at:
   590                           ;		line 100 in file "i2c.c"
   591                           ; Parameters:
   592                           ;		None
   593                           ; Auto variables:
   594                           ;		None
   595                           ; Return value:
   596                           ;		type: void 
   597                           ;		size: 0
   598                           ; Registers used:
   599                           ;		wreg, status,2, status,0
   600                           ; Tracked objects:
   601                           ;		On entry : 0/0
   602                           ;		On exit  : 0/0
   603                           ;		Unchanged: 0/0
   604                           ; Data sizes:
   605                           ;		Autos:    0
   606                           ;		Params:   0
   607                           ;		Temp:     1
   608                           ;		Total:    1
   609                           ; This function calls:
   610                           ;		Nothing
   611                           ; This function is called by:
   612                           ;		_main
   613                           ; This function uses a non-reentrant model
   614                           ; 
   615                                   psect   text3,class=CODE,space=0,reloc=2
   616                           
   617                           	opt lm
   618                           	file	"i2c.c"
   619                           	line	100
   620  000000                     	__size_of_Init_i2c	equ	__end_of_Init_i2c-_Init_
                                 i2c
   621                           ;i2c.c: 99: void Init_i2c( void )
   622                           ;i2c.c: 100: {
   623                           	
   624  001EE4                     _Init_i2c:		; BSR set to: ?
   625                           
   626                           	opt stack 29
   627                           	line	101
   628  001EE4  8694               	bsf	c:(31907/8),(31907)&7	;volatile
   629                           	line	102
   630                           ;i2c.c: 102: TRISC4 = 1;
   631  001EE6  8894               	bsf	c:(31908/8),(31908)&7	;volatile
   632                           	line	104
   633                           ;i2c.c: 104: SSPSTAT |= 0xc0;
   634  001EE8  0EC0               	movlw	(0C0h)&0ffh
   635  001EEA  12C7               	iorwf	((c:4039)),c	;volatile
   636                           	line	105
   637                           ;i2c.c: 105: SSPCON1 |= 0x08;
   638  001EEC  86C6               	bsf	(0+(3/8)+(c:4038)),c,(3)&7	;volatile
   639                           	line	106
   640                           ;i2c.c: 106: SSPCON2 |= 0x80;
   641  001EEE  8EC5               	bsf	(0+(7/8)+(c:4037)),c,(7)&7	;volatile
   642                           	line	108
   643                           ;i2c.c: 108: SSPADD = 0x09;
   644  001EF0  0102               	movlb	2	; () banked
   645  001EF2  6F01               	movwf	(??_Init_i2c+0+0)&0ffh
   646  001EF4  0E09               	movlw	low(09h)
   647  001EF6  6EC8               	movwf	((c:4040)),c
   648  001EF8  0102               	movlb	2	; () banked
   649  001EFA  5101               	movf	(??_Init_i2c+0+0)&0ffh,w
   650                           	line	110
   651                           ;i2c.c: 110: SSPEN = 1;
   652  001EFC  8AC6               	bsf	c:(32309/8),(32309)&7
   653                           	line	111
   654                           ;i2c.c: 111: SSPIF = 0;
   655  001EFE  969E               	bcf	c:(31987/8),(31987)&7	;volatile
   656                           	line	112
   657                           ;i2c.c: 112: }
   658  001F00                     l714:
   659                           			; BSR set to: ?
   660                           
   661  001F00  0012               	return
   662                           	opt stack 0
   663                           GLOBAL __end_of_Init_i2c
   664  001F02                     	__end_of_Init_i2c:
   665                           	FNSIZE	_Init_i2c,1,0
   666                           ; =============== function _Init_i2c ends ======
                                 ======
   667                           
   668                           	signat	_Init_i2c,88
   669                           	global	_Set_PWM_Duty
   670                           	global	??_Set_PWM_Duty
   671                           	global	?_Set_PWM_Duty
   672                           
   673                           ; *************** function _Set_PWM_Duty *******
                                 **********
   674                           ; Defined at:
   675                           ;		line 16 in file "Pwm.c"
   676                           ; Parameters:
   677                           ;		None
   678                           ; Auto variables:
   679                           ;		None
   680                           ; Return value:
   681                           ;		type: void 
   682                           ;		size: 0
   683                           ; Registers used:
   684                           ;		wreg, status,2, status,0, cstack
   685                           ; Tracked objects:
   686                           ;		On entry : 0/0
   687                           ;		On exit  : 0/0
   688                           ;		Unchanged: 0/0
   689                           ; Data sizes:
   690                           ;		Autos:    0
   691                           ;		Params:   0
   692                           ;		Temp:     0
   693                           ;		Total:    0
   694                           ; This function calls:
   695                           ;		___awdiv
   696                           ; This function is called by:
   697                           ;		_main
   698                           ; This function uses a non-reentrant model
   699                           ; 
   700                                   psect   text4,class=CODE,space=0,reloc=2
   701                           
   702                           	opt lm
   703                           	file	"Pwm.c"
   704                           	line	16
   705  000000                     	__size_of_Set_PWM_Duty	equ	__end_of_Set_PWM_Dut
                                 y-_Set_PWM_Duty
   706                           ;Pwm.c: 15: void Set_PWM_Duty( void )
   707                           ;Pwm.c: 16: {
   708                           	
   709  001C66                     _Set_PWM_Duty:		; BSR set to: ?
   710                           
   711                           	opt stack 29
   712                           	line	17
   713                           ;Pwm.c: 17: CCPR1L = 250/(100/dutyvolt);
   714  001C66  0100               	movlb	0	; () banked
   715  001C68  0102               	movlb	2	; () banked
   716  001C6A  C0A5 F203          	movff	(165),0+(?___awdiv+02h)
   717  001C6E  0102               	movlb	2	; () banked
   718  001C70  0102               	movlb	2	; () banked
   719  001C72  6B04               	clrf	(1+(?___awdiv+02h))&0ffh
   720  001C74  0E64               	movlw	low(064h)
   721  001C76  0102               	movlb	2	; () banked
   722  001C78  0102               	movlb	2	; () banked
   723  001C7A  6F01               	movwf	((?___awdiv))&0ffh
   724  001C7C  0E00               	movlw	high(064h)
   725  001C7E  0102               	movlb	2	; () banked
   726  001C80  6F02               	movwf	((?___awdiv+1))&0ffh
   727  001C82  EC4B  F00B         	call	___awdiv	;wreg free
   728  001C86  C201  F203         	movff	0+?___awdiv,0+(?___awdiv+02h)
   729  001C8A  C202  F204         	movff	1+?___awdiv,1+(?___awdiv+02h)
   730  001C8E  0EFA               	movlw	low(0FAh)
   731  001C90  0102               	movlb	2	; () banked
   732  001C92  0102               	movlb	2	; () banked
   733  001C94  6F01               	movwf	((?___awdiv))&0ffh
   734  001C96  0E00               	movlw	high(0FAh)
   735  001C98  0102               	movlb	2	; () banked
   736  001C9A  6F02               	movwf	((?___awdiv+1))&0ffh
   737  001C9C  EC4B  F00B         	call	___awdiv	;wreg free
   738  001CA0  0102               	movlb	2	; () banked
   739  001CA2  0102               	movlb	2	; () banked
   740  001CA4  5101               	movf	(0+?___awdiv)&0ffh,w
   741  001CA6  6EBE               	movwf	((c:4030)),c	;volatile
   742                           	line	18
   743                           ;Pwm.c: 18: CCPR2L = 250/(100/dutycurrent);
   744  001CA8  0100               	movlb	0	; () banked
   745  001CAA  0102               	movlb	2	; () banked
   746  001CAC  C0A6 F203          	movff	(166),0+(?___awdiv+02h)
   747  001CB0  0102               	movlb	2	; () banked
   748  001CB2  0102               	movlb	2	; () banked
   749  001CB4  6B04               	clrf	(1+(?___awdiv+02h))&0ffh
   750  001CB6  0E64               	movlw	low(064h)
   751  001CB8  0102               	movlb	2	; () banked
   752  001CBA  0102               	movlb	2	; () banked
   753  001CBC  6F01               	movwf	((?___awdiv))&0ffh
   754  001CBE  0E00               	movlw	high(064h)
   755  001CC0  0102               	movlb	2	; () banked
   756  001CC2  6F02               	movwf	((?___awdiv+1))&0ffh
   757  001CC4  EC4B  F00B         	call	___awdiv	;wreg free
   758  001CC8  C201  F203         	movff	0+?___awdiv,0+(?___awdiv+02h)
   759  001CCC  C202  F204         	movff	1+?___awdiv,1+(?___awdiv+02h)
   760  001CD0  0EFA               	movlw	low(0FAh)
   761  001CD2  0102               	movlb	2	; () banked
   762  001CD4  0102               	movlb	2	; () banked
   763  001CD6  6F01               	movwf	((?___awdiv))&0ffh
   764  001CD8  0E00               	movlw	high(0FAh)
   765  001CDA  0102               	movlb	2	; () banked
   766  001CDC  6F02               	movwf	((?___awdiv+1))&0ffh
   767  001CDE  EC4B  F00B         	call	___awdiv	;wreg free
   768  001CE2  0102               	movlb	2	; () banked
   769  001CE4  0102               	movlb	2	; () banked
   770  001CE6  5101               	movf	(0+?___awdiv)&0ffh,w
   771  001CE8  6EBB               	movwf	((c:4027)),c	;volatile
   772                           	line	19
   773                           ;Pwm.c: 19: }
   774  001CEA                     l1143:
   775                           			; BSR set to: ?
   776                           
   777  001CEA  0012               	return
   778                           	opt stack 0
   779                           GLOBAL __end_of_Set_PWM_Duty
   780  001CEC                     	__end_of_Set_PWM_Duty:
   781                           	FNSIZE	_Set_PWM_Duty,0,0
   782                           ; =============== function _Set_PWM_Duty ends ==
                                 ==========
   783                           
   784                           	signat	_Set_PWM_Duty,88
   785                           	global	_Disp_Mill_fill
   786                           	global	??_Disp_Mill_fill
   787                           	global	?_Disp_Mill_fill
   788                           
   789                           ; *************** function _Disp_Mill_fill *****
                                 ************
   790                           ; Defined at:
   791                           ;		line 9 in file "Mill_Calc.c"
   792                           ; Parameters:
   793                           ;		None
   794                           ; Auto variables:
   795                           ;		None
   796                           ; Return value:
   797                           ;		type: void 
   798                           ;		size: 0
   799                           ; Registers used:
   800                           ;		None
   801                           ; Tracked objects:
   802                           ;		On entry : 0/0
   803                           ;		On exit  : 0/0
   804                           ;		Unchanged: 0/0
   805                           ; Data sizes:
   806                           ;		Autos:    0
   807                           ;		Params:   0
   808                           ;		Temp:     0
   809                           ;		Total:    0
   810                           ; This function calls:
   811                           ;		Nothing
   812                           ; This function is called by:
   813                           ;		_main
   814                           ; This function uses a non-reentrant model
   815                           ; 
   816                                   psect   text5,class=CODE,space=0,reloc=2
   817                           
   818                           	opt lm
   819                           	file	"Mill_Calc.c"
   820                           	line	9
   821  000000                     	__size_of_Disp_Mill_fill	equ	__end_of_Disp_Mill
                                 _fill-_Disp_Mill_fill
   822                           ;Mill_Calc.c: 8: void Disp_Mill_fill(void)
   823                           ;Mill_Calc.c: 9: {
   824                           	
   825  001F22                     _Disp_Mill_fill:		; BSR set to: ?
   826                           
   827                           	opt stack 29
   828                           	line	11
   829  001F22                     l975:
   830                           			; BSR set to: ?
   831                           
   832  001F22  0012               	return
   833                           	opt stack 0
   834                           GLOBAL __end_of_Disp_Mill_fill
   835  001F24                     	__end_of_Disp_Mill_fill:
   836                           	FNSIZE	_Disp_Mill_fill,0,0
   837                           ; =============== function _Disp_Mill_fill ends 
                                 ============
   838                           
   839                           	signat	_Disp_Mill_fill,88
   840                           	global	_Calc_percentageFull
   841                           	global	??_Calc_percentageFull
   842                           	global	?_Calc_percentageFull
   843                           
   844                           ; *************** function _Calc_percentageFull 
                                 *****************
   845                           ; Defined at:
   846                           ;		line 4 in file "Mill_Calc.c"
   847                           ; Parameters:
   848                           ;		None
   849                           ; Auto variables:
   850                           ;		None
   851                           ; Return value:
   852                           ;		type: void 
   853                           ;		size: 0
   854                           ; Registers used:
   855                           ;		None
   856                           ; Tracked objects:
   857                           ;		On entry : 0/0
   858                           ;		On exit  : 0/0
   859                           ;		Unchanged: 0/0
   860                           ; Data sizes:
   861                           ;		Autos:    0
   862                           ;		Params:   0
   863                           ;		Temp:     0
   864                           ;		Total:    0
   865                           ; This function calls:
   866                           ;		Nothing
   867                           ; This function is called by:
   868                           ;		_main
   869                           ; This function uses a non-reentrant model
   870                           ; 
   871                                   psect   text6,class=CODE,space=0,reloc=2
   872                           
   873                           	opt lm
   874                           	file	"Mill_Calc.c"
   875                           	line	4
   876  000000                     	__size_of_Calc_percentageFull	equ	__end_of_Calc
                                 _percentageFull-_Calc_percentageFull
   877                           ;Mill_Calc.c: 3: void Calc_percentageFull(void)
   878                           ;Mill_Calc.c: 4: {
   879                           	
   880  001F20                     _Calc_percentageFull:		; BSR set to: ?
   881                           
   882                           	opt stack 29
   883                           	line	6
   884  001F20                     l974:
   885                           			; BSR set to: ?
   886                           
   887  001F20  0012               	return
   888                           	opt stack 0
   889                           GLOBAL __end_of_Calc_percentageFull
   890  001F22                     	__end_of_Calc_percentageFull:
   891                           	FNSIZE	_Calc_percentageFull,0,0
   892                           ; =============== function _Calc_percentageFull 
                                 ends ============
   893                           
   894                           	signat	_Calc_percentageFull,88
   895                           	global	_Read_FFT
   896                           	global	??_Read_FFT
   897                           	global	?_Read_FFT
   898                           
   899                           ; *************** function _Read_FFT ***********
                                 ******
   900                           ; Defined at:
   901                           ;		line 74 in file "i2c.c"
   902                           ; Parameters:
   903                           ;		idx_addr       size:   2offs:   0	type: unsig
                                 ned int 
   904                           ;		no_readings    size:   1offs:   2	type: unsig
                                 ned char 
   905                           ; Auto variables:
   906                           ;		i           	       	type: unsigned char 
   907                           ; Return value:
   908                           ;		type: unsigned char 
   909                           ;		size: 1
   910                           ; Registers used:
   911                           ;		wreg, fsr0l, fsr0h, status,2, status,0, cstac
                                 k
   912                           ; Tracked objects:
   913                           ;		On entry : 0/0
   914                           ;		On exit  : 0/0
   915                           ;		Unchanged: 0/0
   916                           ; Data sizes:
   917                           ;		Autos:    1
   918                           ;		Params:   3
   919                           ;		Temp:     1
   920                           ;		Total:    5
   921                           ; This function calls:
   922                           ;		_i2c_start
   923                           ;		_i2c_write
   924                           ;		_i2c_read
   925                           ;		_i2c_master_ack
   926                           ;		_i2c_stop
   927                           ; This function is called by:
   928                           ;		_main
   929                           ; This function uses a non-reentrant model
   930                           ; 
   931                                   psect   text7,class=CODE,space=0,reloc=2
   932                           
   933                           	opt lm
   934                           	file	"i2c.c"
   935                           	line	74
   936  000000                     	__size_of_Read_FFT	equ	__end_of_Read_FFT-_Read_
                                 FFT
   937                           ;i2c.c: 73: unsigned char Read_FFT(unsigned int 
                                 idx_addr,unsigned char no_readings)
   938                           ;i2c.c: 74: {
   939                           	
   940  001B04                     _Read_FFT:		; BSR set to: ?
   941                           
   942                           	opt stack 29
   943                           	line	76
   944  001B04  0102               	movlb	2	; () banked
   945  001B06  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
   946  001B08  0E00               	movlw	low(0)
   947  001B0A  0102               	movlb	2	; () banked
   948  001B0C  0102               	movlb	2	; () banked
   949  001B0E  6F06               	movwf	((?_i2c_start))&0ffh
   950  001B10  0102               	movlb	2	; () banked
   951  001B12  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
   952  001B14  ECB2  F00E         	call	_i2c_start	;wreg free
   953                           	line	77
   954                           ;i2c.c: 77: i2c_write(0x70|0);
   955  001B18  0102               	movlb	2	; () banked
   956  001B1A  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
   957  001B1C  0E70               	movlw	low(070h)
   958  001B1E  0102               	movlb	2	; () banked
   959  001B20  0102               	movlb	2	; () banked
   960  001B22  6F06               	movwf	((?_i2c_write))&0ffh
   961  001B24  0102               	movlb	2	; () banked
   962  001B26  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
   963  001B28  EC23  F00F         	call	_i2c_write	;wreg free
   964                           	line	78
   965                           ;i2c.c: 78: i2c_write(idx_addr & 0x00FF);
   966  001B2C  C201  F206         	movff	(Read_FFT@idx_addr),(?_i2c_write)
   967  001B30  EC23  F00F         	call	_i2c_write	;wreg free
   968                           	line	79
   969                           ;i2c.c: 79: i2c_start(1);
   970  001B34  0102               	movlb	2	; () banked
   971  001B36  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
   972  001B38  0E01               	movlw	low(01h)
   973  001B3A  0102               	movlb	2	; () banked
   974  001B3C  0102               	movlb	2	; () banked
   975  001B3E  6F06               	movwf	((?_i2c_start))&0ffh
   976  001B40  0102               	movlb	2	; () banked
   977  001B42  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
   978  001B44  ECB2  F00E         	call	_i2c_start	;wreg free
   979                           	line	80
   980                           ;i2c.c: 80: i2c_write(0x70|1);
   981  001B48  0102               	movlb	2	; () banked
   982  001B4A  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
   983  001B4C  0E71               	movlw	low(071h)
   984  001B4E  0102               	movlb	2	; () banked
   985  001B50  0102               	movlb	2	; () banked
   986  001B52  6F06               	movwf	((?_i2c_write))&0ffh
   987  001B54  0102               	movlb	2	; () banked
   988  001B56  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
   989  001B58  EC23  F00F         	call	_i2c_write	;wreg free
   990                           	line	81
   991                           ;i2c.c: 81: for( i = 0 ; i < no_readings ; i++ )
   992  001B5C  0102               	movlb	2	; () banked
   993  001B5E  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
   994  001B60  0E00               	movlw	low(0)
   995  001B62  0102               	movlb	2	; () banked
   996  001B64  0102               	movlb	2	; () banked
   997  001B66  6F04               	movwf	((Read_FFT@i))&0ffh
   998  001B68  0102               	movlb	2	; () banked
   999  001B6A  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
  1000  001B6C  EFCD  F00D         	goto	l712
  1001                           	line	82
  1002                           	
  1003  001B70                     l709:		; BSR set to: ?
  1004                           
  1005                           	line	83
  1006                           ;i2c.c: 82: {
  1007                           ;i2c.c: 83: data[idx_addr + i] = i2c_read();
  1008  001B70  0102               	movlb	2	; () banked
  1009  001B72  0102               	movlb	2	; () banked
  1010  001B74  5104               	movf	((Read_FFT@i))&0ffh,w
  1011  001B76  0102               	movlb	2	; () banked
  1012  001B78  0102               	movlb	2	; () banked
  1013  001B7A  2501               	addwf	((Read_FFT@idx_addr))&0ffh,w
  1014  001B7C  0102               	movlb	2	; () banked
  1015  001B7E  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
  1016  001B80  0E00               	movlw	low((c:0))
  1017  001B82  0102               	movlb	2	; () banked
  1018  001B84  2505               	addwf	((??_Read_FFT+1+0))&0ffh,w
  1019  001B86  6EE9               	movwf	c:fsr0l
  1020  001B88  6AEA               	clrf	1+c:fsr0l
  1021  001B8A  0E00               	movlw	high((c:0))
  1022  001B8C  22EA               	addwfc	1+c:fsr0l
  1023  001B8E  EC62  F00F         	call	_i2c_read	;wreg free
  1024  001B92  6EEF               	movwf	indf0
  1025                           
  1026                           	line	81
  1027  001B94  0102               	movlb	2	; () banked
  1028  001B96  0102               	movlb	2	; () banked
  1029  001B98  2B04               	incf	((Read_FFT@i))&0ffh
  1030                           	
  1031  001B9A                     l712:		; BSR set to: ?
  1032                           
  1033  001B9A  0102               	movlb	2	; () banked
  1034  001B9C  0102               	movlb	2	; () banked
  1035  001B9E  5103               	movf	((Read_FFT@no_readings))&0ffh,w
  1036  001BA0  0102               	movlb	2	; () banked
  1037  001BA2  0102               	movlb	2	; () banked
  1038  001BA4  5D04               	subwf	((Read_FFT@i))&0ffh,w
  1039  001BA6  A0D8               	btfss	status,0
  1040  001BA8  EFD8  F00D         	goto	u2101
  1041  001BAC  EFDA  F00D         	goto	u2100
  1042  001BB0                     u2101:
  1043  001BB0  EFB8  F00D         	goto	l709
  1044  001BB4                     u2100:
  1045                           	
  1046  001BB4                     l710:		; BSR set to: ?
  1047                           
  1048                           	line	85
  1049                           ;i2c.c: 84: }
  1050                           ;i2c.c: 85: i2c_master_ack(1);
  1051  001BB4  0102               	movlb	2	; () banked
  1052  001BB6  6F05               	movwf	(??_Read_FFT+1+0)&0ffh
  1053  001BB8  0E01               	movlw	low(01h)
  1054  001BBA  0102               	movlb	2	; () banked
  1055  001BBC  0102               	movlb	2	; () banked
  1056  001BBE  6F06               	movwf	((?_i2c_master_ack))&0ffh
  1057  001BC0  0102               	movlb	2	; () banked
  1058  001BC2  5105               	movf	(??_Read_FFT+1+0)&0ffh,w
  1059  001BC4  EC3A  F00F         	call	_i2c_master_ack	;wreg free
  1060                           	line	86
  1061                           ;i2c.c: 86: i2c_stop();
  1062  001BC8  EC81  F00F         	call	_i2c_stop	;wreg free
  1063                           	line	87
  1064  001BCC  EFE8  F00D         	goto	l708
  1065                           	line	88
  1066                           ;i2c.c: 88: }
  1067  001BD0                     l708:
  1068                           			; BSR set to: ?
  1069                           
  1070  001BD0  0012               	return
  1071                           	opt stack 0
  1072                           GLOBAL __end_of_Read_FFT
  1073  001BD2                     	__end_of_Read_FFT:
  1074                           	FNSIZE	_Read_FFT,2,3
  1075                           ; =============== function _Read_FFT ends ======
                                 ======
  1076                           
  1077                           	signat	_Read_FFT,8313
  1078                           	global	_Adc_init
  1079                           	global	??_Adc_init
  1080                           	global	?_Adc_init
  1081                           
  1082                           ; *************** function _Adc_init ***********
                                 ******
  1083                           ; Defined at:
  1084                           ;		line 4 in file "Adc.c"
  1085                           ; Parameters:
  1086                           ;		None
  1087                           ; Auto variables:
  1088                           ;		None
  1089                           ; Return value:
  1090                           ;		type: void 
  1091                           ;		size: 0
  1092                           ; Registers used:
  1093                           ;		wreg, status,2, status,0, cstack
  1094                           ; Tracked objects:
  1095                           ;		On entry : 0/0
  1096                           ;		On exit  : 0/0
  1097                           ;		Unchanged: 0/0
  1098                           ; Data sizes:
  1099                           ;		Autos:    0
  1100                           ;		Params:   0
  1101                           ;		Temp:     1
  1102                           ;		Total:    1
  1103                           ; This function calls:
  1104                           ;		_DelayMs
  1105                           ; This function is called by:
  1106                           ;		_main
  1107                           ; This function uses a non-reentrant model
  1108                           ; 
  1109                                   psect   text8,class=CODE,space=0,reloc=2
  1110                           
  1111                           	opt lm
  1112                           	file	"Adc.c"
  1113                           	line	4
  1114  000000                     	__size_of_Adc_init	equ	__end_of_Adc_init-_Adc_i
                                 nit
  1115                           ;Adc.c: 3: void Adc_init(void)
  1116                           ;Adc.c: 4: {
  1117                           	
  1118  001DA8                     _Adc_init:		; BSR set to: ?
  1119                           
  1120                           	opt stack 29
  1121                           	line	5
  1122  001DA8  0E00               	movlw	low(0)
  1123  001DAA  6EC2               	movwf	((c:4034)),c	;volatile
  1124                           	line	6
  1125                           ;Adc.c: 6: ADCON1=0b00001110;
  1126  001DAC  0102               	movlb	2	; () banked
  1127  001DAE  6F01               	movwf	(??_Adc_init+0+0)&0ffh
  1128  001DB0  0E0E               	movlw	low(0Eh)
  1129  001DB2  6EC1               	movwf	((c:4033)),c
  1130  001DB4  0102               	movlb	2	; () banked
  1131  001DB6  5101               	movf	(??_Adc_init+0+0)&0ffh,w
  1132                           	line	7
  1133                           ;Adc.c: 7: ADCON2=0b10101000;
  1134  001DB8  0102               	movlb	2	; () banked
  1135  001DBA  6F01               	movwf	(??_Adc_init+0+0)&0ffh
  1136  001DBC  0EA8               	movlw	low(0A8h)
  1137  001DBE  6EC0               	movwf	((c:4032)),c
  1138  001DC0  0102               	movlb	2	; () banked
  1139  001DC2  5101               	movf	(??_Adc_init+0+0)&0ffh,w
  1140                           	line	8
  1141                           ;Adc.c: 8: ADIF = 0;
  1142  001DC4  9C9E               	bcf	c:(31990/8),(31990)&7	;volatile
  1143                           	line	9
  1144                           ;Adc.c: 9: ADIE = 1;
  1145  001DC6  8C9D               	bsf	c:(31982/8),(31982)&7
  1146                           	line	10
  1147                           ;Adc.c: 10: GIE = 1;
  1148  001DC8  8EF2               	bsf	c:(32663/8),(32663)&7
  1149                           	line	12
  1150                           ;Adc.c: 12: DelayMs(5);
  1151  001DCA  0E05               	movlw	low(05h)
  1152  001DCC  0102               	movlb	2	; () banked
  1153  001DCE  0102               	movlb	2	; () banked
  1154  001DD0  6F0C               	movwf	((?_DelayMs))&0ffh
  1155  001DD2  0E00               	movlw	high(05h)
  1156  001DD4  0102               	movlb	2	; () banked
  1157  001DD6  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1158  001DD8  EC76  F00E         	call	_DelayMs	;wreg free
  1159                           	line	13
  1160                           ;Adc.c: 13: ADCON0 |= 0b010;
  1161  001DDC  82C2               	bsf	(0+(1/8)+(c:4034)),c,(1)&7	;volatile
  1162                           	line	14
  1163                           ;Adc.c: 14: }
  1164  001DDE                     l425:
  1165                           			; BSR set to: ?
  1166                           
  1167  001DDE  0012               	return
  1168                           	opt stack 0
  1169                           GLOBAL __end_of_Adc_init
  1170  001DE0                     	__end_of_Adc_init:
  1171                           	FNSIZE	_Adc_init,1,0
  1172                           ; =============== function _Adc_init ends ======
                                 ======
  1173                           
  1174                           	signat	_Adc_init,88
  1175                           	global	_Initcustom_char
  1176                           	global	??_Initcustom_char
  1177                           	global	?_Initcustom_char
  1178                           
  1179                           ; *************** function _Initcustom_char ****
                                 *************
  1180                           ; Defined at:
  1181                           ;		line 234 in file "lcd.c"
  1182                           ; Parameters:
  1183                           ;		None
  1184                           ; Auto variables:
  1185                           ;		None
  1186                           ; Return value:
  1187                           ;		type: void 
  1188                           ;		size: 0
  1189                           ; Registers used:
  1190                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
                                 , prodh, cstack
  1191                           ; Tracked objects:
  1192                           ;		On entry : 0/0
  1193                           ;		On exit  : 0/0
  1194                           ;		Unchanged: 0/0
  1195                           ; Data sizes:
  1196                           ;		Autos:    0
  1197                           ;		Params:   0
  1198                           ;		Temp:     1
  1199                           ;		Total:    1
  1200                           ; This function calls:
  1201                           ;		_LCD_build
  1202                           ; This function is called by:
  1203                           ;		_main
  1204                           ; This function uses a non-reentrant model
  1205                           ; 
  1206                                   psect   text9,class=CODE,space=0,reloc=2
  1207                           
  1208                           	opt lm
  1209                           	file	"lcd.c"
  1210                           	line	234
  1211  000000                     	__size_of_Initcustom_char	equ	__end_of_Initcust
                                 om_char-_Initcustom_char
  1212                           ;lcd.c: 233: void Initcustom_char(void)
  1213                           ;lcd.c: 234: {
  1214                           	
  1215  0017F0                     _Initcustom_char:		; BSR set to: ?
  1216                           
  1217                           	opt stack 29
  1218                           	line	235
  1219  0017F0  0101               	movlb	1	; () banked
  1220  0017F2  0E31               	movlw	low(305)
  1221  0017F4  0102               	movlb	2	; () banked
  1222  0017F6  0102               	movlb	2	; () banked
  1223  0017F8  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1224  0017FA  0101               	movlb	1	; () banked
  1225  0017FC  0E01               	movlw	high(305)
  1226  0017FE  0102               	movlb	2	; () banked
  1227  001800  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1228  001802  0102               	movlb	2	; () banked
  1229  001804  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1230  001806  0E00               	movlw	low(0)
  1231  001808  0102               	movlb	2	; () banked
  1232  00180A  0102               	movlb	2	; () banked
  1233  00180C  6F02               	movwf	((?_LCD_build))&0ffh
  1234  00180E  0102               	movlb	2	; () banked
  1235  001810  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1236  001812  ECE9  F00D         	call	_LCD_build	;wreg free
  1237                           	line	236
  1238                           ;lcd.c: 236: LCD_build(1,pattern1);
  1239  001816  0101               	movlb	1	; () banked
  1240  001818  0E39               	movlw	low(313)
  1241  00181A  0102               	movlb	2	; () banked
  1242  00181C  0102               	movlb	2	; () banked
  1243  00181E  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1244  001820  0101               	movlb	1	; () banked
  1245  001822  0E01               	movlw	high(313)
  1246  001824  0102               	movlb	2	; () banked
  1247  001826  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1248  001828  0102               	movlb	2	; () banked
  1249  00182A  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1250  00182C  0E01               	movlw	low(01h)
  1251  00182E  0102               	movlb	2	; () banked
  1252  001830  0102               	movlb	2	; () banked
  1253  001832  6F02               	movwf	((?_LCD_build))&0ffh
  1254  001834  0102               	movlb	2	; () banked
  1255  001836  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1256  001838  ECE9  F00D         	call	_LCD_build	;wreg free
  1257                           	line	237
  1258                           ;lcd.c: 237: LCD_build(2,pattern2);
  1259  00183C  0101               	movlb	1	; () banked
  1260  00183E  0E41               	movlw	low(321)
  1261  001840  0102               	movlb	2	; () banked
  1262  001842  0102               	movlb	2	; () banked
  1263  001844  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1264  001846  0101               	movlb	1	; () banked
  1265  001848  0E01               	movlw	high(321)
  1266  00184A  0102               	movlb	2	; () banked
  1267  00184C  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1268  00184E  0102               	movlb	2	; () banked
  1269  001850  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1270  001852  0E02               	movlw	low(02h)
  1271  001854  0102               	movlb	2	; () banked
  1272  001856  0102               	movlb	2	; () banked
  1273  001858  6F02               	movwf	((?_LCD_build))&0ffh
  1274  00185A  0102               	movlb	2	; () banked
  1275  00185C  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1276  00185E  ECE9  F00D         	call	_LCD_build	;wreg free
  1277                           	line	238
  1278                           ;lcd.c: 238: LCD_build(3,pattern3);
  1279  001862  0101               	movlb	1	; () banked
  1280  001864  0E49               	movlw	low(329)
  1281  001866  0102               	movlb	2	; () banked
  1282  001868  0102               	movlb	2	; () banked
  1283  00186A  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1284  00186C  0101               	movlb	1	; () banked
  1285  00186E  0E01               	movlw	high(329)
  1286  001870  0102               	movlb	2	; () banked
  1287  001872  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1288  001874  0102               	movlb	2	; () banked
  1289  001876  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1290  001878  0E03               	movlw	low(03h)
  1291  00187A  0102               	movlb	2	; () banked
  1292  00187C  0102               	movlb	2	; () banked
  1293  00187E  6F02               	movwf	((?_LCD_build))&0ffh
  1294  001880  0102               	movlb	2	; () banked
  1295  001882  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1296  001884  ECE9  F00D         	call	_LCD_build	;wreg free
  1297                           	line	239
  1298                           ;lcd.c: 239: LCD_build(4,pattern4);
  1299  001888  0101               	movlb	1	; () banked
  1300  00188A  0E51               	movlw	low(337)
  1301  00188C  0102               	movlb	2	; () banked
  1302  00188E  0102               	movlb	2	; () banked
  1303  001890  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1304  001892  0101               	movlb	1	; () banked
  1305  001894  0E01               	movlw	high(337)
  1306  001896  0102               	movlb	2	; () banked
  1307  001898  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1308  00189A  0102               	movlb	2	; () banked
  1309  00189C  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1310  00189E  0E04               	movlw	low(04h)
  1311  0018A0  0102               	movlb	2	; () banked
  1312  0018A2  0102               	movlb	2	; () banked
  1313  0018A4  6F02               	movwf	((?_LCD_build))&0ffh
  1314  0018A6  0102               	movlb	2	; () banked
  1315  0018A8  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1316  0018AA  ECE9  F00D         	call	_LCD_build	;wreg free
  1317                           	line	240
  1318                           ;lcd.c: 240: LCD_build(5,pattern5);
  1319  0018AE  0101               	movlb	1	; () banked
  1320  0018B0  0E59               	movlw	low(345)
  1321  0018B2  0102               	movlb	2	; () banked
  1322  0018B4  0102               	movlb	2	; () banked
  1323  0018B6  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1324  0018B8  0101               	movlb	1	; () banked
  1325  0018BA  0E01               	movlw	high(345)
  1326  0018BC  0102               	movlb	2	; () banked
  1327  0018BE  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1328  0018C0  0102               	movlb	2	; () banked
  1329  0018C2  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1330  0018C4  0E05               	movlw	low(05h)
  1331  0018C6  0102               	movlb	2	; () banked
  1332  0018C8  0102               	movlb	2	; () banked
  1333  0018CA  6F02               	movwf	((?_LCD_build))&0ffh
  1334  0018CC  0102               	movlb	2	; () banked
  1335  0018CE  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1336  0018D0  ECE9  F00D         	call	_LCD_build	;wreg free
  1337                           	line	241
  1338                           ;lcd.c: 241: LCD_build(6,pattern6);
  1339  0018D4  0101               	movlb	1	; () banked
  1340  0018D6  0E61               	movlw	low(353)
  1341  0018D8  0102               	movlb	2	; () banked
  1342  0018DA  0102               	movlb	2	; () banked
  1343  0018DC  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1344  0018DE  0101               	movlb	1	; () banked
  1345  0018E0  0E01               	movlw	high(353)
  1346  0018E2  0102               	movlb	2	; () banked
  1347  0018E4  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1348  0018E6  0102               	movlb	2	; () banked
  1349  0018E8  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1350  0018EA  0E06               	movlw	low(06h)
  1351  0018EC  0102               	movlb	2	; () banked
  1352  0018EE  0102               	movlb	2	; () banked
  1353  0018F0  6F02               	movwf	((?_LCD_build))&0ffh
  1354  0018F2  0102               	movlb	2	; () banked
  1355  0018F4  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1356  0018F6  ECE9  F00D         	call	_LCD_build	;wreg free
  1357                           	line	242
  1358                           ;lcd.c: 242: LCD_build(7,pattern7);
  1359  0018FA  0101               	movlb	1	; () banked
  1360  0018FC  0E69               	movlw	low(361)
  1361  0018FE  0102               	movlb	2	; () banked
  1362  001900  0102               	movlb	2	; () banked
  1363  001902  6F03               	movwf	(0+(?_LCD_build+01h))&0ffh
  1364  001904  0101               	movlb	1	; () banked
  1365  001906  0E01               	movlw	high(361)
  1366  001908  0102               	movlb	2	; () banked
  1367  00190A  6F04               	movwf	(1+(?_LCD_build+01h))&0ffh
  1368  00190C  0102               	movlb	2	; () banked
  1369  00190E  6F01               	movwf	(??_Initcustom_char+0+0)&0ffh
  1370  001910  0E07               	movlw	low(07h)
  1371  001912  0102               	movlb	2	; () banked
  1372  001914  0102               	movlb	2	; () banked
  1373  001916  6F02               	movwf	((?_LCD_build))&0ffh
  1374  001918  0102               	movlb	2	; () banked
  1375  00191A  5101               	movf	(??_Initcustom_char+0+0)&0ffh,w
  1376  00191C  ECE9  F00D         	call	_LCD_build	;wreg free
  1377                           	line	244
  1378                           ;lcd.c: 244: }
  1379  001920                     l310:
  1380                           			; BSR set to: ?
  1381                           
  1382  001920  0012               	return
  1383                           	opt stack 0
  1384                           GLOBAL __end_of_Initcustom_char
  1385  001922                     	__end_of_Initcustom_char:
  1386                           	FNSIZE	_Initcustom_char,1,0
  1387                           ; =============== function _Initcustom_char ends
                                  ============
  1388                           
  1389                           	signat	_Initcustom_char,88
  1390                           	global	_lcd_init
  1391                           	global	??_lcd_init
  1392                           	global	?_lcd_init
  1393                           
  1394                           ; *************** function _lcd_init ***********
                                 ******
  1395                           ; Defined at:
  1396                           ;		line 141 in file "lcd.c"
  1397                           ; Parameters:
  1398                           ;		None
  1399                           ; Auto variables:
  1400                           ;		None
  1401                           ; Return value:
  1402                           ;		type: void 
  1403                           ;		size: 0
  1404                           ; Registers used:
  1405                           ;		wreg, status,2, status,0, cstack
  1406                           ; Tracked objects:
  1407                           ;		On entry : 0/0
  1408                           ;		On exit  : 0/0
  1409                           ;		Unchanged: 0/0
  1410                           ; Data sizes:
  1411                           ;		Autos:    0
  1412                           ;		Params:   0
  1413                           ;		Temp:     1
  1414                           ;		Total:    1
  1415                           ; This function calls:
  1416                           ;		_DelayMs
  1417                           ;		_lcd_command
  1418                           ; This function is called by:
  1419                           ;		_main
  1420                           ; This function uses a non-reentrant model
  1421                           ; 
  1422                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1423                           
  1424                           	opt lm
  1425                           	file	"lcd.c"
  1426                           	line	141
  1427  000000                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_i
                                 nit
  1428                           ;lcd.c: 140: void lcd_init( void )
  1429                           ;lcd.c: 141: {
  1430                           	
  1431  001506                     _lcd_init:		; BSR set to: ?
  1432                           
  1433                           	opt stack 29
  1434                           	line	142
  1435  001506  0E64               	movlw	low(064h)
  1436  001508  0102               	movlb	2	; () banked
  1437  00150A  0102               	movlb	2	; () banked
  1438  00150C  6F0C               	movwf	((?_DelayMs))&0ffh
  1439  00150E  0E00               	movlw	high(064h)
  1440  001510  0102               	movlb	2	; () banked
  1441  001512  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1442  001514  EC76  F00E         	call	_DelayMs	;wreg free
  1443                           	line	143
  1444                           ;lcd.c: 143: lcd_command(0x03);
  1445  001518  0102               	movlb	2	; () banked
  1446  00151A  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1447  00151C  0E03               	movlw	low(03h)
  1448  00151E  0102               	movlb	2	; () banked
  1449  001520  0102               	movlb	2	; () banked
  1450  001522  6F07               	movwf	((?_lcd_command))&0ffh
  1451  001524  0102               	movlb	2	; () banked
  1452  001526  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1453  001528  EC7D  F008         	call	_lcd_command	;wreg free
  1454                           	line	144
  1455                           ;lcd.c: 144: DelayMs(250);
  1456  00152C  0EFA               	movlw	low(0FAh)
  1457  00152E  0102               	movlb	2	; () banked
  1458  001530  0102               	movlb	2	; () banked
  1459  001532  6F0C               	movwf	((?_DelayMs))&0ffh
  1460  001534  0E00               	movlw	high(0FAh)
  1461  001536  0102               	movlb	2	; () banked
  1462  001538  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1463  00153A  EC76  F00E         	call	_DelayMs	;wreg free
  1464                           	line	145
  1465                           ;lcd.c: 145: lcd_command(0x03);
  1466  00153E  0102               	movlb	2	; () banked
  1467  001540  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1468  001542  0E03               	movlw	low(03h)
  1469  001544  0102               	movlb	2	; () banked
  1470  001546  0102               	movlb	2	; () banked
  1471  001548  6F07               	movwf	((?_lcd_command))&0ffh
  1472  00154A  0102               	movlb	2	; () banked
  1473  00154C  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1474  00154E  EC7D  F008         	call	_lcd_command	;wreg free
  1475                           	line	146
  1476                           ;lcd.c: 146: DelayMs(250);
  1477  001552  0EFA               	movlw	low(0FAh)
  1478  001554  0102               	movlb	2	; () banked
  1479  001556  0102               	movlb	2	; () banked
  1480  001558  6F0C               	movwf	((?_DelayMs))&0ffh
  1481  00155A  0E00               	movlw	high(0FAh)
  1482  00155C  0102               	movlb	2	; () banked
  1483  00155E  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1484  001560  EC76  F00E         	call	_DelayMs	;wreg free
  1485                           	line	147
  1486                           ;lcd.c: 147: lcd_command(0x03);
  1487  001564  0102               	movlb	2	; () banked
  1488  001566  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1489  001568  0E03               	movlw	low(03h)
  1490  00156A  0102               	movlb	2	; () banked
  1491  00156C  0102               	movlb	2	; () banked
  1492  00156E  6F07               	movwf	((?_lcd_command))&0ffh
  1493  001570  0102               	movlb	2	; () banked
  1494  001572  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1495  001574  EC7D  F008         	call	_lcd_command	;wreg free
  1496                           	line	148
  1497                           ;lcd.c: 148: DelayMs(250);
  1498  001578  0EFA               	movlw	low(0FAh)
  1499  00157A  0102               	movlb	2	; () banked
  1500  00157C  0102               	movlb	2	; () banked
  1501  00157E  6F0C               	movwf	((?_DelayMs))&0ffh
  1502  001580  0E00               	movlw	high(0FAh)
  1503  001582  0102               	movlb	2	; () banked
  1504  001584  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1505  001586  EC76  F00E         	call	_DelayMs	;wreg free
  1506                           	line	149
  1507                           ;lcd.c: 149: lcd_command(0x02);
  1508  00158A  0102               	movlb	2	; () banked
  1509  00158C  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1510  00158E  0E02               	movlw	low(02h)
  1511  001590  0102               	movlb	2	; () banked
  1512  001592  0102               	movlb	2	; () banked
  1513  001594  6F07               	movwf	((?_lcd_command))&0ffh
  1514  001596  0102               	movlb	2	; () banked
  1515  001598  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1516  00159A  EC7D  F008         	call	_lcd_command	;wreg free
  1517                           	line	150
  1518                           ;lcd.c: 150: DelayMs(250);
  1519  00159E  0EFA               	movlw	low(0FAh)
  1520  0015A0  0102               	movlb	2	; () banked
  1521  0015A2  0102               	movlb	2	; () banked
  1522  0015A4  6F0C               	movwf	((?_DelayMs))&0ffh
  1523  0015A6  0E00               	movlw	high(0FAh)
  1524  0015A8  0102               	movlb	2	; () banked
  1525  0015AA  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1526  0015AC  EC76  F00E         	call	_DelayMs	;wreg free
  1527                           	line	151
  1528                           ;lcd.c: 151: lcd_command(0x28);
  1529  0015B0  0102               	movlb	2	; () banked
  1530  0015B2  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1531  0015B4  0E28               	movlw	low(028h)
  1532  0015B6  0102               	movlb	2	; () banked
  1533  0015B8  0102               	movlb	2	; () banked
  1534  0015BA  6F07               	movwf	((?_lcd_command))&0ffh
  1535  0015BC  0102               	movlb	2	; () banked
  1536  0015BE  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1537  0015C0  EC7D  F008         	call	_lcd_command	;wreg free
  1538                           	line	152
  1539                           ;lcd.c: 152: DelayMs(250);
  1540  0015C4  0EFA               	movlw	low(0FAh)
  1541  0015C6  0102               	movlb	2	; () banked
  1542  0015C8  0102               	movlb	2	; () banked
  1543  0015CA  6F0C               	movwf	((?_DelayMs))&0ffh
  1544  0015CC  0E00               	movlw	high(0FAh)
  1545  0015CE  0102               	movlb	2	; () banked
  1546  0015D0  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1547  0015D2  EC76  F00E         	call	_DelayMs	;wreg free
  1548                           	line	153
  1549                           ;lcd.c: 153: lcd_command(0x28);
  1550  0015D6  0102               	movlb	2	; () banked
  1551  0015D8  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1552  0015DA  0E28               	movlw	low(028h)
  1553  0015DC  0102               	movlb	2	; () banked
  1554  0015DE  0102               	movlb	2	; () banked
  1555  0015E0  6F07               	movwf	((?_lcd_command))&0ffh
  1556  0015E2  0102               	movlb	2	; () banked
  1557  0015E4  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1558  0015E6  EC7D  F008         	call	_lcd_command	;wreg free
  1559                           	line	154
  1560                           ;lcd.c: 154: DelayMs(250);
  1561  0015EA  0EFA               	movlw	low(0FAh)
  1562  0015EC  0102               	movlb	2	; () banked
  1563  0015EE  0102               	movlb	2	; () banked
  1564  0015F0  6F0C               	movwf	((?_DelayMs))&0ffh
  1565  0015F2  0E00               	movlw	high(0FAh)
  1566  0015F4  0102               	movlb	2	; () banked
  1567  0015F6  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1568  0015F8  EC76  F00E         	call	_DelayMs	;wreg free
  1569                           	line	155
  1570                           ;lcd.c: 155: lcd_command(0x28);
  1571  0015FC  0102               	movlb	2	; () banked
  1572  0015FE  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1573  001600  0E28               	movlw	low(028h)
  1574  001602  0102               	movlb	2	; () banked
  1575  001604  0102               	movlb	2	; () banked
  1576  001606  6F07               	movwf	((?_lcd_command))&0ffh
  1577  001608  0102               	movlb	2	; () banked
  1578  00160A  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1579  00160C  EC7D  F008         	call	_lcd_command	;wreg free
  1580                           	line	156
  1581                           ;lcd.c: 156: DelayMs(250);
  1582  001610  0EFA               	movlw	low(0FAh)
  1583  001612  0102               	movlb	2	; () banked
  1584  001614  0102               	movlb	2	; () banked
  1585  001616  6F0C               	movwf	((?_DelayMs))&0ffh
  1586  001618  0E00               	movlw	high(0FAh)
  1587  00161A  0102               	movlb	2	; () banked
  1588  00161C  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1589  00161E  EC76  F00E         	call	_DelayMs	;wreg free
  1590                           	line	157
  1591                           ;lcd.c: 157: lcd_command(0x0C);
  1592  001622  0102               	movlb	2	; () banked
  1593  001624  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1594  001626  0E0C               	movlw	low(0Ch)
  1595  001628  0102               	movlb	2	; () banked
  1596  00162A  0102               	movlb	2	; () banked
  1597  00162C  6F07               	movwf	((?_lcd_command))&0ffh
  1598  00162E  0102               	movlb	2	; () banked
  1599  001630  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1600  001632  EC7D  F008         	call	_lcd_command	;wreg free
  1601                           	line	158
  1602                           ;lcd.c: 158: DelayMs(250);
  1603  001636  0EFA               	movlw	low(0FAh)
  1604  001638  0102               	movlb	2	; () banked
  1605  00163A  0102               	movlb	2	; () banked
  1606  00163C  6F0C               	movwf	((?_DelayMs))&0ffh
  1607  00163E  0E00               	movlw	high(0FAh)
  1608  001640  0102               	movlb	2	; () banked
  1609  001642  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1610  001644  EC76  F00E         	call	_DelayMs	;wreg free
  1611                           	line	159
  1612                           ;lcd.c: 159: lcd_command(0x06);
  1613  001648  0102               	movlb	2	; () banked
  1614  00164A  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1615  00164C  0E06               	movlw	low(06h)
  1616  00164E  0102               	movlb	2	; () banked
  1617  001650  0102               	movlb	2	; () banked
  1618  001652  6F07               	movwf	((?_lcd_command))&0ffh
  1619  001654  0102               	movlb	2	; () banked
  1620  001656  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1621  001658  EC7D  F008         	call	_lcd_command	;wreg free
  1622                           	line	160
  1623                           ;lcd.c: 160: DelayMs(250);
  1624  00165C  0EFA               	movlw	low(0FAh)
  1625  00165E  0102               	movlb	2	; () banked
  1626  001660  0102               	movlb	2	; () banked
  1627  001662  6F0C               	movwf	((?_DelayMs))&0ffh
  1628  001664  0E00               	movlw	high(0FAh)
  1629  001666  0102               	movlb	2	; () banked
  1630  001668  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1631  00166A  EC76  F00E         	call	_DelayMs	;wreg free
  1632                           	line	163
  1633                           ;lcd.c: 163: lcd_command(0x01);
  1634  00166E  0102               	movlb	2	; () banked
  1635  001670  6F01               	movwf	(??_lcd_init+0+0)&0ffh
  1636  001672  0E01               	movlw	low(01h)
  1637  001674  0102               	movlb	2	; () banked
  1638  001676  0102               	movlb	2	; () banked
  1639  001678  6F07               	movwf	((?_lcd_command))&0ffh
  1640  00167A  0102               	movlb	2	; () banked
  1641  00167C  5101               	movf	(??_lcd_init+0+0)&0ffh,w
  1642  00167E  EC7D  F008         	call	_lcd_command	;wreg free
  1643                           	line	164
  1644                           ;lcd.c: 164: DelayMs(250);
  1645  001682  0EFA               	movlw	low(0FAh)
  1646  001684  0102               	movlb	2	; () banked
  1647  001686  0102               	movlb	2	; () banked
  1648  001688  6F0C               	movwf	((?_DelayMs))&0ffh
  1649  00168A  0E00               	movlw	high(0FAh)
  1650  00168C  0102               	movlb	2	; () banked
  1651  00168E  6F0D               	movwf	((?_DelayMs+1))&0ffh
  1652  001690  EC76  F00E         	call	_DelayMs	;wreg free
  1653                           	line	165
  1654                           ;lcd.c: 165: }
  1655  001694                     l280:
  1656                           			; BSR set to: ?
  1657                           
  1658  001694  0012               	return
  1659                           	opt stack 0
  1660                           GLOBAL __end_of_lcd_init
  1661  001696                     	__end_of_lcd_init:
  1662                           	FNSIZE	_lcd_init,1,0
  1663                           ; =============== function _lcd_init ends ======
                                 ======
  1664                           
  1665                           	signat	_lcd_init,88
  1666                           	global	_USARTinit
  1667                           	global	??_USARTinit
  1668                           	global	?_USARTinit
  1669                           
  1670                           ; *************** function _USARTinit **********
                                 *******
  1671                           ; Defined at:
  1672                           ;		line 4 in file "Uart.c"
  1673                           ; Parameters:
  1674                           ;		None
  1675                           ; Auto variables:
  1676                           ;		None
  1677                           ; Return value:
  1678                           ;		type: void 
  1679                           ;		size: 0
  1680                           ; Registers used:
  1681                           ;		status,2, status,0
  1682                           ; Tracked objects:
  1683                           ;		On entry : 0/0
  1684                           ;		On exit  : 0/0
  1685                           ;		Unchanged: 0/0
  1686                           ; Data sizes:
  1687                           ;		Autos:    0
  1688                           ;		Params:   0
  1689                           ;		Temp:     1
  1690                           ;		Total:    1
  1691                           ; This function calls:
  1692                           ;		Nothing
  1693                           ; This function is called by:
  1694                           ;		_main
  1695                           ; This function uses a non-reentrant model
  1696                           ; 
  1697                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  1698                           
  1699                           	opt lm
  1700                           	file	"Uart.c"
  1701                           	line	4
  1702  000000                     	__size_of_USARTinit	equ	__end_of_USARTinit-_USA
                                 RTinit
  1703                           ;Uart.c: 3: void USARTinit(void)
  1704                           ;Uart.c: 4: {
  1705                           	
  1706  001E16                     _USARTinit:		; BSR set to: ?
  1707                           
  1708                           	opt stack 29
  1709                           	line	5
  1710  001E16  8E94               	bsf	(0+(7/8)+(c:3988)),c,(7)&7	;volatile
  1711                           	line	6
  1712                           ;Uart.c: 6: TRISC &= 0b1111111111110111111;
  1713  001E18  9C94               	bcf	(0+(6/8)+(c:3988)),c,(6)&7	;volatile
  1714                           	line	8
  1715                           ;Uart.c: 8: BRGH = 1;
  1716  001E1A  84AC               	bsf	c:(32098/8),(32098)&7
  1717                           	line	9
  1718                           ;Uart.c: 9: BRG16 = 0;
  1719  001E1C  96B8               	bcf	c:(32195/8),(32195)&7
  1720                           	line	10
  1721                           ;Uart.c: 10: SYNC = 0;
  1722  001E1E  98AC               	bcf	c:(32100/8),(32100)&7
  1723                           	line	11
  1724                           ;Uart.c: 11: TX9 = 0;
  1725  001E20  9CAC               	bcf	c:(32102/8),(32102)&7
  1726                           	line	12
  1727                           ;Uart.c: 12: TXEN = 1;
  1728  001E22  8AAC               	bsf	c:(32101/8),(32101)&7
  1729                           	line	13
  1730                           ;Uart.c: 13: TXIE = 0;
  1731  001E24  989D               	bcf	c:(31980/8),(31980)&7
  1732                           	line	14
  1733                           ;Uart.c: 14: TXCKP = 0;
  1734  001E26  98B8               	bcf	c:(32196/8),(32196)&7
  1735                           	line	16
  1736                           ;Uart.c: 16: RCSTAbits.SPEN= 1;
  1737  001E28  8EAB               	bsf	((c:4011)),c,7
  1738                           	line	17
  1739                           ;Uart.c: 17: RX9 = 0;
  1740  001E2A  9CAB               	bcf	c:(32094/8),(32094)&7
  1741                           	line	18
  1742                           ;Uart.c: 18: SPBRG = 12;
  1743  001E2C  0102               	movlb	2	; () banked
  1744  001E2E  6F01               	movwf	(??_USARTinit+0+0)&0ffh
  1745  001E30  0E0C               	movlw	low(0Ch)
  1746  001E32  6EAF               	movwf	((c:4015)),c
  1747  001E34  0102               	movlb	2	; () banked
  1748  001E36  5101               	movf	(??_USARTinit+0+0)&0ffh,w
  1749                           	line	19
  1750                           ;Uart.c: 19: SPBRGH = 0;
  1751  001E38  0102               	movlb	2	; () banked
  1752  001E3A  6F01               	movwf	(??_USARTinit+0+0)&0ffh
  1753  001E3C  0E00               	movlw	low(0)
  1754  001E3E  6EB0               	movwf	((c:4016)),c
  1755  001E40  0102               	movlb	2	; () banked
  1756  001E42  5101               	movf	(??_USARTinit+0+0)&0ffh,w
  1757                           	line	20
  1758                           ;Uart.c: 20: }
  1759  001E44                     l829:
  1760                           			; BSR set to: ?
  1761                           
  1762  001E44  0012               	return
  1763                           	opt stack 0
  1764                           GLOBAL __end_of_USARTinit
  1765  001E46                     	__end_of_USARTinit:
  1766                           	FNSIZE	_USARTinit,1,0
  1767                           ; =============== function _USARTinit ends =====
                                 =======
  1768                           
  1769                           	signat	_USARTinit,88
  1770                           	global	_i2c_read
  1771                           	global	??_i2c_read
  1772                           	global	?_i2c_read
  1773                           
  1774                           ; *************** function _i2c_read ***********
                                 ******
  1775                           ; Defined at:
  1776                           ;		line 66 in file "i2c.c"
  1777                           ; Parameters:
  1778                           ;		None
  1779                           ; Auto variables:
  1780                           ;		None
  1781                           ; Return value:
  1782                           ;		type: unsigned char 
  1783                           ;		size: 1
  1784                           ; Registers used:
  1785                           ;		wreg, status,2, status,0, cstack
  1786                           ; Tracked objects:
  1787                           ;		On entry : 0/0
  1788                           ;		On exit  : 0/0
  1789                           ;		Unchanged: 0/0
  1790                           ; Data sizes:
  1791                           ;		Autos:    0
  1792                           ;		Params:   0
  1793                           ;		Temp:     0
  1794                           ;		Total:    0
  1795                           ; This function calls:
  1796                           ;		_i2c_idle
  1797                           ; This function is called by:
  1798                           ;		_Read_FFT
  1799                           ; This function uses a non-reentrant model
  1800                           ; 
  1801                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  1802                           
  1803                           	opt lm
  1804                           	file	"i2c.c"
  1805                           	line	66
  1806  000000                     	__size_of_i2c_read	equ	__end_of_i2c_read-_i2c_r
                                 ead
  1807                           ;i2c.c: 65: unsigned char i2c_read(void)
  1808                           ;i2c.c: 66: {
  1809                           	
  1810  001EC4                     _i2c_read:		; BSR set to: ?
  1811                           
  1812                           	opt stack 28
  1813                           	line	67
  1814                           ;i2c.c: 67: i2c_idle();
  1815  001EC4  EC4F  F00F         	call	_i2c_idle	;wreg free
  1816                           	line	68
  1817                           ;i2c.c: 68: RCEN = 1;
  1818  001EC8  86C5               	bsf	c:(32299/8),(32299)&7	;volatile
  1819                           	line	69
  1820                           ;i2c.c: 69: while(!BF);
  1821  001ECA  EF67  F00F         	goto	l705
  1822                           	
  1823  001ECE                     l705:		; BSR set to: ?
  1824                           
  1825  001ECE  A0C7               	btfss	c:(32312/8),(32312)&7	;volatile
  1826  001ED0  EF6C  F00F         	goto	u2121
  1827  001ED4  EF6E  F00F         	goto	u2120
  1828  001ED8                     u2121:
  1829  001ED8  EF67  F00F         	goto	l705
  1830  001EDC                     u2120:
  1831                           	
  1832  001EDC                     l707:		; BSR set to: ?
  1833                           
  1834                           	line	70
  1835                           ;i2c.c: 70: return(SSPBUF);
  1836  001EDC  50C9               	movf	((c:4041)),c,w	;volatile
  1837  001EDE  EF71  F00F         	goto	l704
  1838                           	line	71
  1839                           ;i2c.c: 71: }
  1840  001EE2                     l704:
  1841                           			; BSR set to: ?
  1842                           
  1843  001EE2  0012               	return
  1844                           	opt stack 0
  1845                           GLOBAL __end_of_i2c_read
  1846  001EE4                     	__end_of_i2c_read:
  1847                           	FNSIZE	_i2c_read,0,0
  1848                           ; =============== function _i2c_read ends ======
                                 ======
  1849                           
  1850                           	signat	_i2c_read,89
  1851                           	global	_i2c_write
  1852                           	global	??_i2c_write
  1853                           	global	?_i2c_write
  1854                           
  1855                           ; *************** function _i2c_write **********
                                 *******
  1856                           ; Defined at:
  1857                           ;		line 50 in file "i2c.c"
  1858                           ; Parameters:
  1859                           ;		data           size:   1offs:   0	type: unsig
                                 ned char 
  1860                           ; Auto variables:
  1861                           ;		None
  1862                           ; Return value:
  1863                           ;		type: void 
  1864                           ;		size: 0
  1865                           ; Registers used:
  1866                           ;		wreg, status,2, status,0, cstack
  1867                           ; Tracked objects:
  1868                           ;		On entry : 0/0
  1869                           ;		On exit  : 0/0
  1870                           ;		Unchanged: 0/0
  1871                           ; Data sizes:
  1872                           ;		Autos:    0
  1873                           ;		Params:   1
  1874                           ;		Temp:     0
  1875                           ;		Total:    1
  1876                           ; This function calls:
  1877                           ;		_i2c_idle
  1878                           ; This function is called by:
  1879                           ;		_Read_FFT
  1880                           ; This function uses a non-reentrant model
  1881                           ; 
  1882                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  1883                           
  1884                           	opt lm
  1885                           	file	"i2c.c"
  1886                           	line	50
  1887  000000                     	__size_of_i2c_write	equ	__end_of_i2c_write-_i2c
                                 _write
  1888                           ;i2c.c: 49: void i2c_write(unsigned char data)
  1889                           ;i2c.c: 50: {
  1890                           	
  1891  001E46                     _i2c_write:		; BSR set to: ?
  1892                           
  1893                           	opt stack 28
  1894                           	line	51
  1895  001E46  C206  FFC9         	movff	(i2c_write@data),(c:4041)	;volatile
  1896                           	line	52
  1897                           ;i2c.c: 52: if (WCOL)
  1898  001E4A  AEC6               	btfss	c:(32311/8),(32311)&7	;volatile
  1899  001E4C  EF2A  F00F         	goto	u2191
  1900  001E50  EF2C  F00F         	goto	u2190
  1901  001E54                     u2191:
  1902  001E54  EF2E  F00F         	goto	l696
  1903  001E58                     u2190:
  1904                           	line	53
  1905                           ;i2c.c: 53: return;
  1906  001E58  EF39  F00F         	goto	l695
  1907                           	
  1908  001E5C                     l696:		; BSR set to: ?
  1909                           
  1910                           	line	54
  1911                           ;i2c.c: 54: while(BF);
  1912  001E5C  EF30  F00F         	goto	l697
  1913                           	
  1914  001E60                     l697:		; BSR set to: ?
  1915                           
  1916  001E60  B0C7               	btfsc	c:(32312/8),(32312)&7	;volatile
  1917  001E62  EF35  F00F         	goto	u2201
  1918  001E66  EF37  F00F         	goto	u2200
  1919  001E6A                     u2201:
  1920  001E6A  EF30  F00F         	goto	l697
  1921  001E6E                     u2200:
  1922                           	
  1923  001E6E                     l699:		; BSR set to: ?
  1924                           
  1925                           	line	55
  1926                           ;i2c.c: 55: i2c_idle();
  1927  001E6E  EC4F  F00F         	call	_i2c_idle	;wreg free
  1928                           	line	56
  1929                           ;i2c.c: 56: }
  1930  001E72                     l695:
  1931                           			; BSR set to: ?
  1932                           
  1933  001E72  0012               	return
  1934                           	opt stack 0
  1935                           GLOBAL __end_of_i2c_write
  1936  001E74                     	__end_of_i2c_write:
  1937                           	FNSIZE	_i2c_write,0,1
  1938                           ; =============== function _i2c_write ends =====
                                 =======
  1939                           
  1940                           	signat	_i2c_write,4216
  1941                           	global	_i2c_stop
  1942                           	global	??_i2c_stop
  1943                           	global	?_i2c_stop
  1944                           
  1945                           ; *************** function _i2c_stop ***********
                                 ******
  1946                           ; Defined at:
  1947                           ;		line 37 in file "i2c.c"
  1948                           ; Parameters:
  1949                           ;		None
  1950                           ; Auto variables:
  1951                           ;		None
  1952                           ; Return value:
  1953                           ;		type: void 
  1954                           ;		size: 0
  1955                           ; Registers used:
  1956                           ;		None
  1957                           ; Tracked objects:
  1958                           ;		On entry : 0/0
  1959                           ;		On exit  : 0/0
  1960                           ;		Unchanged: 0/0
  1961                           ; Data sizes:
  1962                           ;		Autos:    0
  1963                           ;		Params:   0
  1964                           ;		Temp:     0
  1965                           ;		Total:    0
  1966                           ; This function calls:
  1967                           ;		Nothing
  1968                           ; This function is called by:
  1969                           ;		_Read_FFT
  1970                           ; This function uses a non-reentrant model
  1971                           ; 
  1972                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  1973                           
  1974                           	opt lm
  1975                           	file	"i2c.c"
  1976                           	line	37
  1977  000000                     	__size_of_i2c_stop	equ	__end_of_i2c_stop-_i2c_s
                                 top
  1978                           ;i2c.c: 36: void i2c_stop(void)
  1979                           ;i2c.c: 37: {
  1980                           	
  1981  001F02                     _i2c_stop:		; BSR set to: ?
  1982                           
  1983                           	opt stack 28
  1984                           	line	38
  1985                           ;i2c.c: 38: PEN = 1;
  1986  001F02  84C5               	bsf	c:(32298/8),(32298)&7	;volatile
  1987                           	line	39
  1988                           ;i2c.c: 39: while(PEN);
  1989  001F04  EF84  F00F         	goto	l691
  1990                           	
  1991  001F08                     l691:		; BSR set to: ?
  1992                           
  1993  001F08  B4C5               	btfsc	c:(32298/8),(32298)&7	;volatile
  1994  001F0A  EF89  F00F         	goto	u2151
  1995  001F0E  EF8B  F00F         	goto	u2150
  1996  001F12                     u2151:
  1997  001F12  EF84  F00F         	goto	l691
  1998  001F16                     u2150:
  1999                           	
  2000  001F16                     l693:		; BSR set to: ?
  2001                           
  2002                           	line	40
  2003                           ;i2c.c: 40: }
  2004  001F16                     l690:
  2005                           			; BSR set to: ?
  2006                           
  2007  001F16  0012               	return
  2008                           	opt stack 0
  2009                           GLOBAL __end_of_i2c_stop
  2010  001F18                     	__end_of_i2c_stop:
  2011                           	FNSIZE	_i2c_stop,0,0
  2012                           ; =============== function _i2c_stop ends ======
                                 ======
  2013                           
  2014                           	signat	_i2c_stop,88
  2015                           	global	_i2c_master_ack
  2016                           	global	??_i2c_master_ack
  2017                           	global	?_i2c_master_ack
  2018                           
  2019                           ; *************** function _i2c_master_ack *****
                                 ************
  2020                           ; Defined at:
  2021                           ;		line 59 in file "i2c.c"
  2022                           ; Parameters:
  2023                           ;		ack_type       size:   1offs:   0	type: unsig
                                 ned char 
  2024                           ; Auto variables:
  2025                           ;		None
  2026                           ; Return value:
  2027                           ;		type: void 
  2028                           ;		size: 0
  2029                           ; Registers used:
  2030                           ;		None
  2031                           ; Tracked objects:
  2032                           ;		On entry : 0/0
  2033                           ;		On exit  : 0/0
  2034                           ;		Unchanged: 0/0
  2035                           ; Data sizes:
  2036                           ;		Autos:    0
  2037                           ;		Params:   1
  2038                           ;		Temp:     0
  2039                           ;		Total:    1
  2040                           ; This function calls:
  2041                           ;		Nothing
  2042                           ; This function is called by:
  2043                           ;		_Read_FFT
  2044                           ; This function uses a non-reentrant model
  2045                           ; 
  2046                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  2047                           
  2048                           	opt lm
  2049                           	file	"i2c.c"
  2050                           	line	59
  2051  000000                     	__size_of_i2c_master_ack	equ	__end_of_i2c_maste
                                 r_ack-_i2c_master_ack
  2052                           ;i2c.c: 58: void i2c_master_ack(unsigned char ac
                                 k_type)
  2053                           ;i2c.c: 59: {
  2054                           	
  2055  001E74                     _i2c_master_ack:		; BSR set to: ?
  2056                           
  2057                           	opt stack 28
  2058                           	line	60
  2059                           ;i2c.c: 60: ACKDT = ack_type;
  2060  001E74  0102               	movlb	2	; () banked
  2061  001E76  0102               	movlb	2	; () banked
  2062  001E78  A106               	btfss	((i2c_master_ack@ack_type))&0ffh,0
  2063  001E7A  D001               	bra	u2135
  2064  001E7C  8AC5               	bsf	c:(32301/8),(32301)&7	;volatile
  2065  001E7E                     	u2135:
  2066  001E7E  0102               	movlb	2	; () banked
  2067  001E80  0102               	movlb	2	; () banked
  2068  001E82  B106               	btfsc	((i2c_master_ack@ack_type))&0ffh,0
  2069  001E84  D001               	bra	u2136
  2070  001E86  9AC5               	bcf	c:(32301/8),(32301)&7	;volatile
  2071  001E88                     	u2136:
  2072                           	line	61
  2073                           ;i2c.c: 61: ACKEN = 1;
  2074  001E88  88C5               	bsf	c:(32300/8),(32300)&7	;volatile
  2075                           	line	62
  2076                           ;i2c.c: 62: while (ACKEN == 1);
  2077  001E8A  EF47  F00F         	goto	l701
  2078                           	
  2079  001E8E                     l701:		; BSR set to: ?
  2080                           
  2081  001E8E  B8C5               	btfsc	c:(32300/8),(32300)&7	;volatile
  2082  001E90  EF4C  F00F         	goto	u2141
  2083  001E94  EF4E  F00F         	goto	u2140
  2084  001E98                     u2141:
  2085  001E98  EF47  F00F         	goto	l701
  2086  001E9C                     u2140:
  2087                           	
  2088  001E9C                     l703:		; BSR set to: ?
  2089                           
  2090                           	line	63
  2091                           ;i2c.c: 63: }
  2092  001E9C                     l700:
  2093                           			; BSR set to: ?
  2094                           
  2095  001E9C  0012               	return
  2096                           	opt stack 0
  2097                           GLOBAL __end_of_i2c_master_ack
  2098  001E9E                     	__end_of_i2c_master_ack:
  2099                           	FNSIZE	_i2c_master_ack,0,1
  2100                           ; =============== function _i2c_master_ack ends 
                                 ============
  2101                           
  2102                           	signat	_i2c_master_ack,4216
  2103                           	global	___awdiv
  2104                           	global	??___awdiv
  2105                           	global	?___awdiv
  2106                           
  2107                           ; *************** function ___awdiv ************
                                 *****
  2108                           ; Defined at:
  2109                           ;		line 5 in file "C:\Program Files\HI-TECH Soft
                                 ware\PICC-18\PRO\9.65\sources\awdiv.c"
  2110                           ; Parameters:
  2111                           ;		dividend       size:   2offs:   0	type: int 
  2112                           ;		divisor        size:   2offs:   2	type: int 
  2113                           ; Auto variables:
  2114                           ;		counter     	       	type: unsigned char 
  2115                           ;		sign        	       	type: unsigned char 
  2116                           ;		quotient    	       	type: int 
  2117                           ; Return value:
  2118                           ;		type: int 
  2119                           ;		size: 2
  2120                           ; Registers used:
  2121                           ;		wreg, status,2, status,0
  2122                           ; Tracked objects:
  2123                           ;		On entry : 0/0
  2124                           ;		On exit  : 0/0
  2125                           ;		Unchanged: 0/0
  2126                           ; Data sizes:
  2127                           ;		Autos:    4
  2128                           ;		Params:   4
  2129                           ;		Temp:     1
  2130                           ;		Total:    9
  2131                           ; This function calls:
  2132                           ;		Nothing
  2133                           ; This function is called by:
  2134                           ;		_Set_PWM_Duty
  2135                           ;		_dispnum
  2136                           ; This function uses a non-reentrant model
  2137                           ; 
  2138                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  2139                           
  2140                           	opt lm
  2141                           	file	"C:\Program Files\HI-TECH Software\PICC-18
                                 \PRO\9.65\sources\awdiv.c"
  2142                           	line	5
  2143  000000                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2144                           	
  2145  001696                     ___awdiv:		; BSR set to: ?
  2146                           
  2147                           	opt stack 28
  2148                           	line	9
  2149  001696  0102               	movlb	2	; () banked
  2150  001698  6F09               	movwf	(??___awdiv+4+0)&0ffh
  2151  00169A  0E00               	movlw	low(0)
  2152  00169C  0102               	movlb	2	; () banked
  2153  00169E  0102               	movlb	2	; () banked
  2154  0016A0  6F06               	movwf	((___awdiv@sign))&0ffh
  2155  0016A2  0102               	movlb	2	; () banked
  2156  0016A4  5109               	movf	(??___awdiv+4+0)&0ffh,w
  2157                           	line	10
  2158  0016A6  0102               	movlb	2	; () banked
  2159  0016A8  0102               	movlb	2	; () banked
  2160  0016AA  AF04               	btfss	((___awdiv@divisor+1))&0ffh,7
  2161  0016AC  EF5A  F00B         	goto	u2551
  2162  0016B0  EF5C  F00B         	goto	u2550
  2163  0016B4                     u2551:
  2164  0016B4  EF6B  F00B         	goto	l1205
  2165  0016B8                     u2550:
  2166                           	line	11
  2167  0016B8  0102               	movlb	2	; () banked
  2168  0016BA  0102               	movlb	2	; () banked
  2169  0016BC  6D03               	negf	((___awdiv@divisor))&0ffh
  2170  0016BE  0102               	movlb	2	; () banked
  2171  0016C0  1F04               	comf	((___awdiv@divisor+1))&0ffh
  2172  0016C2  B0D8               	btfsc	status,0
  2173  0016C4  2B04               	incf	((___awdiv@divisor+1))&0ffh
  2174                           	line	12
  2175  0016C6  0102               	movlb	2	; () banked
  2176  0016C8  6F09               	movwf	(??___awdiv+4+0)&0ffh
  2177  0016CA  0E01               	movlw	low(01h)
  2178  0016CC  0102               	movlb	2	; () banked
  2179  0016CE  0102               	movlb	2	; () banked
  2180  0016D0  6F06               	movwf	((___awdiv@sign))&0ffh
  2181  0016D2  0102               	movlb	2	; () banked
  2182  0016D4  5109               	movf	(??___awdiv+4+0)&0ffh,w
  2183                           	line	13
  2184                           	
  2185  0016D6                     l1205:		; BSR set to: ?
  2186                           
  2187                           	line	14
  2188  0016D6  0102               	movlb	2	; () banked
  2189  0016D8  0102               	movlb	2	; () banked
  2190  0016DA  AF02               	btfss	((___awdiv@dividend+1))&0ffh,7
  2191  0016DC  EF72  F00B         	goto	u2561
  2192  0016E0  EF74  F00B         	goto	u2560
  2193  0016E4                     u2561:
  2194  0016E4  EF7F  F00B         	goto	l1206
  2195  0016E8                     u2560:
  2196                           	line	15
  2197  0016E8  0102               	movlb	2	; () banked
  2198  0016EA  0102               	movlb	2	; () banked
  2199  0016EC  6D01               	negf	((___awdiv@dividend))&0ffh
  2200  0016EE  0102               	movlb	2	; () banked
  2201  0016F0  1F02               	comf	((___awdiv@dividend+1))&0ffh
  2202  0016F2  B0D8               	btfsc	status,0
  2203  0016F4  2B02               	incf	((___awdiv@dividend+1))&0ffh
  2204                           	line	16
  2205  0016F6  0E01               	movlw	(01h)&0ffh
  2206  0016F8  0102               	movlb	2	; () banked
  2207  0016FA  0102               	movlb	2	; () banked
  2208  0016FC  1B06               	xorwf	((___awdiv@sign))&0ffh
  2209                           	line	17
  2210                           	
  2211  0016FE                     l1206:		; BSR set to: ?
  2212                           
  2213                           	line	18
  2214  0016FE  0E00               	movlw	low(0)
  2215  001700  0102               	movlb	2	; () banked
  2216  001702  0102               	movlb	2	; () banked
  2217  001704  6F07               	movwf	((___awdiv@quotient))&0ffh
  2218  001706  0E00               	movlw	high(0)
  2219  001708  0102               	movlb	2	; () banked
  2220  00170A  6F08               	movwf	((___awdiv@quotient+1))&0ffh
  2221                           	line	19
  2222  00170C  0102               	movlb	2	; () banked
  2223  00170E  0102               	movlb	2	; () banked
  2224  001710  5104               	movf	((___awdiv@divisor+1))&0ffh,w
  2225  001712  1103               	iorwf ((___awdiv@divisor))&0ffh,w
  2226                           
  2227  001714  B4D8               	btfsc	status,2
  2228  001716  EF8F  F00B         	goto	u2571
  2229  00171A  EF91  F00B         	goto	u2570
  2230  00171E                     u2571:
  2231  00171E  EFE0  F00B         	goto	l1207
  2232  001722                     u2570:
  2233                           	line	20
  2234  001722  0102               	movlb	2	; () banked
  2235  001724  6F09               	movwf	(??___awdiv+4+0)&0ffh
  2236  001726  0E01               	movlw	low(01h)
  2237  001728  0102               	movlb	2	; () banked
  2238  00172A  0102               	movlb	2	; () banked
  2239  00172C  6F05               	movwf	((___awdiv@counter))&0ffh
  2240  00172E  0102               	movlb	2	; () banked
  2241  001730  5109               	movf	(??___awdiv+4+0)&0ffh,w
  2242                           	line	21
  2243  001732  EFA4  F00B         	goto	l1208
  2244                           	
  2245  001736                     l1209:		; BSR set to: ?
  2246                           
  2247                           	line	22
  2248  001736  0102               	movlb	2	; () banked
  2249  001738  90D8               	bcf	status,0
  2250  00173A  0102               	movlb	2	; () banked
  2251  00173C  3703               	rlcf	((___awdiv@divisor))&0ffh
  2252  00173E  0102               	movlb	2	; () banked
  2253  001740  3704               	rlcf	((___awdiv@divisor+1))&0ffh
  2254                           	line	23
  2255  001742  0102               	movlb	2	; () banked
  2256  001744  0102               	movlb	2	; () banked
  2257  001746  2B05               	incf	((___awdiv@counter))&0ffh
  2258                           	line	24
  2259                           	
  2260  001748                     l1208:		; BSR set to: ?
  2261                           
  2262                           	line	21
  2263  001748  0102               	movlb	2	; () banked
  2264                           	
  2265  00174A  0102               	movlb	2	; () banked
  2266  00174C  AF04               	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
  2267  00174E  EFAB  F00B         	goto	u2581
  2268  001752  EFAD  F00B         	goto	u2580
  2269  001756                     u2581:
  2270  001756  EF9B  F00B         	goto	l1209
  2271  00175A                     u2580:
  2272                           	
  2273  00175A                     l1210:		; BSR set to: ?
  2274                           
  2275                           	line	25
  2276                           	
  2277  00175A                     l1213:		; BSR set to: ?
  2278                           
  2279                           	line	26
  2280  00175A  0102               	movlb	2	; () banked
  2281  00175C  90D8               	bcf	status,0
  2282  00175E  0102               	movlb	2	; () banked
  2283  001760  3707               	rlcf	((___awdiv@quotient))&0ffh
  2284  001762  0102               	movlb	2	; () banked
  2285  001764  3708               	rlcf	((___awdiv@quotient+1))&0ffh
  2286                           	line	27
  2287  001766  0102               	movlb	2	; () banked
  2288  001768  0102               	movlb	2	; () banked
  2289  00176A  5103               	movf	((___awdiv@divisor))&0ffh,w
  2290  00176C  0102               	movlb	2	; () banked
  2291  00176E  0102               	movlb	2	; () banked
  2292  001770  5D01               	subwf	((___awdiv@dividend))&0ffh,w
  2293  001772  0102               	movlb	2	; () banked
  2294  001774  0102               	movlb	2	; () banked
  2295  001776  5104               	movf	((___awdiv@divisor+1))&0ffh,w
  2296  001778  0102               	movlb	2	; () banked
  2297  00177A  0102               	movlb	2	; () banked
  2298  00177C  5902               	subwfb	((___awdiv@dividend+1))&0ffh,w
  2299  00177E  A0D8               	btfss	status,0
  2300  001780  EFC4  F00B         	goto	u2591
  2301  001784  EFC6  F00B         	goto	u2590
  2302  001788                     u2591:
  2303  001788  EFD5  F00B         	goto	l1214
  2304  00178C                     u2590:
  2305                           	line	28
  2306  00178C  0102               	movlb	2	; () banked
  2307  00178E  0102               	movlb	2	; () banked
  2308  001790  5103               	movf	((___awdiv@divisor))&0ffh,w
  2309  001792  0102               	movlb	2	; () banked
  2310  001794  0102               	movlb	2	; () banked
  2311  001796  5F01               	subwf	((___awdiv@dividend))&0ffh
  2312  001798  0102               	movlb	2	; () banked
  2313  00179A  0102               	movlb	2	; () banked
  2314  00179C  5104               	movf	((___awdiv@divisor+1))&0ffh,w
  2315  00179E  0102               	movlb	2	; () banked
  2316  0017A0  0102               	movlb	2	; () banked
  2317  0017A2  5B02               	subwfb	((___awdiv@dividend+1))&0ffh
  2318                           
  2319                           	line	29
  2320  0017A4  0102               	movlb	2	; () banked
  2321  0017A6  0102               	movlb	2	; () banked
  2322  0017A8  8107               	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
  2323                           	line	30
  2324                           	
  2325  0017AA                     l1214:		; BSR set to: ?
  2326                           
  2327                           	line	31
  2328  0017AA  0102               	movlb	2	; () banked
  2329  0017AC  90D8               	bcf	status,0
  2330  0017AE  0102               	movlb	2	; () banked
  2331  0017B0  3304               	rrcf	((___awdiv@divisor+1))&0ffh
  2332  0017B2  0102               	movlb	2	; () banked
  2333  0017B4  3303               	rrcf	((___awdiv@divisor))&0ffh
  2334                           	line	32
  2335  0017B6  0102               	movlb	2	; () banked
  2336  0017B8  0102               	movlb	2	; () banked
  2337  0017BA  2F05               	decfsz	((___awdiv@counter))&0ffh
  2338                           	
  2339  0017BC  EFAD  F00B         	goto	l1213
  2340                           	
  2341  0017C0                     l1212:		; BSR set to: ?
  2342                           
  2343                           	line	33
  2344                           	
  2345  0017C0                     l1207:		; BSR set to: ?
  2346                           
  2347                           	line	34
  2348  0017C0  0102               	movlb	2	; () banked
  2349  0017C2  0102               	movlb	2	; () banked
  2350  0017C4  5106               	movf	((___awdiv@sign))&0ffh,w
  2351  0017C6  B4D8               	btfsc	status,2
  2352  0017C8  EFE8  F00B         	goto	u2601
  2353  0017CC  EFEA  F00B         	goto	u2600
  2354  0017D0                     u2601:
  2355  0017D0  EFF1  F00B         	goto	l1215
  2356  0017D4                     u2600:
  2357                           	line	35
  2358  0017D4  0102               	movlb	2	; () banked
  2359  0017D6  0102               	movlb	2	; () banked
  2360  0017D8  6D07               	negf	((___awdiv@quotient))&0ffh
  2361  0017DA  0102               	movlb	2	; () banked
  2362  0017DC  1F08               	comf	((___awdiv@quotient+1))&0ffh
  2363  0017DE  B0D8               	btfsc	status,0
  2364  0017E0  2B08               	incf	((___awdiv@quotient+1))&0ffh
  2365                           	
  2366  0017E2                     l1215:		; BSR set to: ?
  2367                           
  2368                           	line	36
  2369  0017E2  C207  F201         	movff	(___awdiv@quotient),(?___awdiv)
  2370  0017E6  C208  F202         	movff	(___awdiv@quotient+1),(?___awdiv+1)
  2371  0017EA  EFF7  F00B         	goto	l1204
  2372                           	line	37
  2373  0017EE                     l1204:
  2374                           			; BSR set to: ?
  2375                           
  2376  0017EE  0012               	return
  2377                           	opt stack 0
  2378                           GLOBAL __end_of___awdiv
  2379  0017F0                     	__end_of___awdiv:
  2380                           	FNSIZE	___awdiv,5,4
  2381                           ; =============== function ___awdiv ends =======
                                 =====
  2382                           
  2383                           	signat	___awdiv,8314
  2384                           	global	_LCD_build
  2385                           	global	??_LCD_build
  2386                           	global	?_LCD_build
  2387                           
  2388                           ; *************** function _LCD_build **********
                                 *******
  2389                           ; Defined at:
  2390                           ;		line 223 in file "lcd.c"
  2391                           ; Parameters:
  2392                           ;		location       size:   1offs:   0	type: unsig
                                 ned char 
  2393                           ;		ptr            size:   2offs:   1	type: PTR u
                                 nsigned char ; Largest target is 8
  2394                           ;		 -> pattern7(8), pattern6(8), pattern5(8), pa
                                 ttern4(8), 
  2395                           ;		 -> pattern3(8), pattern2(8), pattern1(8), pa
                                 ttern0(8), 
  2396                           ; Auto variables:
  2397                           ;		i           	       	type: unsigned char 
  2398                           ; Return value:
  2399                           ;		type: void 
  2400                           ;		size: 0
  2401                           ; Registers used:
  2402                           ;		wreg, fsr0l, fsr0h, status,2, status,0, prodl
                                 , prodh, cstack
  2403                           ; Tracked objects:
  2404                           ;		On entry : 0/0
  2405                           ;		On exit  : 0/0
  2406                           ;		Unchanged: 0/0
  2407                           ; Data sizes:
  2408                           ;		Autos:    1
  2409                           ;		Params:   3
  2410                           ;		Temp:     1
  2411                           ;		Total:    5
  2412                           ; This function calls:
  2413                           ;		_lcd_command
  2414                           ;		_lcd_data
  2415                           ; This function is called by:
  2416                           ;		_Initcustom_char
  2417                           ; This function uses a non-reentrant model
  2418                           ; 
  2419                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  2420                           
  2421                           	opt lm
  2422                           	file	"lcd.c"
  2423                           	line	223
  2424  000000                     	__size_of_LCD_build	equ	__end_of_LCD_build-_LCD
                                 _build
  2425                           ;lcd.c: 222: void LCD_build(unsigned char locati
                                 on, unsigned char *ptr)
  2426                           ;lcd.c: 223: {
  2427                           	
  2428  001BD2                     _LCD_build:		; BSR set to: ?
  2429                           
  2430                           	opt stack 28
  2431                           	line	225
  2432  001BD2  0E08               	movlw	(08h)&0ffh
  2433  001BD4  0102               	movlb	2	; () banked
  2434  001BD6  0102               	movlb	2	; () banked
  2435  001BD8  6102               	cpfslt	((LCD_build@location))&0ffh
  2436  001BDA  EFF1  F00D         	goto	u2411
  2437  001BDE  EFF3  F00D         	goto	u2410
  2438  001BE2                     u2411:
  2439  001BE2  EF32  F00E         	goto	l306
  2440  001BE6                     u2410:
  2441                           	line	227
  2442                           ;lcd.c: 226: {
  2443                           ;lcd.c: 227: lcd_command(0x40+(location*8));
  2444  001BE6  0102               	movlb	2	; () banked
  2445  001BE8  0102               	movlb	2	; () banked
  2446  001BEA  5102               	movf	((LCD_build@location))&0ffh,w
  2447  001BEC  0D08               	mullw	08h
  2448  001BEE  50F3               	movf	(prodl),c,w
  2449  001BF0  0F40               	addlw	low(040h)
  2450  001BF2  0102               	movlb	2	; () banked
  2451  001BF4  0102               	movlb	2	; () banked
  2452  001BF6  6F07               	movwf	((?_lcd_command))&0ffh
  2453  001BF8  EC7D  F008         	call	_lcd_command	;wreg free
  2454                           	line	228
  2455                           ;lcd.c: 228: for(i=0;i<8;i++)
  2456  001BFC  0102               	movlb	2	; () banked
  2457  001BFE  6F06               	movwf	(??_LCD_build+1+0)&0ffh
  2458  001C00  0E00               	movlw	low(0)
  2459  001C02  0102               	movlb	2	; () banked
  2460  001C04  0102               	movlb	2	; () banked
  2461  001C06  6F05               	movwf	((LCD_build@i))&0ffh
  2462  001C08  0102               	movlb	2	; () banked
  2463  001C0A  5106               	movf	(??_LCD_build+1+0)&0ffh,w
  2464  001C0C  0E07               	movlw	(08h-1)
  2465  001C0E  0102               	movlb	2	; () banked
  2466  001C10  0102               	movlb	2	; () banked
  2467  001C12  6505               	cpfsgt	((LCD_build@i))&0ffh
  2468  001C14  EF0E  F00E         	goto	u2421
  2469  001C18  EF10  F00E         	goto	u2420
  2470  001C1C                     u2421:
  2471  001C1C  EF12  F00E         	goto	l307
  2472  001C20                     u2420:
  2473  001C20  EF32  F00E         	goto	l306
  2474                           	line	229
  2475                           	
  2476  001C24                     l307:		; BSR set to: ?
  2477                           
  2478                           ;lcd.c: 229: lcd_data(ptr[ i ]);
  2479  001C24  0102               	movlb	2	; () banked
  2480  001C26  0102               	movlb	2	; () banked
  2481  001C28  5105               	movf	((LCD_build@i))&0ffh,w
  2482  001C2A  0102               	movlb	2	; () banked
  2483  001C2C  0102               	movlb	2	; () banked
  2484  001C2E  2503               	addwf	((LCD_build@ptr))&0ffh,w
  2485  001C30  6EE9               	movwf	c:fsr0l
  2486  001C32  0102               	movlb	2	; () banked
  2487  001C34  0E00               	movlw	0
  2488  001C36  0102               	movlb	2	; () banked
  2489  001C38  0102               	movlb	2	; () banked
  2490  001C3A  2104               	addwfc	((LCD_build@ptr+1))&0ffh,w
  2491  001C3C  6EEA               	movwf	1+c:fsr0l
  2492  001C3E  50EF               	movf	indf0,w
  2493  001C40  0102               	movlb	2	; () banked
  2494  001C42  0102               	movlb	2	; () banked
  2495  001C44  6F07               	movwf	((?_lcd_data))&0ffh
  2496  001C46  EC80  F009         	call	_lcd_data	;wreg free
  2497                           	line	228
  2498  001C4A  0102               	movlb	2	; () banked
  2499  001C4C  0102               	movlb	2	; () banked
  2500  001C4E  2B05               	incf	((LCD_build@i))&0ffh
  2501  001C50  0E07               	movlw	(08h-1)
  2502  001C52  0102               	movlb	2	; () banked
  2503  001C54  0102               	movlb	2	; () banked
  2504  001C56  6505               	cpfsgt	((LCD_build@i))&0ffh
  2505  001C58  EF30  F00E         	goto	u2431
  2506  001C5C  EF32  F00E         	goto	u2430
  2507  001C60                     u2431:
  2508  001C60  EF12  F00E         	goto	l307
  2509  001C64                     u2430:
  2510                           	
  2511  001C64                     l308:		; BSR set to: ?
  2512                           
  2513                           	line	230
  2514                           	
  2515  001C64                     l306:		; BSR set to: ?
  2516                           
  2517                           	line	231
  2518                           ;lcd.c: 230: }
  2519                           ;lcd.c: 231: }
  2520  001C64                     l305:
  2521                           			; BSR set to: ?
  2522                           
  2523  001C64  0012               	return
  2524                           	opt stack 0
  2525                           GLOBAL __end_of_LCD_build
  2526  001C66                     	__end_of_LCD_build:
  2527                           	FNSIZE	_LCD_build,2,3
  2528                           ; =============== function _LCD_build ends =====
                                 =======
  2529                           
  2530                           	signat	_LCD_build,8312
  2531                           	global	_i2c_start
  2532                           	global	??_i2c_start
  2533                           	global	?_i2c_start
  2534                           
  2535                           ; *************** function _i2c_start **********
                                 *******
  2536                           ; Defined at:
  2537                           ;		line 22 in file "i2c.c"
  2538                           ; Parameters:
  2539                           ;		stype          size:   1offs:   0	type: unsig
                                 ned char 
  2540                           ; Auto variables:
  2541                           ;		None
  2542                           ; Return value:
  2543                           ;		type: void 
  2544                           ;		size: 0
  2545                           ; Registers used:
  2546                           ;		wreg, status,2, status,0, cstack
  2547                           ; Tracked objects:
  2548                           ;		On entry : 0/0
  2549                           ;		On exit  : 0/0
  2550                           ;		Unchanged: 0/0
  2551                           ; Data sizes:
  2552                           ;		Autos:    0
  2553                           ;		Params:   1
  2554                           ;		Temp:     0
  2555                           ;		Total:    1
  2556                           ; This function calls:
  2557                           ;		_i2c_idle
  2558                           ; This function is called by:
  2559                           ;		_Read_FFT
  2560                           ; This function uses a non-reentrant model
  2561                           ; 
  2562                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  2563                           
  2564                           	opt lm
  2565                           	file	"i2c.c"
  2566                           	line	22
  2567  000000                     	__size_of_i2c_start	equ	__end_of_i2c_start-_i2c
                                 _start
  2568                           ;i2c.c: 21: void i2c_start(unsigned char stype)
  2569                           ;i2c.c: 22: {
  2570                           	
  2571  001D64                     _i2c_start:		; BSR set to: ?
  2572                           
  2573                           	opt stack 28
  2574                           	line	23
  2575                           ;i2c.c: 23: i2c_idle();
  2576  001D64  EC4F  F00F         	call	_i2c_idle	;wreg free
  2577                           	line	24
  2578                           ;i2c.c: 24: if (stype == 0)
  2579  001D68  0102               	movlb	2	; () banked
  2580  001D6A  0102               	movlb	2	; () banked
  2581  001D6C  6706               	tstfsz	((i2c_start@stype))&0ffh
  2582  001D6E  EFBB  F00E         	goto	u2161
  2583  001D72  EFBD  F00E         	goto	u2160
  2584  001D76                     u2161:
  2585  001D76  EFC9  F00E         	goto	l682
  2586  001D7A                     u2160:
  2587                           	line	26
  2588                           ;i2c.c: 25: {
  2589                           ;i2c.c: 26: SEN = 1;
  2590  001D7A  80C5               	bsf	c:(32296/8),(32296)&7
  2591                           	line	27
  2592                           ;i2c.c: 27: while(SEN);
  2593  001D7C  EFC0  F00E         	goto	l683
  2594                           	
  2595  001D80                     l683:		; BSR set to: ?
  2596                           
  2597  001D80  B0C5               	btfsc	c:(32296/8),(32296)&7
  2598  001D82  EFC5  F00E         	goto	u2171
  2599  001D86  EFC7  F00E         	goto	u2170
  2600  001D8A                     u2171:
  2601  001D8A  EFC0  F00E         	goto	l683
  2602  001D8E                     u2170:
  2603                           	
  2604  001D8E                     l685:		; BSR set to: ?
  2605                           
  2606                           	line	28
  2607                           ;i2c.c: 28: }
  2608  001D8E  EFD3  F00E         	goto	l686
  2609                           	line	29
  2610                           	
  2611  001D92                     l682:		; BSR set to: ?
  2612                           
  2613                           	line	31
  2614                           ;i2c.c: 29: else
  2615                           ;i2c.c: 30: {
  2616                           ;i2c.c: 31: RSEN = 1;
  2617  001D92  82C5               	bsf	c:(32297/8),(32297)&7	;volatile
  2618                           	line	32
  2619                           ;i2c.c: 32: while(RSEN);
  2620  001D94  EFCC  F00E         	goto	l687
  2621                           	
  2622  001D98                     l687:		; BSR set to: ?
  2623                           
  2624  001D98  B2C5               	btfsc	c:(32297/8),(32297)&7	;volatile
  2625  001D9A  EFD1  F00E         	goto	u2181
  2626  001D9E  EFD3  F00E         	goto	u2180
  2627  001DA2                     u2181:
  2628  001DA2  EFCC  F00E         	goto	l687
  2629  001DA6                     u2180:
  2630                           	
  2631  001DA6                     l689:		; BSR set to: ?
  2632                           
  2633                           	line	33
  2634                           	
  2635  001DA6                     l686:		; BSR set to: ?
  2636                           
  2637                           	line	34
  2638                           ;i2c.c: 33: }
  2639                           ;i2c.c: 34: }
  2640  001DA6                     l681:
  2641                           			; BSR set to: ?
  2642                           
  2643  001DA6  0012               	return
  2644                           	opt stack 0
  2645                           GLOBAL __end_of_i2c_start
  2646  001DA8                     	__end_of_i2c_start:
  2647                           	FNSIZE	_i2c_start,0,1
  2648                           ; =============== function _i2c_start ends =====
                                 =======
  2649                           
  2650                           	signat	_i2c_start,4216
  2651                           	global	_i2c_idle
  2652                           	global	??_i2c_idle
  2653                           	global	?_i2c_idle
  2654                           
  2655                           ; *************** function _i2c_idle ***********
                                 ******
  2656                           ; Defined at:
  2657                           ;		line 17 in file "i2c.c"
  2658                           ; Parameters:
  2659                           ;		None
  2660                           ; Auto variables:
  2661                           ;		None
  2662                           ; Return value:
  2663                           ;		type: void 
  2664                           ;		size: 0
  2665                           ; Registers used:
  2666                           ;		wreg, status,2, status,0
  2667                           ; Tracked objects:
  2668                           ;		On entry : 0/0
  2669                           ;		On exit  : 0/0
  2670                           ;		Unchanged: 0/0
  2671                           ; Data sizes:
  2672                           ;		Autos:    0
  2673                           ;		Params:   0
  2674                           ;		Temp:     0
  2675                           ;		Total:    0
  2676                           ; This function calls:
  2677                           ;		Nothing
  2678                           ; This function is called by:
  2679                           ;		_i2c_start
  2680                           ;		_i2c_write
  2681                           ;		_i2c_read
  2682                           ; This function uses a non-reentrant model
  2683                           ; 
  2684                                   psect   text19,class=CODE,space=0,reloc=
                                 2
  2685                           
  2686                           	opt lm
  2687                           	file	"i2c.c"
  2688                           	line	17
  2689  000000                     	__size_of_i2c_idle	equ	__end_of_i2c_idle-_i2c_i
                                 dle
  2690                           ;i2c.c: 16: void i2c_idle(void)
  2691                           ;i2c.c: 17: {
  2692                           	
  2693  001E9E                     _i2c_idle:		; BSR set to: ?
  2694                           
  2695                           	opt stack 27
  2696                           	line	18
  2697  001E9E  EF51  F00F         	goto	l678
  2698                           	
  2699  001EA2                     l678:		; BSR set to: ?
  2700                           
  2701  001EA2  50C5               	movf	((c:4037)),c,w	;volatile
  2702  001EA4  0B1F               	andlw	low(01Fh)
  2703  001EA6  A4D8               	btfss	status,2
  2704  001EA8  EF58  F00F         	goto	u2211
  2705  001EAC  EF5A  F00F         	goto	u2210
  2706  001EB0                     u2211:
  2707  001EB0  EF51  F00F         	goto	l678
  2708  001EB4                     u2210:
  2709  001EB4  B4C7               	btfsc	c:(32314/8),(32314)&7	;volatile
  2710  001EB6  EF5F  F00F         	goto	u2221
  2711  001EBA  EF61  F00F         	goto	u2220
  2712  001EBE                     u2221:
  2713  001EBE  EF51  F00F         	goto	l678
  2714  001EC2                     u2220:
  2715                           	
  2716  001EC2                     l680:		; BSR set to: ?
  2717                           
  2718                           	line	19
  2719                           ;i2c.c: 19: }
  2720  001EC2                     l677:
  2721                           			; BSR set to: ?
  2722                           
  2723  001EC2  0012               	return
  2724                           	opt stack 0
  2725                           GLOBAL __end_of_i2c_idle
  2726  001EC4                     	__end_of_i2c_idle:
  2727                           	FNSIZE	_i2c_idle,0,0
  2728                           ; =============== function _i2c_idle ends ======
                                 ======
  2729                           
  2730                           	signat	_i2c_idle,88
  2731                           	global	_lcd_data
  2732                           	global	??_lcd_data
  2733                           	global	?_lcd_data
  2734                           
  2735                           ; *************** function _lcd_data ***********
                                 ******
  2736                           ; Defined at:
  2737                           ;		line 85 in file "lcd.c"
  2738                           ; Parameters:
  2739                           ;		data           size:   1offs:   0	type: unsig
                                 ned char 
  2740                           ; Auto variables:
  2741                           ;		None
  2742                           ; Return value:
  2743                           ;		type: void 
  2744                           ;		size: 0
  2745                           ; Registers used:
  2746                           ;		wreg, status,2, status,0, cstack
  2747                           ; Tracked objects:
  2748                           ;		On entry : 0/0
  2749                           ;		On exit  : 0/0
  2750                           ;		Unchanged: 0/0
  2751                           ; Data sizes:
  2752                           ;		Autos:    0
  2753                           ;		Params:   1
  2754                           ;		Temp:     4
  2755                           ;		Total:    5
  2756                           ; This function calls:
  2757                           ;		_DelayMs
  2758                           ; This function is called by:
  2759                           ;		_LCD_build
  2760                           ;		_Display
  2761                           ; This function uses a non-reentrant model
  2762                           ; 
  2763                                   psect   text20,class=CODE,space=0,reloc=
                                 2
  2764                           
  2765                           	opt lm
  2766                           	file	"lcd.c"
  2767                           	line	85
  2768  000000                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_d
                                 ata
  2769                           ;lcd.c: 84: void lcd_data(unsigned char data)
  2770                           ;lcd.c: 85: {
  2771                           	
  2772  001300                     _lcd_data:		; BSR set to: ?
  2773                           
  2774                           	opt stack 27
  2775                           	line	86
  2776                           ;lcd.c: 86: LATD1=1;
  2777  001300  828C               	bsf	c:(31841/8),(31841)&7	;volatile
  2778                           	line	87
  2779                           ;lcd.c: 87: DATA=((data >>4) & 0x0f);
  2780  001302  C207  F208         	movff	(lcd_data@data),??_lcd_data+0+0
  2781  001306  0102               	movlb	2	; () banked
  2782  001308  3B08               	swapf	(??_lcd_data+0+0)&0ffh
  2783  00130A  0E0F               	movlw	(0ffh shr 4) & 0ffh
  2784  00130C  1708               	andwf	(??_lcd_data+0+0)&0ffh
  2785  00130E  0E0F               	movlw	0Fh
  2786  001310  0102               	movlb	2	; () banked
  2787  001312  1708               	andwf	(??_lcd_data+0+0)&0ffh
  2788  001314  0102               	movlb	2	; () banked
  2789  001316  5108               	movf	(??_lcd_data+0+0)&0ffh,w
  2790  001318  0100               	movlb	0	; () banked
  2791  00131A  0100               	movlb	0	; () banked
  2792  00131C  6F90               	movwf	((144))&0ffh
  2793  00131E  0100               	movlb	0	; () banked
  2794  001320  6B91               	clrf	((144+1))&0ffh
  2795                           	line	88
  2796                           ;lcd.c: 88: LATA1 = DATA & 0x01;
  2797  001322  0100               	movlb	0	; () banked
  2798  001324  0100               	movlb	0	; () banked
  2799  001326  A190               	btfss	((144))&0ffh,0
  2800  001328  D001               	bra	u2335
  2801  00132A  8289               	bsf	c:(31817/8),(31817)&7	;volatile
  2802  00132C                     	u2335:
  2803  00132C  0100               	movlb	0	; () banked
  2804  00132E  0100               	movlb	0	; () banked
  2805  001330  B190               	btfsc	((144))&0ffh,0
  2806  001332  D001               	bra	u2336
  2807  001334  9289               	bcf	c:(31817/8),(31817)&7	;volatile
  2808  001336                     	u2336:
  2809                           	line	89
  2810                           ;lcd.c: 89: LATA2 = (DATA & 0x02) >> 1;
  2811  001336  0E02               	movlw	02h
  2812  001338  0100               	movlb	0	; () banked
  2813  00133A  0100               	movlb	0	; () banked
  2814  00133C  1590               	andwf	((144))&0ffh,w
  2815  00133E  0102               	movlb	2	; () banked
  2816  001340  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  2817  001342  0E00               	movlw	0
  2818  001344  0100               	movlb	0	; () banked
  2819  001346  0100               	movlb	0	; () banked
  2820  001348  1591               	andwf	((144+1))&0ffh,w
  2821  00134A  0102               	movlb	2	; () banked
  2822  00134C  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  2823  00134E  90D8               	bcf	status,0
  2824  001350  0102               	movlb	2	; () banked
  2825  001352  3109               	rrcf	(??_lcd_data+0+1)&0ffh,w
  2826  001354  0102               	movlb	2	; () banked
  2827  001356  6F0B               	movwf	(??_lcd_data+2+0+1)&0ffh
  2828  001358  0102               	movlb	2	; () banked
  2829  00135A  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  2830  00135C  0102               	movlb	2	; () banked
  2831  00135E  6F0A               	movwf	(??_lcd_data+2+0)&0ffh
  2832  001360  0102               	movlb	2	; () banked
  2833  001362  310A               	rrcf	(??_lcd_data+2+0)&0ffh,w
  2834  001364  A0D8               	btfss	status,0
  2835  001366  D001               	bra	u2345
  2836  001368  8489               	bsf	c:(31818/8),(31818)&7	;volatile
  2837  00136A                     	u2345:
  2838  00136A  B0D8               	btfsc	status,0
  2839  00136C  D001               	bra	u2346
  2840  00136E  9489               	bcf	c:(31818/8),(31818)&7	;volatile
  2841  001370                     	u2346:
  2842                           	line	90
  2843                           ;lcd.c: 90: LATA3 = (DATA & 0x04) >> 2;
  2844  001370  0E04               	movlw	04h
  2845  001372  0100               	movlb	0	; () banked
  2846  001374  0100               	movlb	0	; () banked
  2847  001376  1590               	andwf	((144))&0ffh,w
  2848  001378  0102               	movlb	2	; () banked
  2849  00137A  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  2850  00137C  0E00               	movlw	0
  2851  00137E  0100               	movlb	0	; () banked
  2852  001380  0100               	movlb	0	; () banked
  2853  001382  1591               	andwf	((144+1))&0ffh,w
  2854  001384  0102               	movlb	2	; () banked
  2855  001386  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  2856  001388  90D8               	bcf	status,0
  2857  00138A  0102               	movlb	2	; () banked
  2858  00138C  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  2859  00138E  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  2860  001390  90D8               	bcf	status,0
  2861  001392  0102               	movlb	2	; () banked
  2862  001394  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  2863  001396  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  2864  001398  0102               	movlb	2	; () banked
  2865  00139A  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  2866  00139C  A0D8               	btfss	status,0
  2867  00139E  D001               	bra	u2355
  2868  0013A0  8689               	bsf	c:(31819/8),(31819)&7	;volatile
  2869  0013A2                     	u2355:
  2870  0013A2  B0D8               	btfsc	status,0
  2871  0013A4  D001               	bra	u2356
  2872  0013A6  9689               	bcf	c:(31819/8),(31819)&7	;volatile
  2873  0013A8                     	u2356:
  2874                           	line	91
  2875                           ;lcd.c: 91: LATA4 = (DATA & 0x08) >> 3;
  2876  0013A8  0E08               	movlw	08h
  2877  0013AA  0100               	movlb	0	; () banked
  2878  0013AC  0100               	movlb	0	; () banked
  2879  0013AE  1590               	andwf	((144))&0ffh,w
  2880  0013B0  0102               	movlb	2	; () banked
  2881  0013B2  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  2882  0013B4  0E00               	movlw	0
  2883  0013B6  0100               	movlb	0	; () banked
  2884  0013B8  0100               	movlb	0	; () banked
  2885  0013BA  1591               	andwf	((144+1))&0ffh,w
  2886  0013BC  0102               	movlb	2	; () banked
  2887  0013BE  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  2888  0013C0  90D8               	bcf	status,0
  2889  0013C2  0102               	movlb	2	; () banked
  2890  0013C4  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  2891  0013C6  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  2892  0013C8  90D8               	bcf	status,0
  2893  0013CA  0102               	movlb	2	; () banked
  2894  0013CC  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  2895  0013CE  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  2896  0013D0  90D8               	bcf	status,0
  2897  0013D2  0102               	movlb	2	; () banked
  2898  0013D4  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  2899  0013D6  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  2900  0013D8  0102               	movlb	2	; () banked
  2901  0013DA  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  2902  0013DC  A0D8               	btfss	status,0
  2903  0013DE  D001               	bra	u2365
  2904  0013E0  8889               	bsf	c:(31820/8),(31820)&7	;volatile
  2905  0013E2                     	u2365:
  2906  0013E2  B0D8               	btfsc	status,0
  2907  0013E4  D001               	bra	u2366
  2908  0013E6  9889               	bcf	c:(31820/8),(31820)&7	;volatile
  2909  0013E8                     	u2366:
  2910                           	line	92
  2911                           ;lcd.c: 92: LATA5=1;
  2912  0013E8  8A89               	bsf	c:(31821/8),(31821)&7	;volatile
  2913                           	line	93
  2914                           ;lcd.c: 93: DelayMs(10);
  2915  0013EA  0E0A               	movlw	low(0Ah)
  2916  0013EC  0102               	movlb	2	; () banked
  2917  0013EE  0102               	movlb	2	; () banked
  2918  0013F0  6F0C               	movwf	((?_DelayMs))&0ffh
  2919  0013F2  0E00               	movlw	high(0Ah)
  2920  0013F4  0102               	movlb	2	; () banked
  2921  0013F6  6F0D               	movwf	((?_DelayMs+1))&0ffh
  2922  0013F8  EC76  F00E         	call	_DelayMs	;wreg free
  2923                           	line	94
  2924                           ;lcd.c: 94: LATA5=0;
  2925  0013FC  9A89               	bcf	c:(31821/8),(31821)&7	;volatile
  2926                           	line	95
  2927                           ;lcd.c: 95: DATA=(data & 0x0f);
  2928  0013FE  C207  F208         	movff	(lcd_data@data),??_lcd_data+0+0
  2929  001402  0E0F               	movlw	0Fh
  2930  001404  0102               	movlb	2	; () banked
  2931  001406  1708               	andwf	(??_lcd_data+0+0)&0ffh
  2932  001408  0102               	movlb	2	; () banked
  2933  00140A  5108               	movf	(??_lcd_data+0+0)&0ffh,w
  2934  00140C  0100               	movlb	0	; () banked
  2935  00140E  0100               	movlb	0	; () banked
  2936  001410  6F90               	movwf	((144))&0ffh
  2937  001412  0100               	movlb	0	; () banked
  2938  001414  6B91               	clrf	((144+1))&0ffh
  2939                           	line	96
  2940                           ;lcd.c: 96: LATA1 = DATA & 0x01;
  2941  001416  0100               	movlb	0	; () banked
  2942  001418  0100               	movlb	0	; () banked
  2943  00141A  A190               	btfss	((144))&0ffh,0
  2944+ 00141C  D001               	bra	u2375
  2945+ 00141E  8289               	bsf	c:(31817/8),(31817)&7	;volatile
  2946+ 001420                     	u2375:
  2947+ 001420  0100               	movlb	0	; () banked
  2948+ 001422  0100               	movlb	0	; () banked
  2949+ 001424  B190               	btfsc	((144))&0ffh,0
  2950+ 001426  D001               	bra	u2376
  2951+ 001428  9289               	bcf	c:(31817/8),(31817)&7	;volatile
  2952+ 00142A                     	u2376:
  2953+                          	line	97
  2954+                          ;lcd.c: 97: LATA2 = (DATA & 0x02) >> 1;
  2955+ 00142A  0E02               	movlw	02h
  2956+ 00142C  0100               	movlb	0	; () banked
  2957+ 00142E  0100               	movlb	0	; () banked
  2958+ 001430  1590               	andwf	((144))&0ffh,w
  2959+ 001432  0102               	movlb	2	; () banked
  2960+ 001434  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  2961+ 001436  0E00               	movlw	0
  2962+ 001438  0100               	movlb	0	; () banked
  2963+ 00143A  0100               	movlb	0	; () banked
  2964+ 00143C  1591               	andwf	((144+1))&0ffh,w
  2965+ 00143E  0102               	movlb	2	; () banked
  2966+ 001440  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  2967+ 001442  90D8               	bcf	status,0
  2968+ 001444  0102               	movlb	2	; () banked
  2969+ 001446  3109               	rrcf	(??_lcd_data+0+1)&0ffh,w
  2970+ 001448  0102               	movlb	2	; () banked
  2971+ 00144A  6F0B               	movwf	(??_lcd_data+2+0+1)&0ffh
  2972+ 00144C  0102               	movlb	2	; () banked
  2973+ 00144E  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  2974+ 001450  0102               	movlb	2	; () banked
  2975+ 001452  6F0A               	movwf	(??_lcd_data+2+0)&0ffh
  2976+ 001454  0102               	movlb	2	; () banked
  2977+ 001456  310A               	rrcf	(??_lcd_data+2+0)&0ffh,w
  2978+ 001458  A0D8               	btfss	status,0
  2979+ 00145A  D001               	bra	u2385
  2980+ 00145C  8489               	bsf	c:(31818/8),(31818)&7	;volatile
  2981+ 00145E                     	u2385:
  2982+ 00145E  B0D8               	btfsc	status,0
  2983+ 001460  D001               	bra	u2386
  2984+ 001462  9489               	bcf	c:(31818/8),(31818)&7	;volatile
  2985+ 001464                     	u2386:
  2986+                          	line	98
  2987+                          ;lcd.c: 98: LATA3 = (DATA & 0x04) >> 2;
  2988+ 001464  0E04               	movlw	04h
  2989+ 001466  0100               	movlb	0	; () banked
  2990+ 001468  0100               	movlb	0	; () banked
  2991+ 00146A  1590               	andwf	((144))&0ffh,w
  2992+ 00146C  0102               	movlb	2	; () banked
  2993+ 00146E  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  2994+ 001470  0E00               	movlw	0
  2995+ 001472  0100               	movlb	0	; () banked
  2996+ 001474  0100               	movlb	0	; () banked
  2997+ 001476  1591               	andwf	((144+1))&0ffh,w
  2998+ 001478  0102               	movlb	2	; () banked
  2999+ 00147A  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  3000+ 00147C  90D8               	bcf	status,0
  3001+ 00147E  0102               	movlb	2	; () banked
  3002+ 001480  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  3003+ 001482  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  3004+ 001484  90D8               	bcf	status,0
  3005+ 001486  0102               	movlb	2	; () banked
  3006+ 001488  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  3007+ 00148A  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  3008+ 00148C  0102               	movlb	2	; () banked
  3009+ 00148E  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  3010+ 001490  A0D8               	btfss	status,0
  3011+ 001492  D001               	bra	u2395
  3012+ 001494  8689               	bsf	c:(31819/8),(31819)&7	;volatile
  3013+ 001496                     	u2395:
  3014+ 001496  B0D8               	btfsc	status,0
  3015+ 001498  D001               	bra	u2396
  3016+ 00149A  9689               	bcf	c:(31819/8),(31819)&7	;volatile
  3017+ 00149C                     	u2396:
  3018+                          	line	99
  3019+                          ;lcd.c: 99: LATA4 = (DATA & 0x08) >> 3;
  3020+ 00149C  0E08               	movlw	08h
  3021+ 00149E  0100               	movlb	0	; () banked
  3022+ 0014A0  0100               	movlb	0	; () banked
  3023+ 0014A2  1590               	andwf	((144))&0ffh,w
  3024+ 0014A4  0102               	movlb	2	; () banked
  3025+ 0014A6  6F08               	movwf	(??_lcd_data+0+0)&0ffh
  3026+ 0014A8  0E00               	movlw	0
  3027+ 0014AA  0100               	movlb	0	; () banked
  3028+ 0014AC  0100               	movlb	0	; () banked
  3029+ 0014AE  1591               	andwf	((144+1))&0ffh,w
  3030+ 0014B0  0102               	movlb	2	; () banked
  3031+ 0014B2  6F09               	movwf	(??_lcd_data+0+0+1)&0ffh
  3032+ 0014B4  90D8               	bcf	status,0
  3033+ 0014B6  0102               	movlb	2	; () banked
  3034+ 0014B8  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  3035+ 0014BA  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  3036+ 0014BC  90D8               	bcf	status,0
  3037+ 0014BE  0102               	movlb	2	; () banked
  3038+ 0014C0  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  3039+ 0014C2  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  3040+ 0014C4  90D8               	bcf	status,0
  3041+ 0014C6  0102               	movlb	2	; () banked
  3042+ 0014C8  3309               	rrcf	(??_lcd_data+0+1)&0ffh
  3043+ 0014CA  3308               	rrcf	(??_lcd_data+0+0)&0ffh
  3044+ 0014CC  0102               	movlb	2	; () banked
  3045+ 0014CE  3108               	rrcf	(??_lcd_data+0+0)&0ffh,w
  3046+ 0014D0  A0D8               	btfss	status,0
  3047+ 0014D2  D001               	bra	u2405
  3048+ 0014D4  8889               	bsf	c:(31820/8),(31820)&7	;volatile
  3049+ 0014D6                     	u2405:
  3050  0014D6  B0D8               	btfsc	status,0
  3051  0014D8  D001               	bra	u2406
  3052  0014DA  9889               	bcf	c:(31820/8),(31820)&7	;volatile
  3053  0014DC                     	u2406:
  3054                           	line	100
  3055                           ;lcd.c: 100: LATA5=1;
  3056  0014DC  8A89               	bsf	c:(31821/8),(31821)&7	;volatile
  3057                           	line	101
  3058                           ;lcd.c: 101: DelayMs(10);
  3059  0014DE  0E0A               	movlw	low(0Ah)
  3060  0014E0  0102               	movlb	2	; () banked
  3061  0014E2  0102               	movlb	2	; () banked
  3062  0014E4  6F0C               	movwf	((?_DelayMs))&0ffh
  3063  0014E6  0E00               	movlw	high(0Ah)
  3064  0014E8  0102               	movlb	2	; () banked
  3065  0014EA  6F0D               	movwf	((?_DelayMs+1))&0ffh
  3066  0014EC  EC76  F00E         	call	_DelayMs	;wreg free
  3067                           	line	102
  3068                           ;lcd.c: 102: LATA5=0;
  3069  0014F0  9A89               	bcf	c:(31821/8),(31821)&7	;volatile
  3070                           	line	103
  3071                           ;lcd.c: 103: DelayMs(5);
  3072  0014F2  0E05               	movlw	low(05h)
  3073  0014F4  0102               	movlb	2	; () banked
  3074  0014F6  0102               	movlb	2	; () banked
  3075  0014F8  6F0C               	movwf	((?_DelayMs))&0ffh
  3076  0014FA  0E00               	movlw	high(05h)
  3077  0014FC  0102               	movlb	2	; () banked
  3078  0014FE  6F0D               	movwf	((?_DelayMs+1))&0ffh
  3079  001500  EC76  F00E         	call	_DelayMs	;wreg free
  3080                           	line	104
  3081                           ;lcd.c: 104: }
  3082  001504                     l267:
  3083                           			; BSR set to: ?
  3084                           
  3085  001504  0012               	return
  3086                           	opt stack 0
  3087                           GLOBAL __end_of_lcd_data
  3088  001506                     	__end_of_lcd_data:
  3089                           	FNSIZE	_lcd_data,4,1
  3090                           ; =============== function _lcd_data ends ======
                                 ======
  3091                           
  3092                           	signat	_lcd_data,4216
  3093                           	global	_lcd_command
  3094                           	global	??_lcd_command
  3095                           	global	?_lcd_command
  3096                           
  3097                           ; *************** function _lcd_command ********
                                 *********
  3098                           ; Defined at:
  3099                           ;		line 63 in file "lcd.c"
  3100                           ; Parameters:
  3101                           ;		cmd            size:   1offs:   0	type: unsig
                                 ned char 
  3102                           ; Auto variables:
  3103                           ;		None
  3104                           ; Return value:
  3105                           ;		type: void 
  3106                           ;		size: 0
  3107                           ; Registers used:
  3108                           ;		wreg, status,2, status,0, cstack
  3109                           ; Tracked objects:
  3110                           ;		On entry : 0/0
  3111                           ;		On exit  : 0/0
  3112                           ;		Unchanged: 0/0
  3113                           ; Data sizes:
  3114                           ;		Autos:    0
  3115                           ;		Params:   1
  3116                           ;		Temp:     4
  3117                           ;		Total:    5
  3118                           ; This function calls:
  3119                           ;		_DelayMs
  3120                           ; This function is called by:
  3121                           ;		_lcd_init
  3122                           ;		_LCD_build
  3123                           ;		_Display
  3124                           ; This function uses a non-reentrant model
  3125                           ; 
  3126                                   psect   text21,class=CODE,space=0,reloc=
                                 2
  3127                           
  3128                           	opt lm
  3129                           	file	"lcd.c"
  3130                           	line	63
  3131  000000                     	__size_of_lcd_command	equ	__end_of_lcd_command-
                                 _lcd_command
  3132                           ;lcd.c: 62: void lcd_command(unsigned char cmd)
  3133                           ;lcd.c: 63: {
  3134                           	
  3135  0010FA                     _lcd_command:		; BSR set to: ?
  3136                           
  3137                           	opt stack 27
  3138                           	line	64
  3139                           ;lcd.c: 64: LATD1 = 0;
  3140  0010FA  928C               	bcf	c:(31841/8),(31841)&7	;volatile
  3141                           	line	65
  3142                           ;lcd.c: 65: DATA=((cmd>>4) & 0x0f);
  3143  0010FC  C207  F208         	movff	(lcd_command@cmd),??_lcd_command+0+0
  3144  001100  0102               	movlb	2	; () banked
  3145  001102  3B08               	swapf	(??_lcd_command+0+0)&0ffh
  3146  001104  0E0F               	movlw	(0ffh shr 4) & 0ffh
  3147  001106  1708               	andwf	(??_lcd_command+0+0)&0ffh
  3148  001108  0E0F               	movlw	0Fh
  3149  00110A  0102               	movlb	2	; () banked
  3150  00110C  1708               	andwf	(??_lcd_command+0+0)&0ffh
  3151  00110E  0102               	movlb	2	; () banked
  3152  001110  5108               	movf	(??_lcd_command+0+0)&0ffh,w
  3153  001112  0100               	movlb	0	; () banked
  3154  001114  0100               	movlb	0	; () banked
  3155  001116  6F90               	movwf	((144))&0ffh
  3156  001118  0100               	movlb	0	; () banked
  3157  00111A  6B91               	clrf	((144+1))&0ffh
  3158                           	line	66
  3159                           ;lcd.c: 66: LATA1 = DATA & 0x01;
  3160  00111C  0100               	movlb	0	; () banked
  3161  00111E  0100               	movlb	0	; () banked
  3162  001120  A190               	btfss	((144))&0ffh,0
  3163  001122  D001               	bra	u2445
  3164  001124  8289               	bsf	c:(31817/8),(31817)&7	;volatile
  3165  001126                     	u2445:
  3166  001126  0100               	movlb	0	; () banked
  3167  001128  0100               	movlb	0	; () banked
  3168  00112A  B190               	btfsc	((144))&0ffh,0
  3169  00112C  D001               	bra	u2446
  3170  00112E  9289               	bcf	c:(31817/8),(31817)&7	;volatile
  3171  001130                     	u2446:
  3172                           	line	67
  3173                           ;lcd.c: 67: LATA2 = (DATA & 0x02) >> 1;
  3174  001130  0E02               	movlw	02h
  3175  001132  0100               	movlb	0	; () banked
  3176  001134  0100               	movlb	0	; () banked
  3177  001136  1590               	andwf	((144))&0ffh,w
  3178  001138  0102               	movlb	2	; () banked
  3179  00113A  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3180  00113C  0E00               	movlw	0
  3181  00113E  0100               	movlb	0	; () banked
  3182  001140  0100               	movlb	0	; () banked
  3183  001142  1591               	andwf	((144+1))&0ffh,w
  3184  001144  0102               	movlb	2	; () banked
  3185  001146  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3186  001148  90D8               	bcf	status,0
  3187  00114A  0102               	movlb	2	; () banked
  3188  00114C  3109               	rrcf	(??_lcd_command+0+1)&0ffh,w
  3189  00114E  0102               	movlb	2	; () banked
  3190  001150  6F0B               	movwf	(??_lcd_command+2+0+1)&0ffh
  3191  001152  0102               	movlb	2	; () banked
  3192  001154  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3193  001156  0102               	movlb	2	; () banked
  3194  001158  6F0A               	movwf	(??_lcd_command+2+0)&0ffh
  3195  00115A  0102               	movlb	2	; () banked
  3196  00115C  310A               	rrcf	(??_lcd_command+2+0)&0ffh,w
  3197  00115E  A0D8               	btfss	status,0
  3198  001160  D001               	bra	u2455
  3199  001162  8489               	bsf	c:(31818/8),(31818)&7	;volatile
  3200  001164                     	u2455:
  3201  001164  B0D8               	btfsc	status,0
  3202  001166  D001               	bra	u2456
  3203  001168  9489               	bcf	c:(31818/8),(31818)&7	;volatile
  3204  00116A                     	u2456:
  3205                           	line	68
  3206                           ;lcd.c: 68: LATA3 = (DATA & 0x04) >> 2;
  3207  00116A  0E04               	movlw	04h
  3208  00116C  0100               	movlb	0	; () banked
  3209  00116E  0100               	movlb	0	; () banked
  3210  001170  1590               	andwf	((144))&0ffh,w
  3211  001172  0102               	movlb	2	; () banked
  3212  001174  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3213  001176  0E00               	movlw	0
  3214  001178  0100               	movlb	0	; () banked
  3215  00117A  0100               	movlb	0	; () banked
  3216  00117C  1591               	andwf	((144+1))&0ffh,w
  3217  00117E  0102               	movlb	2	; () banked
  3218  001180  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3219  001182  90D8               	bcf	status,0
  3220  001184  0102               	movlb	2	; () banked
  3221  001186  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3222  001188  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3223  00118A  90D8               	bcf	status,0
  3224  00118C  0102               	movlb	2	; () banked
  3225  00118E  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3226  001190  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3227  001192  0102               	movlb	2	; () banked
  3228  001194  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3229  001196  A0D8               	btfss	status,0
  3230  001198  D001               	bra	u2465
  3231  00119A  8689               	bsf	c:(31819/8),(31819)&7	;volatile
  3232  00119C                     	u2465:
  3233  00119C  B0D8               	btfsc	status,0
  3234  00119E  D001               	bra	u2466
  3235  0011A0  9689               	bcf	c:(31819/8),(31819)&7	;volatile
  3236  0011A2                     	u2466:
  3237                           	line	69
  3238                           ;lcd.c: 69: LATA4 = (DATA & 0x08) >> 3;
  3239  0011A2  0E08               	movlw	08h
  3240  0011A4  0100               	movlb	0	; () banked
  3241  0011A6  0100               	movlb	0	; () banked
  3242  0011A8  1590               	andwf	((144))&0ffh,w
  3243  0011AA  0102               	movlb	2	; () banked
  3244  0011AC  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3245  0011AE  0E00               	movlw	0
  3246  0011B0  0100               	movlb	0	; () banked
  3247  0011B2  0100               	movlb	0	; () banked
  3248  0011B4  1591               	andwf	((144+1))&0ffh,w
  3249  0011B6  0102               	movlb	2	; () banked
  3250  0011B8  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3251  0011BA  90D8               	bcf	status,0
  3252  0011BC  0102               	movlb	2	; () banked
  3253  0011BE  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3254  0011C0  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3255  0011C2  90D8               	bcf	status,0
  3256  0011C4  0102               	movlb	2	; () banked
  3257  0011C6  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3258  0011C8  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3259  0011CA  90D8               	bcf	status,0
  3260  0011CC  0102               	movlb	2	; () banked
  3261  0011CE  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3262  0011D0  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3263  0011D2  0102               	movlb	2	; () banked
  3264  0011D4  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3265  0011D6  A0D8               	btfss	status,0
  3266  0011D8  D001               	bra	u2475
  3267  0011DA  8889               	bsf	c:(31820/8),(31820)&7	;volatile
  3268  0011DC                     	u2475:
  3269  0011DC  B0D8               	btfsc	status,0
  3270  0011DE  D001               	bra	u2476
  3271  0011E0  9889               	bcf	c:(31820/8),(31820)&7	;volatile
  3272  0011E2                     	u2476:
  3273                           	line	70
  3274                           ;lcd.c: 70: LATA5=1;
  3275  0011E2  8A89               	bsf	c:(31821/8),(31821)&7	;volatile
  3276                           	line	71
  3277                           ;lcd.c: 71: DelayMs(10);
  3278  0011E4  0E0A               	movlw	low(0Ah)
  3279  0011E6  0102               	movlb	2	; () banked
  3280  0011E8  0102               	movlb	2	; () banked
  3281  0011EA  6F0C               	movwf	((?_DelayMs))&0ffh
  3282  0011EC  0E00               	movlw	high(0Ah)
  3283  0011EE  0102               	movlb	2	; () banked
  3284  0011F0  6F0D               	movwf	((?_DelayMs+1))&0ffh
  3285  0011F2  EC76  F00E         	call	_DelayMs	;wreg free
  3286                           	line	72
  3287                           ;lcd.c: 72: LATA5=0;
  3288  0011F6  9A89               	bcf	c:(31821/8),(31821)&7	;volatile
  3289                           	line	73
  3290                           ;lcd.c: 73: DATA=(cmd & 0x0f);
  3291  0011F8  C207  F208         	movff	(lcd_command@cmd),??_lcd_command+0+0
  3292  0011FC  0E0F               	movlw	0Fh
  3293  0011FE  0102               	movlb	2	; () banked
  3294  001200  1708               	andwf	(??_lcd_command+0+0)&0ffh
  3295  001202  0102               	movlb	2	; () banked
  3296  001204  5108               	movf	(??_lcd_command+0+0)&0ffh,w
  3297  001206  0100               	movlb	0	; () banked
  3298  001208  0100               	movlb	0	; () banked
  3299  00120A  6F90               	movwf	((144))&0ffh
  3300  00120C  0100               	movlb	0	; () banked
  3301  00120E  6B91               	clrf	((144+1))&0ffh
  3302                           	line	74
  3303                           ;lcd.c: 74: LATA1 = DATA & 0x01;
  3304  001210  0100               	movlb	0	; () banked
  3305  001212  0100               	movlb	0	; () banked
  3306  001214  A190               	btfss	((144))&0ffh,0
  3307  001216  D001               	bra	u2485
  3308  001218  8289               	bsf	c:(31817/8),(31817)&7	;volatile
  3309  00121A                     	u2485:
  3310  00121A  0100               	movlb	0	; () banked
  3311  00121C  0100               	movlb	0	; () banked
  3312  00121E  B190               	btfsc	((144))&0ffh,0
  3313  001220  D001               	bra	u2486
  3314  001222  9289               	bcf	c:(31817/8),(31817)&7	;volatile
  3315  001224                     	u2486:
  3316                           	line	75
  3317                           ;lcd.c: 75: LATA2 = (DATA & 0x02) >> 1;
  3318  001224  0E02               	movlw	02h
  3319  001226  0100               	movlb	0	; () banked
  3320  001228  0100               	movlb	0	; () banked
  3321  00122A  1590               	andwf	((144))&0ffh,w
  3322  00122C  0102               	movlb	2	; () banked
  3323  00122E  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3324  001230  0E00               	movlw	0
  3325  001232  0100               	movlb	0	; () banked
  3326  001234  0100               	movlb	0	; () banked
  3327  001236  1591               	andwf	((144+1))&0ffh,w
  3328  001238  0102               	movlb	2	; () banked
  3329  00123A  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3330  00123C  90D8               	bcf	status,0
  3331  00123E  0102               	movlb	2	; () banked
  3332  001240  3109               	rrcf	(??_lcd_command+0+1)&0ffh,w
  3333  001242  0102               	movlb	2	; () banked
  3334  001244  6F0B               	movwf	(??_lcd_command+2+0+1)&0ffh
  3335  001246  0102               	movlb	2	; () banked
  3336  001248  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3337  00124A  0102               	movlb	2	; () banked
  3338  00124C  6F0A               	movwf	(??_lcd_command+2+0)&0ffh
  3339  00124E  0102               	movlb	2	; () banked
  3340  001250  310A               	rrcf	(??_lcd_command+2+0)&0ffh,w
  3341  001252  A0D8               	btfss	status,0
  3342  001254  D001               	bra	u2495
  3343  001256  8489               	bsf	c:(31818/8),(31818)&7	;volatile
  3344  001258                     	u2495:
  3345  001258  B0D8               	btfsc	status,0
  3346  00125A  D001               	bra	u2496
  3347  00125C  9489               	bcf	c:(31818/8),(31818)&7	;volatile
  3348  00125E                     	u2496:
  3349                           	line	76
  3350                           ;lcd.c: 76: LATA3 = (DATA & 0x04) >> 2;
  3351  00125E  0E04               	movlw	04h
  3352  001260  0100               	movlb	0	; () banked
  3353  001262  0100               	movlb	0	; () banked
  3354  001264  1590               	andwf	((144))&0ffh,w
  3355  001266  0102               	movlb	2	; () banked
  3356  001268  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3357  00126A  0E00               	movlw	0
  3358  00126C  0100               	movlb	0	; () banked
  3359  00126E  0100               	movlb	0	; () banked
  3360  001270  1591               	andwf	((144+1))&0ffh,w
  3361  001272  0102               	movlb	2	; () banked
  3362  001274  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3363  001276  90D8               	bcf	status,0
  3364  001278  0102               	movlb	2	; () banked
  3365  00127A  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3366  00127C  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3367  00127E  90D8               	bcf	status,0
  3368  001280  0102               	movlb	2	; () banked
  3369  001282  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3370  001284  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3371  001286  0102               	movlb	2	; () banked
  3372  001288  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3373  00128A  A0D8               	btfss	status,0
  3374  00128C  D001               	bra	u2505
  3375  00128E  8689               	bsf	c:(31819/8),(31819)&7	;volatile
  3376  001290                     	u2505:
  3377  001290  B0D8               	btfsc	status,0
  3378  001292  D001               	bra	u2506
  3379  001294  9689               	bcf	c:(31819/8),(31819)&7	;volatile
  3380  001296                     	u2506:
  3381                           	line	77
  3382                           ;lcd.c: 77: LATA4 = (DATA & 0x08) >> 3;
  3383  001296  0E08               	movlw	08h
  3384  001298  0100               	movlb	0	; () banked
  3385  00129A  0100               	movlb	0	; () banked
  3386  00129C  1590               	andwf	((144))&0ffh,w
  3387  00129E  0102               	movlb	2	; () banked
  3388  0012A0  6F08               	movwf	(??_lcd_command+0+0)&0ffh
  3389  0012A2  0E00               	movlw	0
  3390  0012A4  0100               	movlb	0	; () banked
  3391  0012A6  0100               	movlb	0	; () banked
  3392  0012A8  1591               	andwf	((144+1))&0ffh,w
  3393  0012AA  0102               	movlb	2	; () banked
  3394  0012AC  6F09               	movwf	(??_lcd_command+0+0+1)&0ffh
  3395  0012AE  90D8               	bcf	status,0
  3396  0012B0  0102               	movlb	2	; () banked
  3397  0012B2  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3398  0012B4  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3399  0012B6  90D8               	bcf	status,0
  3400  0012B8  0102               	movlb	2	; () banked
  3401  0012BA  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3402  0012BC  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3403  0012BE  90D8               	bcf	status,0
  3404  0012C0  0102               	movlb	2	; () banked
  3405  0012C2  3309               	rrcf	(??_lcd_command+0+1)&0ffh
  3406  0012C4  3308               	rrcf	(??_lcd_command+0+0)&0ffh
  3407  0012C6  0102               	movlb	2	; () banked
  3408  0012C8  3108               	rrcf	(??_lcd_command+0+0)&0ffh,w
  3409  0012CA  A0D8               	btfss	status,0
  3410  0012CC  D001               	bra	u2515
  3411  0012CE  8889               	bsf	c:(31820/8),(31820)&7	;volatile
  3412  0012D0                     	u2515:
  3413  0012D0  B0D8               	btfsc	status,0
  3414  0012D2  D001               	bra	u2516
  3415  0012D4  9889               	bcf	c:(31820/8),(31820)&7	;volatile
  3416  0012D6                     	u2516:
  3417                           	line	78
  3418                           ;lcd.c: 78: LATA5=1;
  3419  0012D6  8A89               	bsf	c:(31821/8),(31821)&7	;volatile
  3420                           	line	79
  3421                           ;lcd.c: 79: DelayMs(10);
  3422  0012D8  0E0A               	movlw	low(0Ah)
  3423  0012DA  0102               	movlb	2	; () banked
  3424  0012DC  0102               	movlb	2	; () banked
  3425  0012DE  6F0C               	movwf	((?_DelayMs))&0ffh
  3426  0012E0  0E00               	movlw	high(0Ah)
  3427  0012E2  0102               	movlb	2	; () banked
  3428  0012E4  6F0D               	movwf	((?_DelayMs+1))&0ffh
  3429  0012E6  EC76  F00E         	call	_DelayMs	;wreg free
  3430                           	line	80
  3431                           ;lcd.c: 80: LATA5=0;
  3432  0012EA  9A89               	bcf	c:(31821/8),(31821)&7	;volatile
  3433                           	line	81
  3434                           ;lcd.c: 81: DelayMs(5);
  3435  0012EC  0E05               	movlw	low(05h)
  3436  0012EE  0102               	movlb	2	; () banked
  3437  0012F0  0102               	movlb	2	; () banked
  3438  0012F2  6F0C               	movwf	((?_DelayMs))&0ffh
  3439  0012F4  0E00               	movlw	high(05h)
  3440  0012F6  0102               	movlb	2	; () banked
  3441  0012F8  6F0D               	movwf	((?_DelayMs+1))&0ffh
  3442  0012FA  EC76  F00E         	call	_DelayMs	;wreg free
  3443                           	line	82
  3444                           ;lcd.c: 82: }
  3445  0012FE                     l266:
  3446                           			; BSR set to: ?
  3447                           
  3448  0012FE  0012               	return
  3449                           	opt stack 0
  3450                           GLOBAL __end_of_lcd_command
  3451  001300                     	__end_of_lcd_command:
  3452                           	FNSIZE	_lcd_command,4,1
  3453                           ; =============== function _lcd_command ends ===
                                 =========
  3454                           
  3455                           	signat	_lcd_command,4216
  3456                           	global	_DelayMs
  3457                           	global	??_DelayMs
  3458                           	global	?_DelayMs
  3459                           
  3460                           ; *************** function _DelayMs ************
                                 *****
  3461                           ; Defined at:
  3462                           ;		line 11 in file "lcd.c"
  3463                           ; Parameters:
  3464                           ;		Ms             size:   2offs:   0	type: unsig
                                 ned int 
  3465                           ; Auto variables:
  3466                           ;		delay_cnst  	       	type: unsigned int 
  3467                           ; Return value:
  3468                           ;		type: void 
  3469                           ;		size: 0
  3470                           ; Registers used:
  3471                           ;		wreg, status,2, status,0
  3472                           ; Tracked objects:
  3473                           ;		On entry : 0/0
  3474                           ;		On exit  : 0/0
  3475                           ;		Unchanged: 0/0
  3476                           ; Data sizes:
  3477                           ;		Autos:    2
  3478                           ;		Params:   2
  3479                           ;		Temp:     0
  3480                           ;		Total:    4
  3481                           ; This function calls:
  3482                           ;		Nothing
  3483                           ; This function is called by:
  3484                           ;		_lcd_command
  3485                           ;		_lcd_data
  3486                           ;		_lcd_init
  3487                           ;		_Adc_init
  3488                           ;		_Display
  3489                           ; This function uses a non-reentrant model
  3490                           ; 
  3491                                   psect   text22,class=CODE,space=0,reloc=
                                 2
  3492                           
  3493                           	opt lm
  3494                           	file	"lcd.c"
  3495                           	line	11
  3496  000000                     	__size_of_DelayMs	equ	__end_of_DelayMs-_DelayMs
  3497                           ;lcd.c: 10: void DelayMs(unsigned int Ms)
  3498                           ;lcd.c: 11: {
  3499                           	
  3500  001CEC                     _DelayMs:		; BSR set to: ?
  3501                           
  3502                           	opt stack 26
  3503                           	line	13
  3504  001CEC  EFA6  F00E         	goto	l241
  3505                           	
  3506  001CF0                     l242:		; BSR set to: ?
  3507                           
  3508                           	line	15
  3509                           ;lcd.c: 14: {
  3510                           ;lcd.c: 15: Ms--;
  3511  001CF0  0102               	movlb	2	; () banked
  3512  001CF2  0102               	movlb	2	; () banked
  3513  001CF4  070C               	decf	((DelayMs@Ms))&0ffh
  3514  001CF6  A0D8               	btfss	status,0
  3515  001CF8  070D               	decf	((DelayMs@Ms+1))&0ffh
  3516                           	line	17
  3517                           ;lcd.c: 17: for(delay_cnst = 0;delay_cnst <50;de
                                 lay_cnst++);
  3518  001CFA  0E00               	movlw	low(0)
  3519  001CFC  0102               	movlb	2	; () banked
  3520  001CFE  0102               	movlb	2	; () banked
  3521  001D00  6F0E               	movwf	((DelayMs@delay_cnst))&0ffh
  3522  001D02  0E00               	movlw	high(0)
  3523  001D04  0102               	movlb	2	; () banked
  3524  001D06  6F0F               	movwf	((DelayMs@delay_cnst+1))&0ffh
  3525  001D08  0E32               	movlw	032h
  3526  001D0A  0102               	movlb	2	; () banked
  3527  001D0C  0102               	movlb	2	; () banked
  3528  001D0E  5D0E               	subwf	((DelayMs@delay_cnst))&0ffh,w
  3529  001D10  0E00               	movlw	0
  3530  001D12  0102               	movlb	2	; () banked
  3531  001D14  590F               	subwfb	((DelayMs@delay_cnst+1))&0ffh,w
  3532  001D16  A0D8               	btfss	status,0
  3533  001D18  EF90  F00E         	goto	u2521
  3534  001D1C  EF92  F00E         	goto	u2520
  3535  001D20                     u2521:
  3536  001D20  EF94  F00E         	goto	l244
  3537  001D24                     u2520:
  3538  001D24  EFA6  F00E         	goto	l241
  3539                           	
  3540  001D28                     l244:		; BSR set to: ?
  3541                           
  3542  001D28  0102               	movlb	2	; () banked
  3543  001D2A  0102               	movlb	2	; () banked
  3544  001D2C  4B0E               	infsnz	((DelayMs@delay_cnst))&0ffh
  3545  001D2E  2B0F               	incf	((DelayMs@delay_cnst+1))&0ffh
  3546  001D30  0E32               	movlw	032h
  3547  001D32  0102               	movlb	2	; () banked
  3548  001D34  0102               	movlb	2	; () banked
  3549  001D36  5D0E               	subwf	((DelayMs@delay_cnst))&0ffh,w
  3550  001D38  0E00               	movlw	0
  3551  001D3A  0102               	movlb	2	; () banked
  3552  001D3C  590F               	subwfb	((DelayMs@delay_cnst+1))&0ffh,w
  3553  001D3E  A0D8               	btfss	status,0
  3554  001D40  EFA4  F00E         	goto	u2531
  3555  001D44  EFA6  F00E         	goto	u2530
  3556  001D48                     u2531:
  3557  001D48  EF94  F00E         	goto	l244
  3558  001D4C                     u2530:
  3559                           	
  3560  001D4C                     l245:		; BSR set to: ?
  3561                           
  3562                           	line	18
  3563                           	
  3564  001D4C                     l241:		; BSR set to: ?
  3565                           
  3566                           	line	13
  3567  001D4C  0102               	movlb	2	; () banked
  3568  001D4E  0102               	movlb	2	; () banked
  3569  001D50  510D               	movf	((DelayMs@Ms+1))&0ffh,w
  3570  001D52  110C               	iorwf ((DelayMs@Ms))&0ffh,w
  3571                           
  3572  001D54  A4D8               	btfss	status,2
  3573  001D56  EFAF  F00E         	goto	u2541
  3574  001D5A  EFB1  F00E         	goto	u2540
  3575  001D5E                     u2541:
  3576  001D5E  EF78  F00E         	goto	l242
  3577  001D62                     u2540:
  3578                           	
  3579  001D62                     l243:		; BSR set to: ?
  3580                           
  3581                           	line	19
  3582                           ;lcd.c: 18: }
  3583                           ;lcd.c: 19: }
  3584  001D62                     l240:
  3585                           			; BSR set to: ?
  3586                           
  3587  001D62  0012               	return
  3588                           	opt stack 0
  3589                           GLOBAL __end_of_DelayMs
  3590  001D64                     	__end_of_DelayMs:
  3591                           	FNSIZE	_DelayMs,2,2
  3592                           ; =============== function _DelayMs ends =======
                                 =====
  3593                           
  3594                           	signat	_DelayMs,4216
  3595                           	global	_isr
  3596                           	global	??_isr
  3597                           	global	?_isr
  3598                           
  3599                           ; *************** function _isr ****************
                                 *
  3600                           ; Defined at:
  3601                           ;		line 106 in file "main.c"
  3602                           ; Parameters:
  3603                           ;		None
  3604                           ; Auto variables:
  3605                           ;		None
  3606                           ; Return value:
  3607                           ;		type: void 
  3608                           ;		size: 0
  3609                           ; Registers used:
  3610                           ;		wreg, status,2
  3611                           ; Tracked objects:
  3612                           ;		On entry : 0/0
  3613                           ;		On exit  : 0/0
  3614                           ;		Unchanged: 0/0
  3615                           ; Data sizes:
  3616                           ;		Autos:    0
  3617                           ;		Params:   0
  3618                           ;		Temp:    15
  3619                           ;		Total:   15
  3620                           ; This function calls:
  3621                           ;		Nothing
  3622                           ; This function is called by:
  3623                           ;		Interrupt level 2
  3624                           ; This function uses a non-reentrant model
  3625                           ; 
  3626                                   psect   text23,class=CODE,space=0,reloc=
                                 2
  3627                           
  3628                           	opt lm
  3629                           	file	"main.c"
  3630                           	line	106
  3631  000000                     	__size_of_isr	equ	__end_of_isr-_isr
  3632                           ;main.c: 105: void interrupt isr(void)
  3633                           ;main.c: 106: {
  3634                           	
  3635  001A16                     _isr:		; BSR set to: ?
  3636                           
  3637  001A16  0006               	pop	; remove dummy address from shadow register
                                  refresh
  3638                           
  3639                           	opt stack 31
  3640                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  3641                           	global	int_func
  3642  000008                     int_func:
  3643                                   psect   intcode
  3644  000008  CFFA F211          	movff	pclat+0,??_isr+1
  3645  00000C  CFFB F212          	movff	pclat+1,??_isr+2
  3646  000010  CFE9 F213          	movff	fsr0l+0,??_isr+3
  3647  000014  ED0B  F00D         	call	_isr,f	;refresh shadow registers
  3648                                   psect   text23
  3649  001A18  CFEA F214          	movff	fsr0h+0,??_isr+4
  3650  001A1C  CFE1 F215          	movff	fsr1l+0,??_isr+5
  3651  001A20  CFE2 F216          	movff	fsr1h+0,??_isr+6
  3652  001A24  CFD9 F217          	movff	fsr2l+0,??_isr+7
  3653  001A28  CFDA F218          	movff	fsr2h+0,??_isr+8
  3654  001A2C  CFF3 F219          	movff	prodl+0,??_isr+9
  3655  001A30  CFF4 F21A          	movff	prodh+0,??_isr+10
  3656  001A34  CFF6 F21B          	movff	tblptrl+0,??_isr+11
  3657  001A38  CFF7 F21C          	movff	tblptrh+0,??_isr+12
  3658  001A3C  CFF8 F21D          	movff	tblptru+0,??_isr+13
  3659  001A40  CFF5 F21E          	movff	tablat+0,??_isr+14
  3660                           	line	107
  3661                           ;main.c: 107: if (TMR0IE && TMR0IF)
  3662  001A44  AAF2               	btfss	c:(32661/8),(32661)&7
  3663  001A46  EF27  F00D         	goto	i2u491
  3664  001A4A  EF29  F00D         	goto	i2u490
  3665  001A4E                     i2u491:
  3666  001A4E  EF31  F00D         	goto	i2l123
  3667  001A52                     i2u490:
  3668  001A52  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  3669  001A54  EF2E  F00D         	goto	i2u501
  3670  001A58  EF30  F00D         	goto	i2u500
  3671  001A5C                     i2u501:
  3672  001A5C  EF31  F00D         	goto	i2l123
  3673  001A60                     i2u500:
  3674                           	line	108
  3675                           ;main.c: 108: TMR0IF = 0;
  3676  001A60  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  3677                           	
  3678  001A62                     i2l123:		; BSR set to: ?
  3679                           
  3680                           	line	110
  3681                           ;main.c: 110: if (TMR1IF && TMR1IE)
  3682  001A62  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  3683  001A64  EF36  F00D         	goto	i2u511
  3684  001A68  EF38  F00D         	goto	i2u510
  3685  001A6C                     i2u511:
  3686  001A6C  EF4E  F00D         	goto	i2l124
  3687  001A70                     i2u510:
  3688  001A70  A09D               	btfss	c:(31976/8),(31976)&7
  3689  001A72  EF3D  F00D         	goto	i2u521
  3690  001A76  EF3F  F00D         	goto	i2u520
  3691  001A7A                     i2u521:
  3692  001A7A  EF4E  F00D         	goto	i2l124
  3693  001A7E                     i2u520:
  3694                           	line	112
  3695                           ;main.c: 111: {
  3696                           ;main.c: 112: TMR1IF = 0;
  3697  001A7E  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  3698                           	line	113
  3699                           ;main.c: 113: TMR0 = 0;
  3700  001A80  0E00               	movlw	low(0)
  3701  001A82  6ED6               	movwf	((c:4054)),c	;volatile
  3702  001A84  0E00               	movlw	high(0)
  3703  001A86  6ED7               	movwf	((c:4054+1)),c	;volatile
  3704                           	line	114
  3705                           ;main.c: 114: TMR1ON = 0;
  3706  001A88  90CD               	bcf	c:(32360/8),(32360)&7
  3707                           	line	116
  3708                           ;main.c: 116: TMR1L = 0x00;
  3709  001A8A  0E00               	movlw	low(0)
  3710  001A8C  6ECE               	movwf	((c:4046)),c	;volatile
  3711                           	line	117
  3712                           ;main.c: 117: TMR1H = 0x00;
  3713  001A8E  0E00               	movlw	low(0)
  3714  001A90  6ECF               	movwf	((c:4047)),c	;volatile
  3715                           	line	118
  3716                           ;main.c: 118: TMR1ON = 1;
  3717  001A92  80CD               	bsf	c:(32360/8),(32360)&7
  3718                           	line	120
  3719                           ;main.c: 120: TMR0 = 0;
  3720  001A94  0E00               	movlw	low(0)
  3721  001A96  6ED6               	movwf	((c:4054)),c	;volatile
  3722  001A98  0E00               	movlw	high(0)
  3723  001A9A  6ED7               	movwf	((c:4054+1)),c	;volatile
  3724                           	line	122
  3725                           	
  3726  001A9C                     i2l124:		; BSR set to: ?
  3727                           
  3728                           	line	124
  3729                           ;main.c: 122: }
  3730                           ;main.c: 124: if(INT0IE && INT0IF)
  3731  001A9C  A8F2               	btfss	c:(32660/8),(32660)&7
  3732  001A9E  EF53  F00D         	goto	i2u531
  3733  001AA2  EF55  F00D         	goto	i2u530
  3734  001AA6                     i2u531:
  3735  001AA6  EF65  F00D         	goto	i2l125
  3736  001AAA                     i2u530:
  3737  001AAA  A2F2               	btfss	c:(32657/8),(32657)&7	;volatile
  3738  001AAC  EF5A  F00D         	goto	i2u541
  3739  001AB0  EF5C  F00D         	goto	i2u540
  3740  001AB4                     i2u541:
  3741  001AB4  EF65  F00D         	goto	i2l125
  3742  001AB8                     i2u540:
  3743                           	line	126
  3744                           ;main.c: 125: {
  3745                           ;main.c: 126: INT0IF = 0;
  3746  001AB8  92F2               	bcf	c:(32657/8),(32657)&7	;volatile
  3747                           	line	127
  3748                           ;main.c: 127: FFT_ready_flag = 1;
  3749  001ABA  0102               	movlb	2	; () banked
  3750  001ABC  6F10               	movwf	(??_isr+0+0)&0ffh
  3751  001ABE  0E01               	movlw	low(01h)
  3752  001AC0  0100               	movlb	0	; () banked
  3753  001AC2  0100               	movlb	0	; () banked
  3754  001AC4  6FA4               	movwf	((164))&0ffh
  3755  001AC6  0102               	movlb	2	; () banked
  3756  001AC8  5110               	movf	(??_isr+0+0)&0ffh,w
  3757                           	line	128
  3758                           	
  3759  001ACA                     i2l125:		; BSR set to: ?
  3760                           
  3761                           	line	129
  3762                           ;main.c: 128: }
  3763                           ;main.c: 129: }
  3764  001ACA                     i2l122:
  3765                           			; BSR set to: ?
  3766                           
  3767  001ACA  C21E  FFF5         	movff	??_isr+14,tablat+0
  3768  001ACE  C21D  FFF8         	movff	??_isr+13,tblptru+0
  3769  001AD2  C21C  FFF7         	movff	??_isr+12,tblptrh+0
  3770  001AD6  C21B  FFF6         	movff	??_isr+11,tblptrl+0
  3771  001ADA  C21A  FFF4         	movff	??_isr+10,prodh+0
  3772  001ADE  C219  FFF3         	movff	??_isr+9,prodl+0
  3773  001AE2  C218  FFDA         	movff	??_isr+8,fsr2h+0
  3774  001AE6  C217  FFD9         	movff	??_isr+7,fsr2l+0
  3775  001AEA  C216  FFE2         	movff	??_isr+6,fsr1h+0
  3776  001AEE  C215  FFE1         	movff	??_isr+5,fsr1l+0
  3777  001AF2  C214  FFEA         	movff	??_isr+4,fsr0h+0
  3778  001AF6  C213  FFE9         	movff	??_isr+3,fsr0l+0
  3779  001AFA  C212  FFFB         	movff	??_isr+2,pclat+1
  3780  001AFE  C211  FFFA         	movff	??_isr+1,pclat+0
  3781  001B02  0011               	retfie f
  3782                           	opt stack 0
  3783                           GLOBAL __end_of_isr
  3784  001B04                     	__end_of_isr:
  3785                           	FNSIZE	_isr,15,0
  3786                           ; =============== function _isr ends ===========
                                 =
  3787                           
  3788                           	signat	_isr,88
  3789                           	FNCALL	_main,_USARTinit
  3790                           	FNCALL	_main,_lcd_init
  3791                           	FNCALL	_main,_Initcustom_char
  3792                           	FNCALL	_main,_Adc_init
  3793                           	FNCALL	_main,_Init_i2c
  3794                           	FNCALL	_main,_Init_stat_isr
  3795                           	FNCALL	_main,_Init_PWM
  3796                           	FNCALL	_main,_Set_PWM_Duty
  3797                           	FNCALL	_main,_Read_FFT
  3798                           	FNCALL	_main,_Calc_percentageFull
  3799                           	FNCALL	_main,_Disp_Mill_fill
  3800                           	FNCALL	_Set_PWM_Duty,___awdiv
  3801                           	FNCALL	_Read_FFT,_i2c_start
  3802                           	FNCALL	_Read_FFT,_i2c_write
  3803                           	FNCALL	_Read_FFT,_i2c_read
  3804                           	FNCALL	_Read_FFT,_i2c_master_ack
  3805                           	FNCALL	_Read_FFT,_i2c_stop
  3806                           	FNCALL	_Adc_init,_DelayMs
  3807                           	FNCALL	_Initcustom_char,_LCD_build
  3808                           	FNCALL	_lcd_init,_DelayMs
  3809                           	FNCALL	_lcd_init,_lcd_command
  3810                           	FNCALL	_i2c_read,_i2c_idle
  3811                           	FNCALL	_i2c_write,_i2c_idle
  3812                           	FNCALL	_LCD_build,_lcd_command
  3813                           	FNCALL	_LCD_build,_lcd_data
  3814                           	FNCALL	_i2c_start,_i2c_idle
  3815                           	FNCALL	_lcd_data,_DelayMs
  3816                           	FNCALL	_lcd_command,_DelayMs
  3817                           	FNROOT	_main
  3818                           	FNCALL	intlevel2,_isr
  3819                           	global	intlevel2
  3820                           	FNROOT	intlevel2
  3821                           	global	_gainarr
  3822                           	global	_gainarr
  3823                                   psect   text24,class=CODE,space=0,reloc=
                                 2
  3824  000000                     _gainarr  equ     189
  3825                           
  3826                           	opt lm
  3827                           
  3828                           	DABS	1,189,108	;_gainarr
  3829                           	global	F1805
  3830  000000                     F1805  equ     297
  3831                           
  3832                           	DABS	1,297,8	;F1805
  3833                           	global	_pattern0
  3834                           	global	_pattern0
  3835  000000                     _pattern0  equ     305
  3836                           
  3837                           	DABS	1,305,8	;_pattern0
  3838                           	global	_pattern1
  3839                           	global	_pattern1
  3840  000000                     _pattern1  equ     313
  3841                           
  3842                           	DABS	1,313,8	;_pattern1
  3843                           	global	_pattern2
  3844                           	global	_pattern2
  3845  000000                     _pattern2  equ     321
  3846                           
  3847                           	DABS	1,321,8	;_pattern2
  3848                           	global	_pattern3
  3849                           	global	_pattern3
  3850  000000                     _pattern3  equ     329
  3851                           
  3852                           	DABS	1,329,8	;_pattern3
  3853                           	global	_pattern4
  3854                           	global	_pattern4
  3855  000000                     _pattern4  equ     337
  3856                           
  3857                           	DABS	1,337,8	;_pattern4
  3858                           	global	_pattern5
  3859                           	global	_pattern5
  3860  000000                     _pattern5  equ     345
  3861                           
  3862                           	DABS	1,345,8	;_pattern5
  3863                           	global	_pattern6
  3864                           	global	_pattern6
  3865  000000                     _pattern6  equ     353
  3866                           
  3867                           	DABS	1,353,8	;_pattern6
  3868                           	global	_pattern7
  3869                           	global	_pattern7
  3870  000000                     _pattern7  equ     361
  3871                           
  3872                           	DABS	1,361,8	;_pattern7
  3873                                   psect   idata,class=CODE,space=0
  3874                           	file	"MAIN.h"
  3875                           	line	111
  3876                           
  3877                           ;initializer for _gainarr
  3878  001046  00                 	db	low(float24(0.25000000000000000))
  3879  001047  80                 	db	high(float24(0.25000000000000000))
  3880  001048  3E                 	db	low highword(float24(0.25000000000000000))
  3881  001049  00                 	db	low(float24(0.50000000000000000))
  3882  00104A  00                 	db	high(float24(0.50000000000000000))
  3883  00104B  3F                 	db	low highword(float24(0.50000000000000000))
  3884  00104C  00                 	db	low(float24(0.75000000000000000))
  3885  00104D  40                 	db	high(float24(0.75000000000000000))
  3886  00104E  3F                 	db	low highword(float24(0.75000000000000000))
  3887  00104F  00                 	db	low(float24(1.0000000000000000))
  3888  001050  80                 	db	high(float24(1.0000000000000000))
  3889  001051  3F                 	db	low highword(float24(1.0000000000000000))
  3890  001052  00                 	db	low(float24(1.2500000000000000))
  3891  001053  A0                 	db	high(float24(1.2500000000000000))
  3892  001054  3F                 	db	low highword(float24(1.2500000000000000))
  3893  001055  00                 	db	low(float24(1.5000000000000000))
  3894  001056  C0                 	db	high(float24(1.5000000000000000))
  3895  001057  3F                 	db	low highword(float24(1.5000000000000000))
  3896  001058  00                 	db	low(float24(1.7500000000000000))
  3897  001059  E0                 	db	high(float24(1.7500000000000000))
  3898  00105A  3F                 	db	low highword(float24(1.7500000000000000))
  3899  00105B  00                 	db	low(float24(2.0000000000000000))
  3900  00105C  00                 	db	high(float24(2.0000000000000000))
  3901  00105D  40                 	db	low highword(float24(2.0000000000000000))
  3902  00105E  00                 	db	low(float24(2.5000000000000000))
  3903  00105F  20                 	db	high(float24(2.5000000000000000))
  3904  001060  40                 	db	low highword(float24(2.5000000000000000))
  3905  001061  00                 	db	low(float24(3.0000000000000000))
  3906  001062  40                 	db	high(float24(3.0000000000000000))
  3907  001063  40                 	db	low highword(float24(3.0000000000000000))
  3908  001064  00                 	db	low(float24(3.5000000000000000))
  3909  001065  60                 	db	high(float24(3.5000000000000000))
  3910  001066  40                 	db	low highword(float24(3.5000000000000000))
  3911  001067  00                 	db	low(float24(4.0000000000000000))
  3912  001068  80                 	db	high(float24(4.0000000000000000))
  3913  001069  40                 	db	low highword(float24(4.0000000000000000))
  3914  00106A  00                 	db	low(float24(5.0000000000000000))
  3915  00106B  A0                 	db	high(float24(5.0000000000000000))
  3916  00106C  40                 	db	low highword(float24(5.0000000000000000))
  3917  00106D  00                 	db	low(float24(6.0000000000000000))
  3918  00106E  C0                 	db	high(float24(6.0000000000000000))
  3919  00106F  40                 	db	low highword(float24(6.0000000000000000))
  3920  001070  00                 	db	low(float24(7.0000000000000000))
  3921  001071  E0                 	db	high(float24(7.0000000000000000))
  3922  001072  40                 	db	low highword(float24(7.0000000000000000))
  3923  001073  00                 	db	low(float24(8.0000000000000000))
  3924  001074  00                 	db	high(float24(8.0000000000000000))
  3925  001075  41                 	db	low highword(float24(8.0000000000000000))
  3926  001076  00                 	db	low(float24(10.000000000000000))
  3927  001077  20                 	db	high(float24(10.000000000000000))
  3928  001078  41                 	db	low highword(float24(10.000000000000000))
  3929  001079  00                 	db	low(float24(12.000000000000000))
  3930  00107A  40                 	db	high(float24(12.000000000000000))
  3931  00107B  41                 	db	low highword(float24(12.000000000000000))
  3932  00107C  00                 	db	low(float24(14.000000000000000))
  3933  00107D  60                 	db	high(float24(14.000000000000000))
  3934  00107E  41                 	db	low highword(float24(14.000000000000000))
  3935  00107F  00                 	db	low(float24(16.000000000000000))
  3936  001080  80                 	db	high(float24(16.000000000000000))
  3937  001081  41                 	db	low highword(float24(16.000000000000000))
  3938  001082  00                 	db	low(float24(20.000000000000000))
  3939  001083  A0                 	db	high(float24(20.000000000000000))
  3940  001084  41                 	db	low highword(float24(20.000000000000000))
  3941  001085  00                 	db	low(float24(24.000000000000000))
  3942  001086  C0                 	db	high(float24(24.000000000000000))
  3943  001087  41                 	db	low highword(float24(24.000000000000000))
  3944  001088  00                 	db	low(float24(28.000000000000000))
  3945  001089  E0                 	db	high(float24(28.000000000000000))
  3946  00108A  41                 	db	low highword(float24(28.000000000000000))
  3947  00108B  00                 	db	low(float24(32.000000000000000))
  3948  00108C  00                 	db	high(float24(32.000000000000000))
  3949  00108D  42                 	db	low highword(float24(32.000000000000000))
  3950  00108E  00                 	db	low(float24(40.000000000000000))
  3951  00108F  20                 	db	high(float24(40.000000000000000))
  3952  001090  42                 	db	low highword(float24(40.000000000000000))
  3953  001091  00                 	db	low(float24(48.000000000000000))
  3954  001092  40                 	db	high(float24(48.000000000000000))
  3955  001093  42                 	db	low highword(float24(48.000000000000000))
  3956  001094  00                 	db	low(float24(56.000000000000000))
  3957  001095  60                 	db	high(float24(56.000000000000000))
  3958  001096  42                 	db	low highword(float24(56.000000000000000))
  3959  001097  00                 	db	low(float24(64.000000000000000))
  3960  001098  80                 	db	high(float24(64.000000000000000))
  3961  001099  42                 	db	low highword(float24(64.000000000000000))
  3962  00109A  00                 	db	low(float24(80.000000000000000))
  3963  00109B  A0                 	db	high(float24(80.000000000000000))
  3964  00109C  42                 	db	low highword(float24(80.000000000000000))
  3965  00109D  00                 	db	low(float24(96.000000000000000))
  3966  00109E  C0                 	db	high(float24(96.000000000000000))
  3967  00109F  42                 	db	low highword(float24(96.000000000000000))
  3968  0010A0  00                 	db	low(float24(112.00000000000000))
  3969  0010A1  E0                 	db	high(float24(112.00000000000000))
  3970  0010A2  42                 	db	low highword(float24(112.00000000000000))
  3971  0010A3  00                 	db	low(float24(128.00000000000000))
  3972  0010A4  00                 	db	high(float24(128.00000000000000))
  3973  0010A5  43                 	db	low highword(float24(128.00000000000000))
  3974  0010A6  00                 	db	low(float24(160.00000000000000))
  3975  0010A7  20                 	db	high(float24(160.00000000000000))
  3976  0010A8  43                 	db	low highword(float24(160.00000000000000))
  3977  0010A9  00                 	db	low(float24(192.00000000000000))
  3978  0010AA  40                 	db	high(float24(192.00000000000000))
  3979  0010AB  43                 	db	low highword(float24(192.00000000000000))
  3980  0010AC  00                 	db	low(float24(224.00000000000000))
  3981  0010AD  60                 	db	high(float24(224.00000000000000))
  3982  0010AE  43                 	db	low highword(float24(224.00000000000000))
  3983  0010AF  00                 	db	low(float24(256.00000000000000))
  3984  0010B0  80                 	db	high(float24(256.00000000000000))
  3985  0010B1  43                 	db	low highword(float24(256.00000000000000))
  3986                           	file	"Uart.c"
  3987                           	line	44
  3988                           
  3989                           ;initializer for F1805
  3990  0010B2  30                 	db	low(030h)
  3991  0010B3  30                 	db	low(030h)
  3992  0010B4  30                 	db	low(030h)
  3993  0010B5  30                 	db	low(030h)
  3994  0010B6  30                 	db	low(030h)
  3995  0010B7  30                 	db	low(030h)
  3996  0010B8  30                 	db	low(030h)
  3997  0010B9  30                 	db	low(030h)
  3998                           	file	"MAIN.h"
  3999                           	line	101
  4000                           
  4001                           ;initializer for _pattern0
  4002  0010BA  00                 	db	low(0)
  4003  0010BB  00                 	db	low(0)
  4004  0010BC  00                 	db	low(0)
  4005  0010BD  00                 	db	low(0)
  4006  0010BE  00                 	db	low(0)
  4007  0010BF  00                 	db	low(0)
  4008  0010C0  00                 	db	low(0)
  4009  0010C1  1F                 	db	low(01Fh)
  4010                           	line	102
  4011                           
  4012                           ;initializer for _pattern1
  4013  0010C2  00                 	db	low(0)
  4014  0010C3  00                 	db	low(0)
  4015  0010C4  00                 	db	low(0)
  4016  0010C5  00                 	db	low(0)
  4017  0010C6  00                 	db	low(0)
  4018  0010C7  00                 	db	low(0)
  4019  0010C8  1F                 	db	low(01Fh)
  4020  0010C9  1F                 	db	low(01Fh)
  4021                           	line	103
  4022                           
  4023                           ;initializer for _pattern2
  4024  0010CA  00                 	db	low(0)
  4025  0010CB  00                 	db	low(0)
  4026  0010CC  00                 	db	low(0)
  4027  0010CD  00                 	db	low(0)
  4028  0010CE  00                 	db	low(0)
  4029  0010CF  1F                 	db	low(01Fh)
  4030  0010D0  1F                 	db	low(01Fh)
  4031  0010D1  1F                 	db	low(01Fh)
  4032                           	line	104
  4033                           
  4034                           ;initializer for _pattern3
  4035  0010D2  00                 	db	low(0)
  4036  0010D3  00                 	db	low(0)
  4037  0010D4  00                 	db	low(0)
  4038  0010D5  00                 	db	low(0)
  4039  0010D6  1F                 	db	low(01Fh)
  4040  0010D7  1F                 	db	low(01Fh)
  4041  0010D8  1F                 	db	low(01Fh)
  4042  0010D9  1F                 	db	low(01Fh)
  4043                           	line	105
  4044                           
  4045                           ;initializer for _pattern4
  4046  0010DA  00                 	db	low(0)
  4047  0010DB  00                 	db	low(0)
  4048  0010DC  00                 	db	low(0)
  4049  0010DD  1F                 	db	low(01Fh)
  4050  0010DE  1F                 	db	low(01Fh)
  4051  0010DF  1F                 	db	low(01Fh)
  4052  0010E0  1F                 	db	low(01Fh)
  4053  0010E1  1F                 	db	low(01Fh)
  4054                           	line	106
  4055                           
  4056                           ;initializer for _pattern5
  4057  0010E2  00                 	db	low(0)
  4058  0010E3  00                 	db	low(0)
  4059  0010E4  1F                 	db	low(01Fh)
  4060  0010E5  1F                 	db	low(01Fh)
  4061  0010E6  1F                 	db	low(01Fh)
  4062  0010E7  1F                 	db	low(01Fh)
  4063  0010E8  1F                 	db	low(01Fh)
  4064  0010E9  1F                 	db	low(01Fh)
  4065                           	line	107
  4066                           
  4067                           ;initializer for _pattern6
  4068  0010EA  00                 	db	low(0)
  4069  0010EB  1F                 	db	low(01Fh)
  4070  0010EC  1F                 	db	low(01Fh)
  4071  0010ED  1F                 	db	low(01Fh)
  4072  0010EE  1F                 	db	low(01Fh)
  4073  0010EF  1F                 	db	low(01Fh)
  4074  0010F0  1F                 	db	low(01Fh)
  4075  0010F1  1F                 	db	low(01Fh)
  4076                           	line	108
  4077                           
  4078                           ;initializer for _pattern7
  4079  0010F2  1F                 	db	low(01Fh)
  4080  0010F3  1F                 	db	low(01Fh)
  4081  0010F4  1F                 	db	low(01Fh)
  4082  0010F5  1F                 	db	low(01Fh)
  4083  0010F6  1F                 	db	low(01Fh)
  4084  0010F7  1F                 	db	low(01Fh)
  4085  0010F8  1F                 	db	low(01Fh)
  4086  0010F9  1F                 	db	low(01Fh)
  4087                                   psect   smallconst,class=SMALLCONST,spac
                                 e=0,reloc=2
  4088  001000  00                 	db	0	;reserve
  4089                           	global	_Lcd_L1
  4090                           	line	89
  4091                           	global	_Lcd_L1
  4092  001001                     _Lcd_L1:
  4093  001001  48                 	db	low(048h)
  4094  001002  65                 	db	low(065h)
  4095  001003  6C                 	db	low(06Ch)
  4096  001004  6C                 	db	low(06Ch)
  4097  001005  6F                 	db	low(06Fh)
  4098  001006  20                 	db	low(020h)
  4099  001007  41                 	db	low(041h)
  4100  001008  6C                 	db	low(06Ch)
  4101  001009  6C                 	db	low(06Ch)
  4102  00100A  20                 	db	low(020h)
  4103  00100B  20                 	db	low(020h)
  4104  00100C  20                 	db	low(020h)
  4105  00100D  20                 	db	low(020h)
  4106  00100E  20                 	db	low(020h)
  4107  00100F  20                 	db	low(020h)
  4108  001010  20                 	db	low(020h)
  4109  001011  00                 	db	low(0)
  4110                           	global	_Lcd_L2
  4111                           	line	90
  4112                           	global	_Lcd_L2
  4113  001012                     _Lcd_L2:
  4114  001012  48                 	db	low(048h)
  4115  001013  49                 	db	low(049h)
  4116  001014  20                 	db	low(020h)
  4117  001015  57                 	db	low(057h)
  4118  001016  65                 	db	low(065h)
  4119  001017  6C                 	db	low(06Ch)
  4120  001018  63                 	db	low(063h)
  4121  001019  6F                 	db	low(06Fh)
  4122  00101A  6D                 	db	low(06Dh)
  4123  00101B  65                 	db	low(065h)
  4124  00101C  20                 	db	low(020h)
  4125  00101D  2E                 	db	low(02Eh)
  4126  00101E  2E                 	db	low(02Eh)
  4127  00101F  2E                 	db	low(02Eh)
  4128  001020  2E                 	db	low(02Eh)
  4129  001021  2E                 	db	low(02Eh)
  4130  001022  00                 	db	low(0)
  4131                           	global	_Lcd_L3
  4132                           	line	91
  4133                           	global	_Lcd_L3
  4134  001023                     _Lcd_L3:
  4135  001023  20                 	db	low(020h)
  4136  001024  4B                 	db	low(04Bh)
  4137  001025  45                 	db	low(045h)
  4138  001026  59                 	db	low(059h)
  4139  001027  20                 	db	low(020h)
  4140  001028  20                 	db	low(020h)
  4141  001029  20                 	db	low(020h)
  4142  00102A  41                 	db	low(041h)
  4143  00102B  44                 	db	low(044h)
  4144  00102C  43                 	db	low(043h)
  4145  00102D  20                 	db	low(020h)
  4146  00102E  43                 	db	low(043h)
  4147  00102F  6F                 	db	low(06Fh)
  4148  001030  75                 	db	low(075h)
  4149  001031  6E                 	db	low(06Eh)
  4150  001032  74                 	db	low(074h)
  4151  001033  00                 	db	low(0)
  4152                           	global	_Lcd_L4
  4153                           	line	92
  4154                           	global	_Lcd_L4
  4155  001034                     _Lcd_L4:
  4156  001034  20                 	db	low(020h)
  4157  001035  20                 	db	low(020h)
  4158  001036  20                 	db	low(020h)
  4159  001037  20                 	db	low(020h)
  4160  001038  20                 	db	low(020h)
  4161  001039  20                 	db	low(020h)
  4162  00103A  20                 	db	low(020h)
  4163  00103B  20                 	db	low(020h)
  4164  00103C  20                 	db	low(020h)
  4165  00103D  20                 	db	low(020h)
  4166  00103E  20                 	db	low(020h)
  4167  00103F  20                 	db	low(020h)
  4168  001040  20                 	db	low(020h)
  4169  001041  20                 	db	low(020h)
  4170  001042  20                 	db	low(020h)
  4171  001043  20                 	db	low(020h)
  4172  001044  00                 	db	low(0)
  4173                           	global	_Lcd_L1
  4174                           	global	_Lcd_L2
  4175                           	global	_Lcd_L3
  4176                           	global	_Lcd_L4
  4177                           	global	_data
  4178                           	global	_data
  4179  000000                     _data  equ     0
  4180                           
  4181                           	DABS	1,0,128	;_data
  4182                           	global	_Lcd_LINE1
  4183                           	global	_Lcd_LINE1
  4184  000000                     _Lcd_LINE1  equ     146
  4185                           
  4186                           	DABS	1,146,16	;_Lcd_LINE1
  4187                           	global	_Lcd_LINE2
  4188                           	global	_Lcd_LINE2
  4189  000000                     _Lcd_LINE2  equ     128
  4190                           
  4191                           	DABS	1,128,16	;_Lcd_LINE2
  4192                           	global	_i2c_rx_buff
  4193                           	global	_i2c_rx_buff
  4194  000000                     _i2c_rx_buff  equ     176
  4195                           
  4196                           	DABS	1,176,8	;_i2c_rx_buff
  4197                           	global	_i2c_tx_buff
  4198                           	global	_i2c_tx_buff
  4199  000000                     _i2c_tx_buff  equ     168
  4200                           
  4201                           	DABS	1,168,8	;_i2c_tx_buff
  4202                           	global	_cur_gain
  4203                           	global	_cur_gain
  4204  000000                     _cur_gain  equ     186
  4205                           
  4206                           	DABS	1,186,3	;_cur_gain
  4207                           	global	_ADC_Count
  4208                           	global	_ADC_Count
  4209  000000                     _ADC_Count  equ     184
  4210                           
  4211                           	DABS	1,184,2	;_ADC_Count
  4212                           	global	_DATA
  4213                           	global	_DATA
  4214  000000                     _DATA  equ     144
  4215                           
  4216                           	DABS	1,144,2	;_DATA
  4217                           	global	_lcdl1flag
  4218                           	global	_lcdl1flag
  4219  000000                     _lcdl1flag  equ     162
  4220                           
  4221                           	DABS	1,162,2	;_lcdl1flag
  4222                           	global	_FFT_ready_flag
  4223                           	global	_FFT_ready_flag
  4224  000000                     _FFT_ready_flag  equ     164
  4225                           
  4226                           	DABS	1,164,1	;_FFT_ready_flag
  4227                           	global	_dutycurrent
  4228                           	global	_dutycurrent
  4229  000000                     _dutycurrent  equ     166
  4230                           
  4231                           	DABS	1,166,1	;_dutycurrent
  4232                           	global	_dutyvolt
  4233                           	global	_dutyvolt
  4234  000000                     _dutyvolt  equ     165
  4235                           
  4236                           	DABS	1,165,1	;_dutyvolt
  4237                           	global	_keytmr
  4238                           	global	_keytmr
  4239  000000                     _keytmr  equ     167
  4240                           
  4241                           	DABS	1,167,1	;_keytmr
  4242                           	global	_TMR0
  4243  000000                     _TMR0	equ	0xFD6
  4244                           	global	_ADCON0
  4245  000000                     _ADCON0	equ	0xFC2
  4246                           	global	_ADCON1
  4247  000000                     _ADCON1	equ	0xFC1
  4248                           	global	_ADCON2
  4249  000000                     _ADCON2	equ	0xFC0
  4250                           	global	_ADRESH
  4251  000000                     _ADRESH	equ	0xFC4
  4252                           	global	_ADRESL
  4253  000000                     _ADRESL	equ	0xFC3
  4254                           	global	_CCP1CON
  4255  000000                     _CCP1CON	equ	0xFBD
  4256                           	global	_CCP2CON
  4257  000000                     _CCP2CON	equ	0xFBA
  4258                           	global	_CCPR1L
  4259  000000                     _CCPR1L	equ	0xFBE
  4260                           	global	_CCPR2L
  4261  000000                     _CCPR2L	equ	0xFBB
  4262                           	global	_EEADR
  4263  000000                     _EEADR	equ	0xFA9
  4264                           	global	_EECON1
  4265  000000                     _EECON1	equ	0xFA6
  4266                           	global	_EECON2
  4267  000000                     _EECON2	equ	0xFA7
  4268                           	global	_EEDATA
  4269  000000                     _EEDATA	equ	0xFA8
  4270                           	global	_INTCONbits
  4271  000000                     _INTCONbits	equ	0xFF2
  4272                           	global	_OSCCON
  4273  000000                     _OSCCON	equ	0xFD3
  4274                           	global	_OSCTUNE
  4275  000000                     _OSCTUNE	equ	0xF9B
  4276                           	global	_PR2
  4277  000000                     _PR2	equ	0xFCB
  4278                           	global	_RCREG
  4279  000000                     _RCREG	equ	0xFAE
  4280                           	global	_RCSTAbits
  4281  000000                     _RCSTAbits	equ	0xFAB
  4282                           	global	_SPBRG
  4283  000000                     _SPBRG	equ	0xFAF
  4284                           	global	_SPBRGH
  4285  000000                     _SPBRGH	equ	0xFB0
  4286                           	global	_SSPADD
  4287  000000                     _SSPADD	equ	0xFC8
  4288                           	global	_SSPBUF
  4289  000000                     _SSPBUF	equ	0xFC9
  4290                           	global	_SSPCON1
  4291  000000                     _SSPCON1	equ	0xFC6
  4292                           	global	_SSPCON2
  4293  000000                     _SSPCON2	equ	0xFC5
  4294                           	global	_SSPSTAT
  4295  000000                     _SSPSTAT	equ	0xFC7
  4296                           	global	_T0CON
  4297  000000                     _T0CON	equ	0xFD5
  4298                           	global	_T2CON
  4299  000000                     _T2CON	equ	0xFCA
  4300                           	global	_TMR0H
  4301  000000                     _TMR0H	equ	0xFD7
  4302                           	global	_TMR0L
  4303  000000                     _TMR0L	equ	0xFD6
  4304                           	global	_TMR1H
  4305  000000                     _TMR1H	equ	0xFCF
  4306                           	global	_TMR1L
  4307  000000                     _TMR1L	equ	0xFCE
  4308                           	global	_TRISA
  4309  000000                     _TRISA	equ	0xF92
  4310                           	global	_TRISC
  4311  000000                     _TRISC	equ	0xF94
  4312                           	global	_TRISE
  4313  000000                     _TRISE	equ	0xF96
  4314                           	global	_TXREG
  4315  000000                     _TXREG	equ	0xFAD
  4316                           	global	_ACKDT
  4317  000000                     _ACKDT	equ	0x7E2D
  4318                           	global	_ACKEN
  4319  000000                     _ACKEN	equ	0x7E2C
  4320                           	global	_ACKSTAT
  4321  000000                     _ACKSTAT	equ	0x7E2E
  4322                           	global	_ADIE
  4323  000000                     _ADIE	equ	0x7CEE
  4324                           	global	_ADIF
  4325  000000                     _ADIF	equ	0x7CF6
  4326                           	global	_ADON
  4327  000000                     _ADON	equ	0x7E10
  4328                           	global	_BF
  4329  000000                     _BF	equ	0x7E38
  4330                           	global	_BRG16
  4331  000000                     _BRG16	equ	0x7DC3
  4332                           	global	_BRGH
  4333  000000                     _BRGH	equ	0x7D62
  4334                           	global	_EEIF
  4335  000000                     _EEIF	equ	0x7D0C
  4336                           	global	_EEPGD
  4337  000000                     _EEPGD	equ	0x7D37
  4338                           	global	_GIE
  4339  000000                     _GIE	equ	0x7F97
  4340                           	global	_INT0IE
  4341  000000                     _INT0IE	equ	0x7F94
  4342                           	global	_INT0IF
  4343  000000                     _INT0IF	equ	0x7F91
  4344                           	global	_INTEDG0
  4345  000000                     _INTEDG0	equ	0x7F8E
  4346                           	global	_LATA1
  4347  000000                     _LATA1	equ	0x7C49
  4348                           	global	_LATA2
  4349  000000                     _LATA2	equ	0x7C4A
  4350                           	global	_LATA3
  4351  000000                     _LATA3	equ	0x7C4B
  4352                           	global	_LATA4
  4353  000000                     _LATA4	equ	0x7C4C
  4354                           	global	_LATA5
  4355  000000                     _LATA5	equ	0x7C4D
  4356                           	global	_LATB0
  4357  000000                     _LATB0	equ	0x7C50
  4358                           	global	_LATB1
  4359  000000                     _LATB1	equ	0x7C51
  4360                           	global	_LATD1
  4361  000000                     _LATD1	equ	0x7C61
  4362                           	global	_LATD4
  4363  000000                     _LATD4	equ	0x7C64
  4364                           	global	_LATD5
  4365  000000                     _LATD5	equ	0x7C65
  4366                           	global	_LATD6
  4367  000000                     _LATD6	equ	0x7C66
  4368                           	global	_LATD7
  4369  000000                     _LATD7	equ	0x7C67
  4370                           	global	_OERR
  4371  000000                     _OERR	equ	0x7D59
  4372                           	global	_PEN
  4373  000000                     _PEN	equ	0x7E2A
  4374                           	global	_RA6
  4375  000000                     _RA6	equ	0x7C06
  4376                           	global	_RA7
  4377  000000                     _RA7	equ	0x7C07
  4378                           	global	_RC0
  4379  000000                     _RC0	equ	0x7C10
  4380                           	global	_RC1
  4381  000000                     _RC1	equ	0x7C11
  4382                           	global	_RCEN
  4383  000000                     _RCEN	equ	0x7E2B
  4384                           	global	_RCIE
  4385  000000                     _RCIE	equ	0x7CED
  4386                           	global	_RCIF
  4387  000000                     _RCIF	equ	0x7CF5
  4388                           	global	_RD
  4389  000000                     _RD	equ	0x7D30
  4390                           	global	_RD0
  4391  000000                     _RD0	equ	0x7C18
  4392                           	global	_RSEN
  4393  000000                     _RSEN	equ	0x7E29
  4394                           	global	_RW
  4395  000000                     _RW	equ	0x7E3A
  4396                           	global	_RX9
  4397  000000                     _RX9	equ	0x7D5E
  4398                           	global	_SEN
  4399  000000                     _SEN	equ	0x7E28
  4400                           	global	_SSPEN
  4401  000000                     _SSPEN	equ	0x7E35
  4402                           	global	_SSPIF
  4403  000000                     _SSPIF	equ	0x7CF3
  4404                           	global	_SYNC
  4405  000000                     _SYNC	equ	0x7D64
  4406                           	global	_TMR0IE
  4407  000000                     _TMR0IE	equ	0x7F95
  4408                           	global	_TMR0IF
  4409  000000                     _TMR0IF	equ	0x7F92
  4410                           	global	_TMR1IE
  4411  000000                     _TMR1IE	equ	0x7CE8
  4412                           	global	_TMR1IF
  4413  000000                     _TMR1IF	equ	0x7CF0
  4414                           	global	_TMR1ON
  4415  000000                     _TMR1ON	equ	0x7E68
  4416                           	global	_TRISB0
  4417  000000                     _TRISB0	equ	0x7C98
  4418                           	global	_TRISB1
  4419  000000                     _TRISB1	equ	0x7C99
  4420                           	global	_TRISB7
  4421  000000                     _TRISB7	equ	0x7C9F
  4422                           	global	_TRISC1
  4423  000000                     _TRISC1	equ	0x7CA1
  4424                           	global	_TRISC2
  4425  000000                     _TRISC2	equ	0x7CA2
  4426                           	global	_TRISC3
  4427  000000                     _TRISC3	equ	0x7CA3
  4428                           	global	_TRISC4
  4429  000000                     _TRISC4	equ	0x7CA4
  4430                           	global	_TRISD0
  4431  000000                     _TRISD0	equ	0x7CA8
  4432                           	global	_TRISD1
  4433  000000                     _TRISD1	equ	0x7CA9
  4434                           	global	_TRISD2
  4435  000000                     _TRISD2	equ	0x7CAA
  4436                           	global	_TRISD3
  4437  000000                     _TRISD3	equ	0x7CAB
  4438                           	global	_TRISD4
  4439  000000                     _TRISD4	equ	0x7CAC
  4440                           	global	_TRISD5
  4441  000000                     _TRISD5	equ	0x7CAD
  4442                           	global	_TRISD6
  4443  000000                     _TRISD6	equ	0x7CAE
  4444                           	global	_TRISD7
  4445  000000                     _TRISD7	equ	0x7CAF
  4446                           	global	_TRMT
  4447  000000                     _TRMT	equ	0x7D61
  4448                           	global	_TX9
  4449  000000                     _TX9	equ	0x7D66
  4450                           	global	_TXCKP
  4451  000000                     _TXCKP	equ	0x7DC4
  4452                           	global	_TXEN
  4453  000000                     _TXEN	equ	0x7D65
  4454                           	global	_TXIE
  4455  000000                     _TXIE	equ	0x7CEC
  4456                           	global	_TXIF
  4457  000000                     _TXIF	equ	0x7CF4
  4458                           	global	_WCOL
  4459  000000                     _WCOL	equ	0x7E37
  4460                           	global	_WR
  4461  000000                     _WR	equ	0x7D31
  4462                           	global	_WREN
  4463  000000                     _WREN	equ	0x7D32
  4464  001045  00                 	db 0	; dummy byte at the end
  4465                           	psect	intsave_regs,class=BIGRAM,space=1
  4466                           	PSECT	param2,class=BANK2,space=1
  4467                           	GLOBAL	__Lparam2
  4468                           	FNCONF	param2,??,?
  4469                           	GLOBAL	__Labsbss0
  4470  000000                     __Labsbss0	EQU	0
  4471                           	GLOBAL	__Habsbss0
  4472  000000                     __Habsbss0	EQU	189
  4473                           	GLOBAL	__Ldata0
  4474  000000                     __Ldata0	EQU	189
  4475                           	GLOBAL	__Hdata0
  4476  000000                     __Hdata0	EQU	369
  4477                           GLOBAL	__Lparam, __Hparam
  4478                           GLOBAL	__Lparam2, __Hparam2
  4479  000000                     __Lparam	EQU	__Lparam2
  4480  000000                     __Hparam	EQU	__Hparam2


HI-TECH Software PICC-18 Macro Assembler V9.65 build 7190 
Symbol Table                                           Wed Apr 15 11:43:10 2015

                lcd_data@data 0207                            _BF 007E38  
                          _RD 007D30                            _RW 007E3A  
                          _WR 007D31                  ___awdiv@sign 0206  
                         l121 1A0E                           l115 1F1E  
                         l310 1920                           l118 1A0E  
                         l119 19BC                           l240 1D62  
                         l241 1D4C                           l305 1C64  
                         l242 1CF0                           l306 1C64  
                         l243 1D62                           l307 1C24  
                         l244 1D28                           l308 1C64  
                         l245 1D4C                           l280 1694  
                         l425 1DDE                           l266 12FE  
                         l267 1504                           l700 1E9C  
                         l701 1E8E                           l710 1BB4  
                         l703 1E9C                           l704 1EE2  
                         l712 1B9A                           l705 1ECE  
                         l714 1F00                           l707 1EDC  
                         l708 1BD0                           l709 1B70  
                         l680 1EC2                           l681 1DA6  
                         l682 1D92                           l690 1F16  
                         l683 1D80                           l691 1F08  
                         l677 1EC2                           l685 1D8E  
                         l693 1F16                           l829 1E44  
                         l678 1EA2                           l686 1DA6  
                         l687 1D98                           l695 1E72  
                         l696 1E5C                           l689 1DA6  
                         l697 1E60                           l699 1E6E  
                         l974 1F20                           l975 1F22  
                         _GIE 007F97                           _RC0 007C10  
                         _RC1 007C11                           _RD0 007C18  
                         _RA6 007C06                           _RA7 007C07  
                         _PR2 000FCB                           _PEN 007E2A  
                         _SEN 007E28                           _RX9 007D5E  
                         _TX9 007D66                           _isr 1A16  
                        F1805 000129              ?_Initcustom_char 0201  
                        l1210 175A                          l1204 17EE  
                        l1212 17C0                          l1213 175A  
                        l1205 16D6                          l1214 17AA  
                        l1206 16FE                          l1142 1E14  
                        l1215 17E2                          l1207 17C0  
                        l1143 1CEA                          l1208 1748  
                        l1209 1736                          _ADIE 007CEE  
                        _ADIF 007CF6                          ?_isr 0210  
                        _ADON 007E10                          _DATA 000090  
                        _EEIF 007D0C                          _BRGH 007D62  
                        u2100 1BB4                          u2101 1BB0  
                        u2110 19D0                          u2111 19CC  
                        u2200 1E6E                          u2120 1EDC  
                        u2201 1E6A                          u2121 1ED8  
                        u2210 1EB4                          u2211 1EB0  
                        u2220 1EC2                          u2140 1E9C  
                        u2221 1EBE                          u2141 1E98  
                        u2150 1F16                          u2135 1E7E  
                        u2151 1F12                          u2160 1D7A  
                        u2136 1E88                          u2161 1D76  
                        u2170 1D8E                          u2410 1BE6  
                        u2171 1D8A                          u2411 1BE2  
                        u2180 1DA6                          u2420 1C20  
                        u2405 14D6                          u2181 1DA2  
                        u2421 1C1C                          u2406 14DC  
                        u2430 1C64                          u2190 1E58  
                        u2335 132C                          u2431 1C60  
                        u2191 1E54                          u2520 1D24  
                        u2336 1336                          u2600 17D4  
                        u2521 1D20                          u2505 1290  
                        u2345 136A                          u2601 17D0  
                        u2530 1D4C                          u2506 1296  
                        u2346 1370                          u2531 1D48  
                        u2515 12D0                          u2355 13A2  
                        u2540 1D62                          u2516 12D6  
                        u2356 13A8                          u2541 1D5E  
                        u2445 1126                          u2365 13E2  
                        u2446 1130                          u2366 13E8  
                        u2550 16B8                          u2455 1164  
                        u2375 1420                          u2551 16B4  
                        u2456 116A                          u2376 142A  
                        u2560 16E8                          u2465 119C  
                        u2385 145E                          u2561 16E4  
                        u2466 11A2                          u2386 1464  
                        u2570 1722                          u2475 11DC  
                        u2395 1496                          u2571 171E  
                        u2476 11E2                          u2396 149C  
                        u2580 175A                          u2485 121A  
                        u2581 1756                          u2486 1224  
                        u2590 178C                          u2495 1258  
                        u2591 1788                          u2496 125E  
                        _RCIE 007CED                          _RCIF 007CF5  
                        _RCEN 007E2B                          _OERR 007D59  
                        _TMR0 000FD6                          _WCOL 007E37  
                        _RSEN 007E29                          _TRMT 007D61  
                        _TXIE 007CEC                          _WREN 007D32  
                        _TXIF 007CF4                          _TXEN 007D65  
                        _SYNC 007D64                          _data 000000  
                        _main 1922                          fsr0h 000FEA  
                        fsr1h 000FE2                          indf0 000FEF  
                        fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0018  
             __end_of_DelayMs 1D64                         ??_isr 0210  
                       ?_main 0200                         _ACKEN 007E2C  
                       _ACKDT 007E2D               __end_of___awdiv 17F0  
                       _EEADR 000FA9                         _BRG16 007DC3  
                       _EEPGD 007D37                         _T0CON 000FD5  
             ___awdiv@divisor 0203                         _T2CON 000FCA  
                       _LATA1 007C49                         _LATB0 007C50  
                       _LATA2 007C4A                         _LATB1 007C51  
                       _LATA3 007C4B                         _LATA4 007C4C  
                       _LATA5 007C4D                         _LATD1 007C61  
                       _LATD4 007C64                         _LATD5 007C65  
                       _LATD6 007C66                         _LATD7 007C67  
                       i2l122 1ACA                         i2l123 1A62  
                       i2l124 1A9C                         i2l125 1ACA  
             ___awdiv@counter 0205                         _RCREG 000FAE  
                       i2u500 1A60                         i2u501 1A5C  
                       i2u510 1A70                         i2u511 1A6C  
                       i2u520 1A7E                         i2u521 1A7A  
                       i2u530 1AAA                         i2u531 1AA6  
                       i2u540 1AB8                         i2u541 1AB4  
                       i2u490 1A52                         i2u491 1A4E  
                       _TMR0H 000FD7                         _TMR1H 000FCF  
                       _TMR0L 000FD6                         _TMR1L 000FCE  
                       _SPBRG 000FAF                         _TRISA 000F92  
                       _TRISC 000F94                         _TRISE 000F96  
                       _SSPIF 007CF3                         _SSPEN 007E35  
                       _TXCKP 007DC4                         _TXREG 000FAD  
              _i2c_master_ack 1E74              __end_of_Adc_init 1DE0  
                       tablat 000FF5                         status 000FD8  
                __end_of_main 1A16              __end_of_i2c_idle 1EC4  
            __end_of_Read_FFT 1BD2              __end_of_Init_PWM 1E16  
            __end_of_i2c_read 1EE4              __end_of_Init_i2c 1F02  
            __end_of_i2c_stop 1F18                        ??_main 0200  
               __activetblptr 000003                lcd_command@cmd 0207  
      __end_of_i2c_master_ack 1E9E             __end_of_LCD_build 1C66  
               _Init_stat_isr 1F18                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3  
                      _EEDATA 000FA8                        _CCPR1L 000FBE  
                      _CCPR2L 000FBB                        _EECON1 000FA6  
                      _EECON2 000FA7              ___awdiv@dividend 0201  
                      _INT0IE 007F94                        _INT0IF 007F91  
                   ??_DelayMs 020E                        _OSCCON 000FD3  
                      _TMR0IE 007F95                        _TMR0IF 007F92  
                      _TMR1IE 007CE8                        _TMR1IF 007CF0  
                      _SPBRGH 000FB0                        _TMR1ON 007E68  
                      _SSPADD 000FC8                        _TRISB0 007C98  
                      _TRISB1 007C99                        _TRISC1 007CA1  
                      _TRISD0 007CA8                        _TRISC2 007CA2  
                      _TRISD1 007CA9                        _TRISC3 007CA3  
                      _TRISD2 007CAA                        _TRISC4 007CA4  
                      _TRISD3 007CAB                        _TRISB7 007C9F  
                      _TRISD4 007CAC                        _TRISD5 007CAD  
                      _TRISD6 007CAE                        _TRISD7 007CAF  
                      _SSPBUF 000FC9                        _Lcd_L1 1001  
                      _Lcd_L2 1012                        _Lcd_L3 1023  
                      _Lcd_L4 1034                        __Ldata 0000BD  
            __end_of_lcd_data 1506              __end_of_lcd_init 1696  
                   ??___awdiv 0205                        _keytmr 0000A7  
            ___awdiv@quotient 0207                 ?_Set_PWM_Duty 0201  
              _FFT_ready_flag 0000A4             __end_of_USARTinit 1E46  
             ?_i2c_master_ack 0206                  __mediumconst 1046  
              ?_Init_stat_isr 0201                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8  
                LCD_build@ptr 0203                    __accesstop 0080  
                 _i2c_rx_buff 0000B0                   _i2c_tx_buff 0000A8  
              ??_Set_PWM_Duty 0201                     ?_Adc_init 0201  
         Read_FFT@no_readings 0203             __end_of_i2c_start 1DA8  
           __end_of_i2c_write 1E74                     ?_i2c_idle 0207  
                   ?_Read_FFT 0201                     ?_Init_PWM 0201  
                   ?_i2c_read 0206                     ?_Init_i2c 0201  
                   ?_i2c_stop 0206                       _CCP1CON 000FBD  
                     _CCP2CON 000FBA                       _ACKSTAT 007E2E  
                  ??_Adc_init 0201               ??_Init_stat_isr 0201  
                     _INTEDG0 007F8E                       _OSCTUNE 000F9B  
                     _SSPCON1 000FC6                       _SSPCON2 000FC5  
                   ?_lcd_data 0207                     ?_lcd_init 0201  
                     _SSPSTAT 000FC7                    ??_i2c_idle 0207  
                     _DelayMs 1CEC                    ??_Read_FFT 0204  
                  ??_Init_PWM 0201                    ??_i2c_read 0206  
                  ??_Init_i2c 0201                    ??_i2c_stop 0206  
                   _ADC_Count 0000B8                       __Hdata0 000171  
                     __Ldata0 0000BD                       __Hparam 021F  
                     __Lparam 0200                       ___awdiv 1696  
              _Disp_Mill_fill 1F22                       __ramtop 1000  
                     _gainarr 0000BD                    ??_lcd_data 0208  
                  ??_lcd_init 0201                     DelayMs@Ms 020C  
                   _LCD_build 1BD2          __end_of_Set_PWM_Duty 1CEC  
               __Lmediumconst 1046                       int_func 0008  
                   _RCSTAbits 000FAB        __end_of_Disp_Mill_fill 1F24  
            ??_i2c_master_ack 0207                 i2c_write@data 0206  
                   _USARTinit 1E16                    ?_LCD_build 0202  
                   Read_FFT@i 0204                 ??_lcd_command 0208  
                   _Lcd_LINE1 000092                     _Lcd_LINE2 000080  
             ?_Disp_Mill_fill 0201             ??_Initcustom_char 0201  
         _Calc_percentageFull 1F20                    LCD_build@i 0205  
                  ?_USARTinit 0201                     _i2c_start 1D64  
                 __end_of_isr 1B04                     _i2c_write 1E46  
                   __Habsbss0 0000BD                     __Labsbss0 000000  
        ?_Calc_percentageFull 0201           __end_of_lcd_command 1300  
                  ?_i2c_start 0206                    ?_i2c_write 0206  
       ??_Calc_percentageFull 0201                   ??_LCD_build 0205  
                    ?_DelayMs 020C                      ?___awdiv 0201  
                   _lcdl1flag 0000A2                  _Set_PWM_Duty 1C66  
                 __smallconst 1000         __end_of_Init_stat_isr 1F20  
                 ??_USARTinit 0201                   _lcd_command 10FA  
      i2c_master_ack@ack_type 0206                      _Adc_init 1DA8  
                 ??_i2c_start 0207                   ??_i2c_write 0207  
            Read_FFT@idx_addr 0201                      _i2c_idle 1E9E  
                    _Read_FFT 1B04                      _Init_PWM 1DE0  
                    _i2c_read 1EC4                      _Init_i2c 1EE4  
                    _i2c_stop 1F02               _Initcustom_char 17F0  
            ??_Disp_Mill_fill 0201                      __Hparam2 021F  
                    __Lparam2 0200                  __Lsmallconst 1000  
                    __config1 00F0FF                      __config2 00FEF9  
                    __config3 007DFF                      __config4 00FFFE  
                    __config5 00FFFF                      __config6 00FFFF  
                    __config7 00BFFF             DelayMs@delay_cnst 020E  
                    _lcd_data 1300                      _lcd_init 1506  
                    _cur_gain 0000BA                      _pattern0 000131  
                    _pattern1 000139                      _pattern2 000141  
                    _pattern3 000149                      _pattern4 000151  
                    _pattern5 000159                      _pattern6 000161  
                    _pattern7 000169                      _dutyvolt 0000A5  
                 _dutycurrent 0000A6                    _INTCONbits 000FF2  
     __end_of_Initcustom_char 1922                      intlevel2 1F24  
              i2c_start@stype 0206   __end_of_Calc_percentageFull 1F22  
           LCD_build@location 0202                  ?_lcd_command 0207  
